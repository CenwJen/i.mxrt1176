Component: Arm Compiler for Embedded 6.22 Tool: armlink [5ee90200]

==============================================================================

Section Cross References

    flexcan_interrupt_transfer.o(.text.main) refers to board.o(.text.BOARD_ConfigMPU) for BOARD_ConfigMPU
    flexcan_interrupt_transfer.o(.text.main) refers to pin_mux.o(.text.BOARD_InitPins) for BOARD_InitPins
    flexcan_interrupt_transfer.o(.text.main) refers to clock_config.o(.text.BOARD_BootClockRUN) for BOARD_BootClockRUN
    flexcan_interrupt_transfer.o(.text.main) refers to board.o(.text.BOARD_InitDebugConsole) for BOARD_InitDebugConsole
    flexcan_interrupt_transfer.o(.text.main) refers to flexcan_interrupt_transfer.o(.rodata.str1.1) for .L.str
    flexcan_interrupt_transfer.o(.text.main) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    flexcan_interrupt_transfer.o(.text.main) refers to flexcan_interrupt_transfer.o(.bss.txIdentifier) for txIdentifier
    flexcan_interrupt_transfer.o(.text.main) refers to flexcan_interrupt_transfer.o(.bss.rxIdentifier) for rxIdentifier
    flexcan_interrupt_transfer.o(.text.main) refers to fsl_flexcan.o(.text.FLEXCAN_GetDefaultConfig) for FLEXCAN_GetDefaultConfig
    flexcan_interrupt_transfer.o(.text.main) refers to memset.o(.text) for memset
    flexcan_interrupt_transfer.o(.text.main) refers to flexcan_interrupt_transfer.o(.rodata.s_clockSourceName) for s_clockSourceName
    flexcan_interrupt_transfer.o(.text.main) refers to fsl_clock.o(.text.CLOCK_GetFreq) for CLOCK_GetFreq
    flexcan_interrupt_transfer.o(.text.main) refers to fsl_flexcan.o(.text.FLEXCAN_CalculateImprovedTimingValues) for FLEXCAN_CalculateImprovedTimingValues
    flexcan_interrupt_transfer.o(.text.main) refers to memcpy.o(.text) for memcpy
    flexcan_interrupt_transfer.o(.text.main) refers to fsl_flexcan.o(.text.FLEXCAN_Init) for FLEXCAN_Init
    flexcan_interrupt_transfer.o(.text.main) refers to flexcan_interrupt_transfer.o(.bss.flexcanHandle) for flexcanHandle
    flexcan_interrupt_transfer.o(.text.main) refers to flexcan_interrupt_transfer.o(.text.flexcan_callback) for flexcan_callback
    flexcan_interrupt_transfer.o(.text.main) refers to fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle) for FLEXCAN_TransferCreateHandle
    flexcan_interrupt_transfer.o(.text.main) refers to fsl_flexcan.o(.text.FLEXCAN_SetRxMbGlobalMask) for FLEXCAN_SetRxMbGlobalMask
    flexcan_interrupt_transfer.o(.text.main) refers to fsl_flexcan.o(.text.FLEXCAN_SetRxMbConfig) for FLEXCAN_SetRxMbConfig
    flexcan_interrupt_transfer.o(.text.main) refers to fsl_flexcan.o(.text.FLEXCAN_SetTxMbConfig) for FLEXCAN_SetTxMbConfig
    flexcan_interrupt_transfer.o(.text.main) refers to flexcan_interrupt_transfer.o(.bss.frame) for frame
    flexcan_interrupt_transfer.o(.text.main) refers to flexcan_interrupt_transfer.o(.bss.txXfer) for txXfer
    flexcan_interrupt_transfer.o(.text.main) refers to flexcan_interrupt_transfer.o(.bss.txComplete) for txComplete
    flexcan_interrupt_transfer.o(.text.main) refers to flexcan_interrupt_transfer.o(.bss.rxComplete) for rxComplete
    flexcan_interrupt_transfer.o(.text.main) refers to fsl_flexcan.o(.text.FLEXCAN_TransferSendNonBlocking) for FLEXCAN_TransferSendNonBlocking
    flexcan_interrupt_transfer.o(.text.main) refers to fsl_common_arm.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    flexcan_interrupt_transfer.o(.text.main) refers to flexcan_interrupt_transfer.o(.bss.rxXfer) for rxXfer
    flexcan_interrupt_transfer.o(.text.main) refers to fsl_flexcan.o(.text.FLEXCAN_TransferReceiveNonBlocking) for FLEXCAN_TransferReceiveNonBlocking
    flexcan_interrupt_transfer.o(.text.main) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    flexcan_interrupt_transfer.o(.ARM.exidx.text.main) refers to flexcan_interrupt_transfer.o(.text.main) for [Anonymous Symbol]
    flexcan_interrupt_transfer.o(.text.flexcan_callback) refers to flexcan_interrupt_transfer.o(.bss.wakenUp) for wakenUp
    flexcan_interrupt_transfer.o(.text.flexcan_callback) refers to flexcan_interrupt_transfer.o(.bss.txComplete) for txComplete
    flexcan_interrupt_transfer.o(.text.flexcan_callback) refers to flexcan_interrupt_transfer.o(.bss.rxComplete) for rxComplete
    flexcan_interrupt_transfer.o(.ARM.exidx.text.flexcan_callback) refers to flexcan_interrupt_transfer.o(.text.flexcan_callback) for [Anonymous Symbol]
    pin_mux.o(.ARM.exidx.text.BOARD_InitBootPins) refers to pin_mux.o(.text.BOARD_InitBootPins) for [Anonymous Symbol]
    pin_mux.o(.ARM.exidx.text.BOARD_InitPins) refers to pin_mux.o(.text.BOARD_InitPins) for [Anonymous Symbol]
    board.o(.text.BOARD_DebugConsoleSrcFreq) refers to board.o(.rodata.s_clockSourceName) for s_clockSourceName
    board.o(.text.BOARD_DebugConsoleSrcFreq) refers to fsl_clock.o(.text.CLOCK_GetFreq) for CLOCK_GetFreq
    board.o(.text.BOARD_DebugConsoleSrcFreq) refers to board.o(.rodata.str1.1) for .L.str.4
    board.o(.text.BOARD_DebugConsoleSrcFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    board.o(.ARM.exidx.text.BOARD_DebugConsoleSrcFreq) refers to board.o(.text.BOARD_DebugConsoleSrcFreq) for [Anonymous Symbol]
    board.o(.text.BOARD_InitDebugConsole) refers to board.o(.rodata.s_clockSourceName) for s_clockSourceName
    board.o(.text.BOARD_InitDebugConsole) refers to fsl_clock.o(.text.CLOCK_GetFreq) for CLOCK_GetFreq
    board.o(.text.BOARD_InitDebugConsole) refers to fsl_debug_console.o(.text.DbgConsole_Init) for DbgConsole_Init
    board.o(.text.BOARD_InitDebugConsole) refers to board.o(.rodata.str1.1) for .L.str.4
    board.o(.text.BOARD_InitDebugConsole) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    board.o(.ARM.exidx.text.BOARD_InitDebugConsole) refers to board.o(.text.BOARD_InitDebugConsole) for [Anonymous Symbol]
    board.o(.text.BOARD_ConfigMPU) refers to board.o(.rodata.str1.1) for .L.str.1
    board.o(.text.BOARD_ConfigMPU) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    board.o(.ARM.exidx.text.BOARD_ConfigMPU) refers to board.o(.text.BOARD_ConfigMPU) for [Anonymous Symbol]
    board.o(.ARM.exidx.text.BOARD_SD_Pin_Config) refers to board.o(.text.BOARD_SD_Pin_Config) for [Anonymous Symbol]
    board.o(.ARM.exidx.text.BOARD_MMC_Pin_Config) refers to board.o(.text.BOARD_MMC_Pin_Config) for [Anonymous Symbol]
    clock_config.o(.text.BOARD_InitBootClocks) refers to clock_config.o(.text.BOARD_BootClockRUN) for BOARD_BootClockRUN
    clock_config.o(.ARM.exidx.text.BOARD_InitBootClocks) refers to clock_config.o(.text.BOARD_InitBootClocks) for [Anonymous Symbol]
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_dcdc.o(.text.DCDC_BootIntoDCM) for DCDC_BootIntoDCM
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_pmu.o(.text.PMU_EnableBodyBias) for PMU_EnableBodyBias
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_pmu.o(.text.PMU_StaticEnableLpsrAnaLdoBypassMode) for PMU_StaticEnableLpsrAnaLdoBypassMode
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_pmu.o(.text.PMU_StaticEnableLpsrDigLdoBypassMode) for PMU_StaticEnableLpsrDigLdoBypassMode
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_OSC_Set1MHzOutputBehavior) for CLOCK_OSC_Set1MHzOutputBehavior
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_OSC_EnableOscRc400M) for CLOCK_OSC_EnableOscRc400M
    clock_config.o(.text.BOARD_BootClockRUN) refers to clock_config.o(.rodata.armPllConfig_BOARD_BootClockRUN) for armPllConfig_BOARD_BootClockRUN
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_InitArmPll) for CLOCK_InitArmPll
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_SetPllBypass) for CLOCK_SetPllBypass
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_DeinitSysPll1) for CLOCK_DeinitSysPll1
    clock_config.o(.text.BOARD_BootClockRUN) refers to clock_config.o(.rodata.sysPll2Config_BOARD_BootClockRUN) for sysPll2Config_BOARD_BootClockRUN
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_InitSysPll2) for CLOCK_InitSysPll2
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_InitPfd) for CLOCK_InitPfd
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_InitSysPll3) for CLOCK_InitSysPll3
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_DeinitAudioPll) for CLOCK_DeinitAudioPll
    clock_config.o(.text.BOARD_BootClockRUN) refers to clock_config.o(.rodata.videoPllConfig_BOARD_BootClockRUN) for videoPllConfig_BOARD_BootClockRUN
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_InitVideoPll) for CLOCK_InitVideoPll
    clock_config.o(.text.BOARD_BootClockRUN) refers to clock_config.o(.rodata.s_clockSourceName) for s_clockSourceName
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_GetFreq) for CLOCK_GetFreq
    clock_config.o(.text.BOARD_BootClockRUN) refers to system_mimxrt1176_cm7.o(.data.SystemCoreClock) for SystemCoreClock
    clock_config.o(.text.BOARD_BootClockRUN) refers to clock_config.o(.rodata.str1.1) for .L.str.2
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    clock_config.o(.ARM.exidx.text.BOARD_BootClockRUN) refers to clock_config.o(.text.BOARD_BootClockRUN) for [Anonymous Symbol]
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_dcdc.o(.text.DCDC_BootIntoDCM) for DCDC_BootIntoDCM
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_pmu.o(.text.PMU_EnableBodyBias) for PMU_EnableBodyBias
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_pmu.o(.text.PMU_StaticEnableLpsrAnaLdoBypassMode) for PMU_StaticEnableLpsrAnaLdoBypassMode
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_pmu.o(.text.PMU_StaticEnableLpsrDigLdoBypassMode) for PMU_StaticEnableLpsrDigLdoBypassMode
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_clock.o(.text.CLOCK_OSC_Set1MHzOutputBehavior) for CLOCK_OSC_Set1MHzOutputBehavior
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_clock.o(.text.CLOCK_OSC_EnableOscRc400M) for CLOCK_OSC_EnableOscRc400M
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to clock_config.o(.rodata.armPllConfig_BOARD_BootClockRUN_800M) for armPllConfig_BOARD_BootClockRUN_800M
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_clock.o(.text.CLOCK_InitArmPll) for CLOCK_InitArmPll
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_clock.o(.text.CLOCK_SetPllBypass) for CLOCK_SetPllBypass
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_clock.o(.text.CLOCK_DeinitSysPll1) for CLOCK_DeinitSysPll1
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to clock_config.o(.rodata.sysPll2Config_BOARD_BootClockRUN_800M) for sysPll2Config_BOARD_BootClockRUN_800M
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_clock.o(.text.CLOCK_InitSysPll2) for CLOCK_InitSysPll2
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_clock.o(.text.CLOCK_InitPfd) for CLOCK_InitPfd
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_clock.o(.text.CLOCK_InitSysPll3) for CLOCK_InitSysPll3
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_clock.o(.text.CLOCK_DeinitAudioPll) for CLOCK_DeinitAudioPll
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to clock_config.o(.rodata.videoPllConfig_BOARD_BootClockRUN_800M) for videoPllConfig_BOARD_BootClockRUN_800M
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_clock.o(.text.CLOCK_InitVideoPll) for CLOCK_InitVideoPll
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to clock_config.o(.rodata.s_clockSourceName) for s_clockSourceName
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_clock.o(.text.CLOCK_GetFreq) for CLOCK_GetFreq
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to system_mimxrt1176_cm7.o(.data.SystemCoreClock) for SystemCoreClock
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to clock_config.o(.rodata.str1.1) for .L.str.2
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    clock_config.o(.ARM.exidx.text.BOARD_BootClockRUN_800M) refers to clock_config.o(.text.BOARD_BootClockRUN_800M) for [Anonymous Symbol]
    fsl_str.o(.text.StrFormatPrintf) refers to strlen.o(.text) for strlen
    fsl_str.o(.text.StrFormatPrintf) refers to memcpy.o(.text) for memcpy
    fsl_str.o(.ARM.exidx.text.StrFormatPrintf) refers to fsl_str.o(.text.StrFormatPrintf) for [Anonymous Symbol]
    fsl_str.o(.text.StrFormatScanf) refers to errno.o(i.__aeabi_errno_addr) for __aeabi_errno_addr
    fsl_str.o(.text.StrFormatScanf) refers to strtoul.o(.text) for strtoul
    fsl_str.o(.text.StrFormatScanf) refers to strlen.o(.text) for strlen
    fsl_str.o(.text.StrFormatScanf) refers to memcpy.o(.text) for memcpy
    fsl_str.o(.ARM.exidx.text.StrFormatScanf) refers to fsl_str.o(.text.StrFormatScanf) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Init) refers to fsl_debug_console.o(.bss.s_debugConsole) for s_debugConsole
    fsl_debug_console.o(.text.DbgConsole_Init) refers to fsl_adapter_lpuart.o(.text.HAL_UartInit) for HAL_UartInit
    fsl_debug_console.o(.text.DbgConsole_Init) refers to fsl_adapter_lpuart.o(.text.HAL_UartSendBlocking) for HAL_UartSendBlocking
    fsl_debug_console.o(.text.DbgConsole_Init) refers to fsl_adapter_lpuart.o(.text.HAL_UartReceiveBlocking) for HAL_UartReceiveBlocking
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Init) refers to fsl_debug_console.o(.text.DbgConsole_Init) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Deinit) refers to fsl_debug_console.o(.bss.s_debugConsole) for s_debugConsole
    fsl_debug_console.o(.text.DbgConsole_Deinit) refers to fsl_adapter_lpuart.o(.text.HAL_UartDeinit) for HAL_UartDeinit
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Deinit) refers to fsl_debug_console.o(.text.DbgConsole_Deinit) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Printf) refers to fsl_debug_console.o(.text.DbgConsole_Vprintf) for DbgConsole_Vprintf
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Printf) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Vprintf) refers to fsl_debug_console.o(.bss.s_debugConsole) for s_debugConsole
    fsl_debug_console.o(.text.DbgConsole_Vprintf) refers to memcpy.o(.text) for memcpy
    fsl_debug_console.o(.text.DbgConsole_Vprintf) refers to strlen.o(.text) for strlen
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Vprintf) refers to fsl_debug_console.o(.text.DbgConsole_Vprintf) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Putchar) refers to fsl_debug_console.o(.bss.s_debugConsole) for s_debugConsole
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Putchar) refers to fsl_debug_console.o(.text.DbgConsole_Putchar) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Scanf) refers to fsl_debug_console.o(.bss.s_debugConsole) for s_debugConsole
    fsl_debug_console.o(.text.DbgConsole_Scanf) refers to fsl_str.o(.text.StrFormatScanf) for StrFormatScanf
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Scanf) refers to fsl_debug_console.o(.text.DbgConsole_Scanf) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Getchar) refers to fsl_debug_console.o(.bss.s_debugConsole) for s_debugConsole
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Getchar) refers to fsl_debug_console.o(.text.DbgConsole_Getchar) for [Anonymous Symbol]
    fsl_assert.o(.text.__aeabi_assert) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    fsl_assert.o(.ARM.exidx.text.__aeabi_assert) refers to fsl_assert.o(.text.__aeabi_assert) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_GetInstance) refers to fsl_flexcan.o(.rodata.cst16) for s_flexcanBases
    fsl_flexcan.o(.text.FLEXCAN_GetInstance) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str
    fsl_flexcan.o(.text.FLEXCAN_GetInstance) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_GetInstance) refers to fsl_flexcan.o(.text.FLEXCAN_GetInstance) for [Anonymous Symbol]
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_EnterFreezeMode) refers to fsl_flexcan.o(.text.FLEXCAN_EnterFreezeMode) for [Anonymous Symbol]
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_ExitFreezeMode) refers to fsl_flexcan.o(.text.FLEXCAN_ExitFreezeMode) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_SetBitRate) refers to fsl_flexcan.o(.text.FLEXCAN_CalculateImprovedTimingValues) for FLEXCAN_CalculateImprovedTimingValues
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetBitRate) refers to fsl_flexcan.o(.text.FLEXCAN_SetBitRate) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_CalculateImprovedTimingValues) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.13
    fsl_flexcan.o(.text.FLEXCAN_CalculateImprovedTimingValues) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_CalculateImprovedTimingValues) refers to fsl_flexcan.o(.text.FLEXCAN_CalculateImprovedTimingValues) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_SetTimingConfig) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.2
    fsl_flexcan.o(.text.FLEXCAN_SetTimingConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetTimingConfig) refers to fsl_flexcan.o(.text.FLEXCAN_SetTimingConfig) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_SetFDBitRate) refers to fsl_flexcan.o(.text.FLEXCAN_FDCalculateImprovedTimingValues) for FLEXCAN_FDCalculateImprovedTimingValues
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetFDBitRate) refers to fsl_flexcan.o(.text.FLEXCAN_SetFDBitRate) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_FDCalculateImprovedTimingValues) refers to fsl_flexcan.o(.text.FLEXCAN_CalculateImprovedNominalTimingValues) for FLEXCAN_CalculateImprovedNominalTimingValues
    fsl_flexcan.o(.text.FLEXCAN_FDCalculateImprovedTimingValues) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.1
    fsl_flexcan.o(.text.FLEXCAN_FDCalculateImprovedTimingValues) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_FDCalculateImprovedTimingValues) refers to fsl_flexcan.o(.text.FLEXCAN_FDCalculateImprovedTimingValues) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_SetFDTimingConfig) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.2
    fsl_flexcan.o(.text.FLEXCAN_SetFDTimingConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetFDTimingConfig) refers to fsl_flexcan.o(.text.FLEXCAN_SetFDTimingConfig) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_Init) refers to fsl_flexcan.o(.rodata.cst16) for s_flexcanBases
    fsl_flexcan.o(.text.FLEXCAN_Init) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str
    fsl_flexcan.o(.text.FLEXCAN_Init) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.text.FLEXCAN_Init) refers to fsl_flexcan.o(.rodata.cst4) for s_flexcanClock
    fsl_flexcan.o(.text.FLEXCAN_Init) refers to fsl_flexcan.o(.text.FLEXCAN_Reset) for FLEXCAN_Reset
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_Init) refers to fsl_flexcan.o(.text.FLEXCAN_Init) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_Reset) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.1
    fsl_flexcan.o(.text.FLEXCAN_Reset) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_Reset) refers to fsl_flexcan.o(.text.FLEXCAN_Reset) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_FDInit) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.7
    fsl_flexcan.o(.text.FLEXCAN_FDInit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.text.FLEXCAN_FDInit) refers to fsl_flexcan.o(.text.FLEXCAN_Init) for FLEXCAN_Init
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_FDInit) refers to fsl_flexcan.o(.text.FLEXCAN_FDInit) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_Deinit) refers to fsl_flexcan.o(.text.FLEXCAN_Reset) for FLEXCAN_Reset
    fsl_flexcan.o(.text.FLEXCAN_Deinit) refers to fsl_flexcan.o(.rodata.cst16) for s_flexcanBases
    fsl_flexcan.o(.text.FLEXCAN_Deinit) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str
    fsl_flexcan.o(.text.FLEXCAN_Deinit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.text.FLEXCAN_Deinit) refers to fsl_flexcan.o(.rodata.cst4) for s_flexcanClock
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_Deinit) refers to fsl_flexcan.o(.text.FLEXCAN_Deinit) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_GetDefaultConfig) refers to memset.o(.text) for memset
    fsl_flexcan.o(.text.FLEXCAN_GetDefaultConfig) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.2
    fsl_flexcan.o(.text.FLEXCAN_GetDefaultConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_GetDefaultConfig) refers to fsl_flexcan.o(.text.FLEXCAN_GetDefaultConfig) for [Anonymous Symbol]
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetRxMbGlobalMask) refers to fsl_flexcan.o(.text.FLEXCAN_SetRxMbGlobalMask) for [Anonymous Symbol]
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetRxFifoGlobalMask) refers to fsl_flexcan.o(.text.FLEXCAN_SetRxFifoGlobalMask) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_SetRxIndividualMask) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.1
    fsl_flexcan.o(.text.FLEXCAN_SetRxIndividualMask) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetRxIndividualMask) refers to fsl_flexcan.o(.text.FLEXCAN_SetRxIndividualMask) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_SetTxMbConfig) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.11
    fsl_flexcan.o(.text.FLEXCAN_SetTxMbConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetTxMbConfig) refers to fsl_flexcan.o(.text.FLEXCAN_SetTxMbConfig) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_CalculateImprovedNominalTimingValues) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.13
    fsl_flexcan.o(.text.FLEXCAN_CalculateImprovedNominalTimingValues) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_CalculateImprovedNominalTimingValues) refers to fsl_flexcan.o(.text.FLEXCAN_CalculateImprovedNominalTimingValues) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_SetFDTxMbConfig) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.11
    fsl_flexcan.o(.text.FLEXCAN_SetFDTxMbConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetFDTxMbConfig) refers to fsl_flexcan.o(.text.FLEXCAN_SetFDTxMbConfig) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_SetRxMbConfig) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.11
    fsl_flexcan.o(.text.FLEXCAN_SetRxMbConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetRxMbConfig) refers to fsl_flexcan.o(.text.FLEXCAN_SetRxMbConfig) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_SetFDRxMbConfig) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.11
    fsl_flexcan.o(.text.FLEXCAN_SetFDRxMbConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetFDRxMbConfig) refers to fsl_flexcan.o(.text.FLEXCAN_SetFDRxMbConfig) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_SetRxFifoConfig) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.12
    fsl_flexcan.o(.text.FLEXCAN_SetRxFifoConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetRxFifoConfig) refers to fsl_flexcan.o(.text.FLEXCAN_SetRxFifoConfig) for [Anonymous Symbol]
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_EnableRxFifoDMA) refers to fsl_flexcan.o(.text.FLEXCAN_EnableRxFifoDMA) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_GetMemoryErrorReportStatus) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.21
    fsl_flexcan.o(.text.FLEXCAN_GetMemoryErrorReportStatus) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_GetMemoryErrorReportStatus) refers to fsl_flexcan.o(.text.FLEXCAN_GetMemoryErrorReportStatus) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_WriteTxMb) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.11
    fsl_flexcan.o(.text.FLEXCAN_WriteTxMb) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_WriteTxMb) refers to fsl_flexcan.o(.text.FLEXCAN_WriteTxMb) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_WriteFDTxMb) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.11
    fsl_flexcan.o(.text.FLEXCAN_WriteFDTxMb) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_WriteFDTxMb) refers to fsl_flexcan.o(.text.FLEXCAN_WriteFDTxMb) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_ReadRxMb) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.11
    fsl_flexcan.o(.text.FLEXCAN_ReadRxMb) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_ReadRxMb) refers to fsl_flexcan.o(.text.FLEXCAN_ReadRxMb) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_ReadFDRxMb) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.11
    fsl_flexcan.o(.text.FLEXCAN_ReadFDRxMb) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_ReadFDRxMb) refers to fsl_flexcan.o(.text.FLEXCAN_ReadFDRxMb) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_ReadRxFifo) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.24
    fsl_flexcan.o(.text.FLEXCAN_ReadRxFifo) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_ReadRxFifo) refers to fsl_flexcan.o(.text.FLEXCAN_ReadRxFifo) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferSendBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_WriteTxMb) for FLEXCAN_WriteTxMb
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferSendBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_TransferSendBlocking) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferReceiveBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_ReadRxMb) for FLEXCAN_ReadRxMb
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferReceiveBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_TransferReceiveBlocking) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferFDSendBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_WriteFDTxMb) for FLEXCAN_WriteFDTxMb
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferFDSendBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_TransferFDSendBlocking) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferFDReceiveBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_ReadFDRxMb) for FLEXCAN_ReadFDRxMb
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferFDReceiveBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_TransferFDReceiveBlocking) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferReceiveFifoBlocking) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.24
    fsl_flexcan.o(.text.FLEXCAN_TransferReceiveFifoBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferReceiveFifoBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_TransferReceiveFifoBlocking) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle) refers to memset.o(.text) for memset
    fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle) refers to fsl_flexcan.o(.rodata.cst16) for s_flexcanBases
    fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str
    fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle) refers to fsl_flexcan.o(.bss.s_flexcanHandle) for s_flexcanHandle
    fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle) refers to fsl_flexcan.o(.text.FLEXCAN_TransferHandleIRQ) for FLEXCAN_TransferHandleIRQ
    fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle) refers to fsl_flexcan.o(.data.s_flexcanIsr) for s_flexcanIsr
    fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle) refers to fsl_flexcan.o(.rodata.cst8) for s_flexcanMbIRQ
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferCreateHandle) refers to fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferHandleIRQ) refers to fsl_flexcan.o(.text.FLEXCAN_ReadRxMb) for FLEXCAN_ReadRxMb
    fsl_flexcan.o(.text.FLEXCAN_TransferHandleIRQ) refers to fsl_flexcan.o(.text.FLEXCAN_TransferAbortSend) for FLEXCAN_TransferAbortSend
    fsl_flexcan.o(.text.FLEXCAN_TransferHandleIRQ) refers to fsl_flexcan.o(.text.FLEXCAN_TransferAbortReceive) for FLEXCAN_TransferAbortReceive
    fsl_flexcan.o(.text.FLEXCAN_TransferHandleIRQ) refers to fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortSend) for FLEXCAN_TransferFDAbortSend
    fsl_flexcan.o(.text.FLEXCAN_TransferHandleIRQ) refers to fsl_flexcan.o(.text.FLEXCAN_ReadFDRxMb) for FLEXCAN_ReadFDRxMb
    fsl_flexcan.o(.text.FLEXCAN_TransferHandleIRQ) refers to fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortReceive) for FLEXCAN_TransferFDAbortReceive
    fsl_flexcan.o(.text.FLEXCAN_TransferHandleIRQ) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.24
    fsl_flexcan.o(.text.FLEXCAN_TransferHandleIRQ) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferHandleIRQ) refers to fsl_flexcan.o(.text.FLEXCAN_TransferHandleIRQ) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferSendNonBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_WriteTxMb) for FLEXCAN_WriteTxMb
    fsl_flexcan.o(.text.FLEXCAN_TransferSendNonBlocking) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.25
    fsl_flexcan.o(.text.FLEXCAN_TransferSendNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferSendNonBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_TransferSendNonBlocking) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferReceiveNonBlocking) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.25
    fsl_flexcan.o(.text.FLEXCAN_TransferReceiveNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferReceiveNonBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_TransferReceiveNonBlocking) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferFDSendNonBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_WriteFDTxMb) for FLEXCAN_WriteFDTxMb
    fsl_flexcan.o(.text.FLEXCAN_TransferFDSendNonBlocking) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.25
    fsl_flexcan.o(.text.FLEXCAN_TransferFDSendNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferFDSendNonBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_TransferFDSendNonBlocking) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferFDReceiveNonBlocking) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.25
    fsl_flexcan.o(.text.FLEXCAN_TransferFDReceiveNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferFDReceiveNonBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_TransferFDReceiveNonBlocking) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferReceiveFifoNonBlocking) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.25
    fsl_flexcan.o(.text.FLEXCAN_TransferReceiveFifoNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferReceiveFifoNonBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_TransferReceiveFifoNonBlocking) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferGetReceiveFifoCount) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.25
    fsl_flexcan.o(.text.FLEXCAN_TransferGetReceiveFifoCount) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferGetReceiveFifoCount) refers to fsl_flexcan.o(.text.FLEXCAN_TransferGetReceiveFifoCount) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferAbortSend) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.25
    fsl_flexcan.o(.text.FLEXCAN_TransferAbortSend) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferAbortSend) refers to fsl_flexcan.o(.text.FLEXCAN_TransferAbortSend) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortSend) refers to fsl_flexcan.o(.text.FLEXCAN_SetFDTxMbConfig) for FLEXCAN_SetFDTxMbConfig
    fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortSend) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.25
    fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortSend) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferFDAbortSend) refers to fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortSend) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortReceive) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.25
    fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortReceive) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferFDAbortReceive) refers to fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortReceive) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferAbortReceive) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.25
    fsl_flexcan.o(.text.FLEXCAN_TransferAbortReceive) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferAbortReceive) refers to fsl_flexcan.o(.text.FLEXCAN_TransferAbortReceive) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferAbortReceiveFifo) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.25
    fsl_flexcan.o(.text.FLEXCAN_TransferAbortReceiveFifo) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferAbortReceiveFifo) refers to fsl_flexcan.o(.text.FLEXCAN_TransferAbortReceiveFifo) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_GetTimeStamp) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.25
    fsl_flexcan.o(.text.FLEXCAN_GetTimeStamp) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_GetTimeStamp) refers to fsl_flexcan.o(.text.FLEXCAN_GetTimeStamp) for [Anonymous Symbol]
    fsl_flexcan.o(.text.CAN1_DriverIRQHandler) refers to fsl_flexcan.o(.bss.s_flexcanHandle) for s_flexcanHandle
    fsl_flexcan.o(.text.CAN1_DriverIRQHandler) refers to fsl_flexcan.o(.data.s_flexcanIsr) for s_flexcanIsr
    fsl_flexcan.o(.text.CAN1_DriverIRQHandler) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.1
    fsl_flexcan.o(.text.CAN1_DriverIRQHandler) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.CAN1_DriverIRQHandler) refers to fsl_flexcan.o(.text.CAN1_DriverIRQHandler) for [Anonymous Symbol]
    fsl_flexcan.o(.text.CAN2_DriverIRQHandler) refers to fsl_flexcan.o(.bss.s_flexcanHandle) for s_flexcanHandle
    fsl_flexcan.o(.text.CAN2_DriverIRQHandler) refers to fsl_flexcan.o(.data.s_flexcanIsr) for s_flexcanIsr
    fsl_flexcan.o(.text.CAN2_DriverIRQHandler) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.1
    fsl_flexcan.o(.text.CAN2_DriverIRQHandler) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.CAN2_DriverIRQHandler) refers to fsl_flexcan.o(.text.CAN2_DriverIRQHandler) for [Anonymous Symbol]
    fsl_flexcan.o(.text.CAN3_DriverIRQHandler) refers to fsl_flexcan.o(.bss.s_flexcanHandle) for s_flexcanHandle
    fsl_flexcan.o(.text.CAN3_DriverIRQHandler) refers to fsl_flexcan.o(.data.s_flexcanIsr) for s_flexcanIsr
    fsl_flexcan.o(.text.CAN3_DriverIRQHandler) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.1
    fsl_flexcan.o(.text.CAN3_DriverIRQHandler) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.CAN3_DriverIRQHandler) refers to fsl_flexcan.o(.text.CAN3_DriverIRQHandler) for [Anonymous Symbol]
    fsl_flexcan.o(.data.s_flexcanIsr) refers to startup_mimxrt1176_cm7.o(.text) for DefaultISR
    fsl_clock.o(.text.CLOCK_InitArmPll) refers to fsl_pmu.o(.text.PMU_StaticEnablePllLdo) for PMU_StaticEnablePllLdo
    fsl_clock.o(.text.CLOCK_InitArmPll) refers to fsl_common_arm.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_clock.o(.text.CLOCK_InitArmPll) refers to fsl_clock.o(.rodata.str1.1) for .L.str
    fsl_clock.o(.text.CLOCK_InitArmPll) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_InitArmPll) refers to fsl_clock.o(.text.CLOCK_InitArmPll) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitArmPll) refers to fsl_clock.o(.text.CLOCK_DeinitArmPll) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_CalcPllSpreadSpectrum) refers to fsl_clock.o(.rodata.str1.1) for .L.str.1
    fsl_clock.o(.text.CLOCK_CalcPllSpreadSpectrum) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_CalcPllSpreadSpectrum) refers to fsl_clock.o(.text.CLOCK_CalcPllSpreadSpectrum) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_InitSysPll2) refers to fsl_pmu.o(.text.PMU_StaticEnablePllLdo) for PMU_StaticEnablePllLdo
    fsl_clock.o(.text.CLOCK_InitSysPll2) refers to fsl_common_arm.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_clock.o(.ARM.exidx.text.CLOCK_InitSysPll2) refers to fsl_clock.o(.text.CLOCK_InitSysPll2) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitSysPll2) refers to fsl_clock.o(.text.CLOCK_DeinitSysPll2) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_IsSysPll2PfdEnabled) refers to fsl_clock.o(.text.CLOCK_IsSysPll2PfdEnabled) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_InitPfd) refers to fsl_clock.o(.rodata.str1.1) for .L.str.1
    fsl_clock.o(.text.CLOCK_InitPfd) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_InitPfd) refers to fsl_clock.o(.text.CLOCK_InitPfd) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_DeinitPfd) refers to fsl_clock.o(.rodata.str1.1) for .L.str.5
    fsl_clock.o(.text.CLOCK_DeinitPfd) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitPfd) refers to fsl_clock.o(.text.CLOCK_DeinitPfd) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetPfdFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.8
    fsl_clock.o(.text.CLOCK_GetPfdFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetPfdFreq) refers to fsl_clock.o(.text.CLOCK_GetPfdFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_InitSysPll3) refers to fsl_pmu.o(.text.PMU_StaticEnablePllLdo) for PMU_StaticEnablePllLdo
    fsl_clock.o(.text.CLOCK_InitSysPll3) refers to fsl_common_arm.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_clock.o(.ARM.exidx.text.CLOCK_InitSysPll3) refers to fsl_clock.o(.text.CLOCK_InitSysPll3) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitSysPll3) refers to fsl_clock.o(.text.CLOCK_DeinitSysPll3) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_IsSysPll3PfdEnabled) refers to fsl_clock.o(.text.CLOCK_IsSysPll3PfdEnabled) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetPllBypass) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.text.CLOCK_SetPllBypass) refers to fsl_clock.o(.rodata.str1.1) for .L.str.5
    fsl_clock.o(.text.CLOCK_SetPllBypass) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetPllBypass) refers to fsl_clock.o(.text.CLOCK_SetPllBypass) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_InitAudioPllWithFreq) refers to fsl_clock.o(.text.CLOCK_InitAudioPll) for CLOCK_InitAudioPll
    fsl_clock.o(.text.CLOCK_InitAudioPllWithFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.11
    fsl_clock.o(.text.CLOCK_InitAudioPllWithFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_InitAudioPllWithFreq) refers to fsl_clock.o(.text.CLOCK_InitAudioPllWithFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_CalcAvPllFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.9
    fsl_clock.o(.text.CLOCK_CalcAvPllFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_CalcAvPllFreq) refers to fsl_clock.o(.text.CLOCK_CalcAvPllFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_InitAudioPll) refers to fsl_pmu.o(.text.PMU_StaticEnablePllLdo) for PMU_StaticEnablePllLdo
    fsl_clock.o(.text.CLOCK_InitAudioPll) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.text.CLOCK_InitAudioPll) refers to fsl_clock.o(.text.ANATOP_PllConfigure) for ANATOP_PllConfigure
    fsl_clock.o(.text.CLOCK_InitAudioPll) refers to fsl_common_arm.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_clock.o(.ARM.exidx.text.CLOCK_InitAudioPll) refers to fsl_clock.o(.text.CLOCK_InitAudioPll) for [Anonymous Symbol]
    fsl_clock.o(.text.ANATOP_PllConfigure) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.text.ANATOP_PllConfigure) refers to fsl_anatop_ai.o(.text.ANATOP_AI_WriteWithMaskShift) for ANATOP_AI_WriteWithMaskShift
    fsl_clock.o(.text.ANATOP_PllConfigure) refers to fsl_common_arm.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_clock.o(.ARM.exidx.text.ANATOP_PllConfigure) refers to fsl_clock.o(.text.ANATOP_PllConfigure) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_DeinitAudioPll) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitAudioPll) refers to fsl_clock.o(.text.CLOCK_DeinitAudioPll) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GPC_SetAudioPllOutputFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.9
    fsl_clock.o(.text.CLOCK_GPC_SetAudioPllOutputFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_GPC_SetAudioPllOutputFreq) refers to fsl_clock.o(.text.CLOCK_GPC_SetAudioPllOutputFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_CalcArmPllFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.9
    fsl_clock.o(.text.CLOCK_CalcArmPllFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_CalcArmPllFreq) refers to fsl_clock.o(.text.CLOCK_CalcArmPllFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_InitArmPllWithFreq) refers to fsl_clock.o(.text.CLOCK_InitArmPll) for CLOCK_InitArmPll
    fsl_clock.o(.text.CLOCK_InitArmPllWithFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.10
    fsl_clock.o(.text.CLOCK_InitArmPllWithFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_InitArmPllWithFreq) refers to fsl_clock.o(.text.CLOCK_InitArmPllWithFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_InitVideoPllWithFreq) refers to fsl_clock.o(.text.CLOCK_InitVideoPll) for CLOCK_InitVideoPll
    fsl_clock.o(.text.CLOCK_InitVideoPllWithFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.11
    fsl_clock.o(.text.CLOCK_InitVideoPllWithFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_InitVideoPllWithFreq) refers to fsl_clock.o(.text.CLOCK_InitVideoPllWithFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_InitVideoPll) refers to fsl_pmu.o(.text.PMU_StaticEnablePllLdo) for PMU_StaticEnablePllLdo
    fsl_clock.o(.text.CLOCK_InitVideoPll) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.text.CLOCK_InitVideoPll) refers to fsl_clock.o(.text.ANATOP_PllConfigure) for ANATOP_PllConfigure
    fsl_clock.o(.text.CLOCK_InitVideoPll) refers to fsl_common_arm.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_clock.o(.ARM.exidx.text.CLOCK_InitVideoPll) refers to fsl_clock.o(.text.CLOCK_InitVideoPll) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_DeinitVideoPll) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitVideoPll) refers to fsl_clock.o(.text.CLOCK_DeinitVideoPll) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GPC_SetVideoPllOutputFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.9
    fsl_clock.o(.text.CLOCK_GPC_SetVideoPllOutputFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_GPC_SetVideoPllOutputFreq) refers to fsl_clock.o(.text.CLOCK_GPC_SetVideoPllOutputFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_InitSysPll1) refers to fsl_pmu.o(.text.PMU_StaticEnablePllLdo) for PMU_StaticEnablePllLdo
    fsl_clock.o(.text.CLOCK_InitSysPll1) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.text.CLOCK_InitSysPll1) refers to fsl_clock.o(.text.ANATOP_PllConfigure) for ANATOP_PllConfigure
    fsl_clock.o(.text.CLOCK_InitSysPll1) refers to fsl_common_arm.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_clock.o(.ARM.exidx.text.CLOCK_InitSysPll1) refers to fsl_clock.o(.text.CLOCK_InitSysPll1) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_DeinitSysPll1) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitSysPll1) refers to fsl_clock.o(.text.CLOCK_DeinitSysPll1) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GPC_SetSysPll1OutputFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.9
    fsl_clock.o(.text.CLOCK_GPC_SetSysPll1OutputFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_GPC_SetSysPll1OutputFreq) refers to fsl_clock.o(.text.CLOCK_GPC_SetSysPll1OutputFreq) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_EnableOsc24M) refers to fsl_clock.o(.text.CLOCK_OSC_EnableOsc24M) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_SetOsc24MWorkMode) refers to fsl_clock.o(.text.CLOCK_OSC_SetOsc24MWorkMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_SetOsc16MConfig) refers to fsl_clock.o(.text.CLOCK_OSC_SetOsc16MConfig) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MRefClkDiv) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MRefClkDiv) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_SetOscRc400MRefClkDiv) refers to fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MRefClkDiv) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MFastClkCount) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MFastClkCount) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_SetOscRc400MFastClkCount) refers to fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MFastClkCount) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MHysteresisValue) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MHysteresisValue) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_SetOscRc400MHysteresisValue) refers to fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MHysteresisValue) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_OSC_BypassOscRc400MTuneLogic) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_BypassOscRc400MTuneLogic) refers to fsl_clock.o(.text.CLOCK_OSC_BypassOscRc400MTuneLogic) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_OSC_EnableOscRc400MTuneLogic) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_EnableOscRc400MTuneLogic) refers to fsl_clock.o(.text.CLOCK_OSC_EnableOscRc400MTuneLogic) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_OSC_FreezeOscRc400MTuneValue) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_FreezeOscRc400MTuneValue) refers to fsl_clock.o(.text.CLOCK_OSC_FreezeOscRc400MTuneValue) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MTuneValue) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MTuneValue) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_SetOscRc400MTuneValue) refers to fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MTuneValue) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_OSC_Set1MHzOutputBehavior) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_clock.o(.text.CLOCK_OSC_Set1MHzOutputBehavior) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_Set1MHzOutputBehavior) refers to fsl_clock.o(.text.CLOCK_OSC_Set1MHzOutputBehavior) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_OSC_SetLocked1MHzCount) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_clock.o(.text.CLOCK_OSC_SetLocked1MHzCount) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_SetLocked1MHzCount) refers to fsl_clock.o(.text.CLOCK_OSC_SetLocked1MHzCount) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_OSC_CheckLocked1MHzErrorFlag) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_CheckLocked1MHzErrorFlag) refers to fsl_clock.o(.text.CLOCK_OSC_CheckLocked1MHzErrorFlag) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_OSC_ClearLocked1MHzErrorFlag) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_ClearLocked1MHzErrorFlag) refers to fsl_clock.o(.text.CLOCK_OSC_ClearLocked1MHzErrorFlag) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_OSC_GetCurrentOscRc400MFastClockCount) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_GetCurrentOscRc400MFastClockCount) refers to fsl_clock.o(.text.CLOCK_OSC_GetCurrentOscRc400MFastClockCount) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_OSC_GetCurrentOscRc400MTuneValue) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_GetCurrentOscRc400MTuneValue) refers to fsl_clock.o(.text.CLOCK_OSC_GetCurrentOscRc400MTuneValue) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetPllFreq) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_clock.o(.text.CLOCK_GetPllFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.12
    fsl_clock.o(.text.CLOCK_GetPllFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetPllFreq) refers to fsl_clock.o(.text.CLOCK_GetPllFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.rodata.s_clockSourceName) for s_clockSourceName
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.12
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetGroupConfig) refers to fsl_clock.o(.rodata.str1.1) for .L.str.1
    fsl_clock.o(.text.CLOCK_SetGroupConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetGroupConfig) refers to fsl_clock.o(.text.CLOCK_SetGroupConfig) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_OSC_TrimOscRc400M) refers to fsl_common_arm.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_TrimOscRc400M) refers to fsl_clock.o(.text.CLOCK_OSC_TrimOscRc400M) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_EnableOscRc400M) refers to fsl_clock.o(.text.CLOCK_OSC_EnableOscRc400M) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetFreqFromObs) refers to fsl_clock.o(.text.CLOCK_GetFreqFromObs) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbhs0Clock) refers to fsl_clock.o(.text.CLOCK_EnableUsbhs0Clock) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbhs0PhyPllClock) refers to fsl_clock.o(.text.CLOCK_EnableUsbhs0PhyPllClock) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_DisableUsbhs0PhyPllClock) refers to fsl_clock.o(.text.CLOCK_DisableUsbhs0PhyPllClock) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbhs1Clock) refers to fsl_clock.o(.text.CLOCK_EnableUsbhs1Clock) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbhs1PhyPllClock) refers to fsl_clock.o(.text.CLOCK_EnableUsbhs1PhyPllClock) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_DisableUsbhs1PhyPllClock) refers to fsl_clock.o(.text.CLOCK_DisableUsbhs1PhyPllClock) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSCPLL_ControlBySetPointMode) refers to fsl_clock.o(.text.CLOCK_OSCPLL_ControlBySetPointMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSCPLL_ControlByCpuLowPowerMode) refers to fsl_clock.o(.text.CLOCK_OSCPLL_ControlByCpuLowPowerMode) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_ROOT_ControlBySetPointMode) refers to fsl_clock.o(.rodata.str1.1) for .L.str.9
    fsl_clock.o(.text.CLOCK_ROOT_ControlBySetPointMode) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_ROOT_ControlBySetPointMode) refers to fsl_clock.o(.text.CLOCK_ROOT_ControlBySetPointMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_LPCG_ControlBySetPointMode) refers to fsl_clock.o(.text.CLOCK_LPCG_ControlBySetPointMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_LPCG_ControlByCpuLowPowerMode) refers to fsl_clock.o(.text.CLOCK_LPCG_ControlByCpuLowPowerMode) for [Anonymous Symbol]
    fsl_common.o(.text.SDK_Malloc) refers to malloc2.o(i.__malloc$2region) for malloc
    fsl_common.o(.ARM.exidx.text.SDK_Malloc) refers to fsl_common.o(.text.SDK_Malloc) for [Anonymous Symbol]
    fsl_common.o(.text.SDK_Free) refers to malloc2.o(i.__free$2region) for free
    fsl_common.o(.ARM.exidx.text.SDK_Free) refers to fsl_common.o(.text.SDK_Free) for [Anonymous Symbol]
    fsl_common_arm.o(.text.MSDK_EnableCpuCycleCounter) refers to fsl_common_arm.o(.rodata.str1.1) for .L.str.1
    fsl_common_arm.o(.text.MSDK_EnableCpuCycleCounter) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_common_arm.o(.ARM.exidx.text.MSDK_EnableCpuCycleCounter) refers to fsl_common_arm.o(.text.MSDK_EnableCpuCycleCounter) for [Anonymous Symbol]
    fsl_common_arm.o(.ARM.exidx.text.MSDK_GetCpuCycleCount) refers to fsl_common_arm.o(.text.MSDK_GetCpuCycleCount) for [Anonymous Symbol]
    fsl_common_arm.o(.text.SDK_DelayAtLeastUs) refers to uldiv.o(.text) for __aeabi_uldivmod
    fsl_common_arm.o(.text.SDK_DelayAtLeastUs) refers to fsl_common_arm.o(.rodata.str1.1) for .L.str.1
    fsl_common_arm.o(.text.SDK_DelayAtLeastUs) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_common_arm.o(.ARM.exidx.text.SDK_DelayAtLeastUs) refers to fsl_common_arm.o(.text.SDK_DelayAtLeastUs) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_GetInstance) refers to fsl_lpuart.o(.rodata.s_lpuartBases) for s_lpuartBases
    fsl_lpuart.o(.text.LPUART_GetInstance) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str
    fsl_lpuart.o(.text.LPUART_GetInstance) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_GetInstance) refers to fsl_lpuart.o(.text.LPUART_GetInstance) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferGetRxRingBufferLength) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.2
    fsl_lpuart.o(.text.LPUART_TransferGetRxRingBufferLength) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferGetRxRingBufferLength) refers to fsl_lpuart.o(.text.LPUART_TransferGetRxRingBufferLength) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_Init) refers to fsl_lpuart.o(.rodata.s_lpuartBases) for s_lpuartBases
    fsl_lpuart.o(.text.LPUART_Init) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str
    fsl_lpuart.o(.text.LPUART_Init) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.text.LPUART_Init) refers to fsl_lpuart.o(.rodata.s_lpuartClock) for s_lpuartClock
    fsl_lpuart.o(.ARM.exidx.text.LPUART_Init) refers to fsl_lpuart.o(.text.LPUART_Init) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_Deinit) refers to fsl_lpuart.o(.rodata.s_lpuartBases) for s_lpuartBases
    fsl_lpuart.o(.text.LPUART_Deinit) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str
    fsl_lpuart.o(.text.LPUART_Deinit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.text.LPUART_Deinit) refers to fsl_lpuart.o(.rodata.s_lpuartClock) for s_lpuartClock
    fsl_lpuart.o(.ARM.exidx.text.LPUART_Deinit) refers to fsl_lpuart.o(.text.LPUART_Deinit) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_GetDefaultConfig) refers to memset.o(.text) for memset
    fsl_lpuart.o(.text.LPUART_GetDefaultConfig) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.3
    fsl_lpuart.o(.text.LPUART_GetDefaultConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_GetDefaultConfig) refers to fsl_lpuart.o(.text.LPUART_GetDefaultConfig) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_SetBaudRate) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.1
    fsl_lpuart.o(.text.LPUART_SetBaudRate) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_SetBaudRate) refers to fsl_lpuart.o(.text.LPUART_SetBaudRate) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_Enable9bitMode) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.8
    fsl_lpuart.o(.text.LPUART_Enable9bitMode) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_Enable9bitMode) refers to fsl_lpuart.o(.text.LPUART_Enable9bitMode) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_SendAddress) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.8
    fsl_lpuart.o(.text.LPUART_SendAddress) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_SendAddress) refers to fsl_lpuart.o(.text.LPUART_SendAddress) for [Anonymous Symbol]
    fsl_lpuart.o(.ARM.exidx.text.LPUART_EnableInterrupts) refers to fsl_lpuart.o(.text.LPUART_EnableInterrupts) for [Anonymous Symbol]
    fsl_lpuart.o(.ARM.exidx.text.LPUART_DisableInterrupts) refers to fsl_lpuart.o(.text.LPUART_DisableInterrupts) for [Anonymous Symbol]
    fsl_lpuart.o(.ARM.exidx.text.LPUART_GetEnabledInterrupts) refers to fsl_lpuart.o(.text.LPUART_GetEnabledInterrupts) for [Anonymous Symbol]
    fsl_lpuart.o(.ARM.exidx.text.LPUART_GetStatusFlags) refers to fsl_lpuart.o(.text.LPUART_GetStatusFlags) for [Anonymous Symbol]
    fsl_lpuart.o(.ARM.exidx.text.LPUART_ClearStatusFlags) refers to fsl_lpuart.o(.text.LPUART_ClearStatusFlags) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_WriteBlocking) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.9
    fsl_lpuart.o(.text.LPUART_WriteBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_WriteBlocking) refers to fsl_lpuart.o(.text.LPUART_WriteBlocking) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_ReadBlocking) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.9
    fsl_lpuart.o(.text.LPUART_ReadBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_ReadBlocking) refers to fsl_lpuart.o(.text.LPUART_ReadBlocking) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferCreateHandle) refers to memset.o(.text) for memset
    fsl_lpuart.o(.text.LPUART_TransferCreateHandle) refers to fsl_lpuart.o(.rodata.s_lpuartBases) for s_lpuartBases
    fsl_lpuart.o(.text.LPUART_TransferCreateHandle) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str
    fsl_lpuart.o(.text.LPUART_TransferCreateHandle) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.text.LPUART_TransferCreateHandle) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.text.LPUART_TransferCreateHandle) refers to fsl_lpuart.o(.text.LPUART_TransferHandleIRQ) for LPUART_TransferHandleIRQ
    fsl_lpuart.o(.text.LPUART_TransferCreateHandle) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART_TransferCreateHandle) refers to fsl_lpuart.o(.rodata.s_lpuartIRQ) for s_lpuartIRQ
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferCreateHandle) refers to fsl_lpuart.o(.text.LPUART_TransferCreateHandle) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferHandleIRQ) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.9
    fsl_lpuart.o(.text.LPUART_TransferHandleIRQ) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferHandleIRQ) refers to fsl_lpuart.o(.text.LPUART_TransferHandleIRQ) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferStartRingBuffer) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.2
    fsl_lpuart.o(.text.LPUART_TransferStartRingBuffer) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferStartRingBuffer) refers to fsl_lpuart.o(.text.LPUART_TransferStartRingBuffer) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferStopRingBuffer) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.2
    fsl_lpuart.o(.text.LPUART_TransferStopRingBuffer) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferStopRingBuffer) refers to fsl_lpuart.o(.text.LPUART_TransferStopRingBuffer) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferSendNonBlocking) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.2
    fsl_lpuart.o(.text.LPUART_TransferSendNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferSendNonBlocking) refers to fsl_lpuart.o(.text.LPUART_TransferSendNonBlocking) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferAbortSend) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.2
    fsl_lpuart.o(.text.LPUART_TransferAbortSend) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferAbortSend) refers to fsl_lpuart.o(.text.LPUART_TransferAbortSend) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferGetSendCount) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.2
    fsl_lpuart.o(.text.LPUART_TransferGetSendCount) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferGetSendCount) refers to fsl_lpuart.o(.text.LPUART_TransferGetSendCount) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferReceiveNonBlocking) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.2
    fsl_lpuart.o(.text.LPUART_TransferReceiveNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferReceiveNonBlocking) refers to fsl_lpuart.o(.text.LPUART_TransferReceiveNonBlocking) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferAbortReceive) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.2
    fsl_lpuart.o(.text.LPUART_TransferAbortReceive) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferAbortReceive) refers to fsl_lpuart.o(.text.LPUART_TransferAbortReceive) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferGetReceiveCount) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.2
    fsl_lpuart.o(.text.LPUART_TransferGetReceiveCount) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferGetReceiveCount) refers to fsl_lpuart.o(.text.LPUART_TransferGetReceiveCount) for [Anonymous Symbol]
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferHandleErrorIRQ) refers to fsl_lpuart.o(.text.LPUART_TransferHandleErrorIRQ) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART1_DriverIRQHandler) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART1_DriverIRQHandler) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.ARM.exidx.text.LPUART1_DriverIRQHandler) refers to fsl_lpuart.o(.text.LPUART1_DriverIRQHandler) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART2_DriverIRQHandler) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART2_DriverIRQHandler) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.ARM.exidx.text.LPUART2_DriverIRQHandler) refers to fsl_lpuart.o(.text.LPUART2_DriverIRQHandler) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART3_DriverIRQHandler) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART3_DriverIRQHandler) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.ARM.exidx.text.LPUART3_DriverIRQHandler) refers to fsl_lpuart.o(.text.LPUART3_DriverIRQHandler) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART4_DriverIRQHandler) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART4_DriverIRQHandler) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.ARM.exidx.text.LPUART4_DriverIRQHandler) refers to fsl_lpuart.o(.text.LPUART4_DriverIRQHandler) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART5_DriverIRQHandler) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART5_DriverIRQHandler) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.ARM.exidx.text.LPUART5_DriverIRQHandler) refers to fsl_lpuart.o(.text.LPUART5_DriverIRQHandler) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART6_DriverIRQHandler) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART6_DriverIRQHandler) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.ARM.exidx.text.LPUART6_DriverIRQHandler) refers to fsl_lpuart.o(.text.LPUART6_DriverIRQHandler) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART7_DriverIRQHandler) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART7_DriverIRQHandler) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.ARM.exidx.text.LPUART7_DriverIRQHandler) refers to fsl_lpuart.o(.text.LPUART7_DriverIRQHandler) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART8_DriverIRQHandler) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART8_DriverIRQHandler) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.ARM.exidx.text.LPUART8_DriverIRQHandler) refers to fsl_lpuart.o(.text.LPUART8_DriverIRQHandler) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART9_DriverIRQHandler) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART9_DriverIRQHandler) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.ARM.exidx.text.LPUART9_DriverIRQHandler) refers to fsl_lpuart.o(.text.LPUART9_DriverIRQHandler) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART10_DriverIRQHandler) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART10_DriverIRQHandler) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.ARM.exidx.text.LPUART10_DriverIRQHandler) refers to fsl_lpuart.o(.text.LPUART10_DriverIRQHandler) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART11_DriverIRQHandler) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART11_DriverIRQHandler) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.ARM.exidx.text.LPUART11_DriverIRQHandler) refers to fsl_lpuart.o(.text.LPUART11_DriverIRQHandler) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART12_DriverIRQHandler) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART12_DriverIRQHandler) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.ARM.exidx.text.LPUART12_DriverIRQHandler) refers to fsl_lpuart.o(.text.LPUART12_DriverIRQHandler) for [Anonymous Symbol]
    fsl_lpuart.o(.data.s_lpuartIsr) refers to startup_mimxrt1176_cm7.o(.text) for DefaultISR
    fsl_gpio.o(.text.GPIO_PinInit) refers to fsl_gpio.o(.rodata.str1.1) for .L.str.1
    fsl_gpio.o(.text.GPIO_PinInit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_gpio.o(.ARM.exidx.text.GPIO_PinInit) refers to fsl_gpio.o(.text.GPIO_PinInit) for [Anonymous Symbol]
    fsl_gpio.o(.text.GPIO_PinWrite) refers to fsl_gpio.o(.rodata.str1.1) for .L.str
    fsl_gpio.o(.text.GPIO_PinWrite) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_gpio.o(.ARM.exidx.text.GPIO_PinWrite) refers to fsl_gpio.o(.text.GPIO_PinWrite) for [Anonymous Symbol]
    fsl_gpio.o(.ARM.exidx.text.GPIO_PinSetInterruptConfig) refers to fsl_gpio.o(.text.GPIO_PinSetInterruptConfig) for [Anonymous Symbol]
    fsl_pmu.o(.ARM.exidx.text.PMU_SetPllLdoControlMode) refers to fsl_pmu.o(.text.PMU_SetPllLdoControlMode) for [Anonymous Symbol]
    fsl_pmu.o(.ARM.exidx.text.PMU_SwitchPllLdoToGPCMode) refers to fsl_pmu.o(.text.PMU_SwitchPllLdoToGPCMode) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_StaticEnablePllLdo) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_pmu.o(.text.PMU_StaticEnablePllLdo) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_pmu.o(.text.PMU_StaticEnablePllLdo) refers to fsl_common_arm.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_pmu.o(.ARM.exidx.text.PMU_StaticEnablePllLdo) refers to fsl_pmu.o(.text.PMU_StaticEnablePllLdo) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_StaticDisablePllLdo) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_pmu.o(.ARM.exidx.text.PMU_StaticDisablePllLdo) refers to fsl_pmu.o(.text.PMU_StaticDisablePllLdo) for [Anonymous Symbol]
    fsl_pmu.o(.ARM.exidx.text.PMU_SetLpsrAnaLdoControlMode) refers to fsl_pmu.o(.text.PMU_SetLpsrAnaLdoControlMode) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_StaticEnableLpsrAnaLdoBypassMode) refers to fsl_common_arm.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_pmu.o(.ARM.exidx.text.PMU_StaticEnableLpsrAnaLdoBypassMode) refers to fsl_pmu.o(.text.PMU_StaticEnableLpsrAnaLdoBypassMode) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_StaticGetLpsrAnaLdoDefaultConfig) refers to memset.o(.text) for memset
    fsl_pmu.o(.text.PMU_StaticGetLpsrAnaLdoDefaultConfig) refers to fsl_pmu.o(.rodata.str1.1) for .L.str
    fsl_pmu.o(.text.PMU_StaticGetLpsrAnaLdoDefaultConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.ARM.exidx.text.PMU_StaticGetLpsrAnaLdoDefaultConfig) refers to fsl_pmu.o(.text.PMU_StaticGetLpsrAnaLdoDefaultConfig) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_StaticLpsrAnaLdoInit) refers to fsl_pmu.o(.rodata.str1.1) for .L.str
    fsl_pmu.o(.text.PMU_StaticLpsrAnaLdoInit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.ARM.exidx.text.PMU_StaticLpsrAnaLdoInit) refers to fsl_pmu.o(.text.PMU_StaticLpsrAnaLdoInit) for [Anonymous Symbol]
    fsl_pmu.o(.ARM.exidx.text.PMU_StaticLpsrAnaLdoDeinit) refers to fsl_pmu.o(.text.PMU_StaticLpsrAnaLdoDeinit) for [Anonymous Symbol]
    fsl_pmu.o(.ARM.exidx.text.PMU_SetLpsrDigLdoControlMode) refers to fsl_pmu.o(.text.PMU_SetLpsrDigLdoControlMode) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_StaticEnableLpsrDigLdoBypassMode) refers to fsl_common_arm.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_pmu.o(.ARM.exidx.text.PMU_StaticEnableLpsrDigLdoBypassMode) refers to fsl_pmu.o(.text.PMU_StaticEnableLpsrDigLdoBypassMode) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_StaticGetLpsrDigLdoDefaultConfig) refers to memset.o(.text) for memset
    fsl_pmu.o(.text.PMU_StaticGetLpsrDigLdoDefaultConfig) refers to fsl_pmu.o(.rodata.str1.1) for .L.str
    fsl_pmu.o(.text.PMU_StaticGetLpsrDigLdoDefaultConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.ARM.exidx.text.PMU_StaticGetLpsrDigLdoDefaultConfig) refers to fsl_pmu.o(.text.PMU_StaticGetLpsrDigLdoDefaultConfig) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_StaticLpsrDigLdoInit) refers to fsl_common_arm.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_pmu.o(.text.PMU_StaticLpsrDigLdoInit) refers to fsl_pmu.o(.rodata.str1.1) for .L.str
    fsl_pmu.o(.text.PMU_StaticLpsrDigLdoInit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.ARM.exidx.text.PMU_StaticLpsrDigLdoInit) refers to fsl_pmu.o(.text.PMU_StaticLpsrDigLdoInit) for [Anonymous Symbol]
    fsl_pmu.o(.ARM.exidx.text.PMU_StaticLpsrDigLdoDeinit) refers to fsl_pmu.o(.text.PMU_StaticLpsrDigLdoDeinit) for [Anonymous Symbol]
    fsl_pmu.o(.ARM.exidx.text.PMU_GPCSetLpsrDigLdoTargetVoltage) refers to fsl_pmu.o(.text.PMU_GPCSetLpsrDigLdoTargetVoltage) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_GetSnvsDigLdoDefaultConfig) refers to memset.o(.text) for memset
    fsl_pmu.o(.text.PMU_GetSnvsDigLdoDefaultConfig) refers to fsl_pmu.o(.rodata.str1.1) for .L.str
    fsl_pmu.o(.text.PMU_GetSnvsDigLdoDefaultConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.ARM.exidx.text.PMU_GetSnvsDigLdoDefaultConfig) refers to fsl_pmu.o(.text.PMU_GetSnvsDigLdoDefaultConfig) for [Anonymous Symbol]
    fsl_pmu.o(.ARM.exidx.text.PMU_SnvsDigLdoInit) refers to fsl_pmu.o(.text.PMU_SnvsDigLdoInit) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_GPCEnableLdo) refers to fsl_pmu.o(.rodata.str1.1) for .L.str.2
    fsl_pmu.o(.text.PMU_GPCEnableLdo) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.ARM.exidx.text.PMU_GPCEnableLdo) refers to fsl_pmu.o(.text.PMU_GPCEnableLdo) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_GPCSetLdoOperateMode) refers to fsl_pmu.o(.rodata.cst16) for .L__const.PMU_GPCSetLdoOperateMode.ldoLpModeRegArray
    fsl_pmu.o(.text.PMU_GPCSetLdoOperateMode) refers to fsl_pmu.o(.rodata.str1.1) for .L.str.3
    fsl_pmu.o(.text.PMU_GPCSetLdoOperateMode) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.ARM.exidx.text.PMU_GPCSetLdoOperateMode) refers to fsl_pmu.o(.text.PMU_GPCSetLdoOperateMode) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_GPCEnableLdoTrackingMode) refers to fsl_pmu.o(.rodata.str1.1) for .L.str.4
    fsl_pmu.o(.text.PMU_GPCEnableLdoTrackingMode) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.ARM.exidx.text.PMU_GPCEnableLdoTrackingMode) refers to fsl_pmu.o(.text.PMU_GPCEnableLdoTrackingMode) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_GPCEnableLdoBypassMode) refers to fsl_pmu.o(.rodata.str1.1) for .L.str.4
    fsl_pmu.o(.text.PMU_GPCEnableLdoBypassMode) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.ARM.exidx.text.PMU_GPCEnableLdoBypassMode) refers to fsl_pmu.o(.text.PMU_GPCEnableLdoBypassMode) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_GPCEnableLdoStandbyMode) refers to fsl_pmu.o(.rodata.str1.1) for .L.str.2
    fsl_pmu.o(.text.PMU_GPCEnableLdoStandbyMode) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.ARM.exidx.text.PMU_GPCEnableLdoStandbyMode) refers to fsl_pmu.o(.text.PMU_GPCEnableLdoStandbyMode) for [Anonymous Symbol]
    fsl_pmu.o(.ARM.exidx.text.PMU_SetBandgapControlMode) refers to fsl_pmu.o(.text.PMU_SetBandgapControlMode) for [Anonymous Symbol]
    fsl_pmu.o(.ARM.exidx.text.PMU_SwitchBandgapToGPCMode) refers to fsl_pmu.o(.text.PMU_SwitchBandgapToGPCMode) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_DisableBandgapSelfBiasAfterPowerUp) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_pmu.o(.text.PMU_DisableBandgapSelfBiasAfterPowerUp) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_pmu.o(.ARM.exidx.text.PMU_DisableBandgapSelfBiasAfterPowerUp) refers to fsl_pmu.o(.text.PMU_DisableBandgapSelfBiasAfterPowerUp) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_EnableBandgapSelfBiasBeforePowerDown) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_pmu.o(.text.PMU_EnableBandgapSelfBiasBeforePowerDown) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_pmu.o(.ARM.exidx.text.PMU_EnableBandgapSelfBiasBeforePowerDown) refers to fsl_pmu.o(.text.PMU_EnableBandgapSelfBiasBeforePowerDown) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_StaticBandgapInit) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_pmu.o(.text.PMU_StaticBandgapInit) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_pmu.o(.text.PMU_StaticBandgapInit) refers to fsl_pmu.o(.rodata.str1.1) for .L.str
    fsl_pmu.o(.text.PMU_StaticBandgapInit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.ARM.exidx.text.PMU_StaticBandgapInit) refers to fsl_pmu.o(.text.PMU_StaticBandgapInit) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_WellBiasInit) refers to fsl_pmu.o(.rodata.str1.1) for .L.str
    fsl_pmu.o(.text.PMU_WellBiasInit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.ARM.exidx.text.PMU_WellBiasInit) refers to fsl_pmu.o(.text.PMU_WellBiasInit) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_GetWellBiasDefaultConfig) refers to memset.o(.text) for memset
    fsl_pmu.o(.text.PMU_GetWellBiasDefaultConfig) refers to fsl_pmu.o(.rodata.str1.1) for .L.str
    fsl_pmu.o(.text.PMU_GetWellBiasDefaultConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.ARM.exidx.text.PMU_GetWellBiasDefaultConfig) refers to fsl_pmu.o(.text.PMU_GetWellBiasDefaultConfig) for [Anonymous Symbol]
    fsl_pmu.o(.ARM.exidx.text.PMU_SetBodyBiasControlMode) refers to fsl_pmu.o(.text.PMU_SetBodyBiasControlMode) for [Anonymous Symbol]
    fsl_pmu.o(.ARM.exidx.text.PMU_EnableBodyBias) refers to fsl_pmu.o(.text.PMU_EnableBodyBias) for [Anonymous Symbol]
    fsl_pmu.o(.ARM.exidx.text.PMU_GPCEnableBodyBias) refers to fsl_pmu.o(.text.PMU_GPCEnableBodyBias) for [Anonymous Symbol]
    fsl_pmu.o(.ARM.exidx.text.PMU_GPCEnableBodyBiasStandbyMode) refers to fsl_pmu.o(.text.PMU_GPCEnableBodyBiasStandbyMode) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_GPCGetBodyBiasDefaultConfig) refers to fsl_pmu.o(.rodata.str1.1) for .L.str
    fsl_pmu.o(.text.PMU_GPCGetBodyBiasDefaultConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.ARM.exidx.text.PMU_GPCGetBodyBiasDefaultConfig) refers to fsl_pmu.o(.text.PMU_GPCGetBodyBiasDefaultConfig) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_GPCSetBodyBiasConfig) refers to fsl_pmu.o(.rodata.str1.1) for .L.str
    fsl_pmu.o(.text.PMU_GPCSetBodyBiasConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.ARM.exidx.text.PMU_GPCSetBodyBiasConfig) refers to fsl_pmu.o(.text.PMU_GPCSetBodyBiasConfig) for [Anonymous Symbol]
    fsl_dcdc.o(.text.DCDC_Init) refers to fsl_dcdc.o(.rodata.str1.1) for .L.str.4
    fsl_dcdc.o(.text.DCDC_Init) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dcdc.o(.ARM.exidx.text.DCDC_Init) refers to fsl_dcdc.o(.text.DCDC_Init) for [Anonymous Symbol]
    fsl_dcdc.o(.text.DCDC_Deinit) refers to fsl_dcdc.o(.rodata.str1.1) for .L.str.4
    fsl_dcdc.o(.text.DCDC_Deinit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dcdc.o(.ARM.exidx.text.DCDC_Deinit) refers to fsl_dcdc.o(.text.DCDC_Deinit) for [Anonymous Symbol]
    fsl_dcdc.o(.text.DCDC_GetDefaultConfig) refers to memset.o(.text) for memset
    fsl_dcdc.o(.text.DCDC_GetDefaultConfig) refers to fsl_dcdc.o(.rodata.str1.1) for .L.str
    fsl_dcdc.o(.text.DCDC_GetDefaultConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dcdc.o(.ARM.exidx.text.DCDC_GetDefaultConfig) refers to fsl_dcdc.o(.text.DCDC_GetDefaultConfig) for [Anonymous Symbol]
    fsl_dcdc.o(.text.DCDC_GetDefaultDetectionConfig) refers to memset.o(.text) for memset
    fsl_dcdc.o(.text.DCDC_GetDefaultDetectionConfig) refers to fsl_dcdc.o(.rodata.str1.1) for .L.str
    fsl_dcdc.o(.text.DCDC_GetDefaultDetectionConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dcdc.o(.ARM.exidx.text.DCDC_GetDefaultDetectionConfig) refers to fsl_dcdc.o(.text.DCDC_GetDefaultDetectionConfig) for [Anonymous Symbol]
    fsl_dcdc.o(.text.DCDC_SetDetectionConfig) refers to fsl_dcdc.o(.rodata.str1.1) for .L.str
    fsl_dcdc.o(.text.DCDC_SetDetectionConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dcdc.o(.ARM.exidx.text.DCDC_SetDetectionConfig) refers to fsl_dcdc.o(.text.DCDC_SetDetectionConfig) for [Anonymous Symbol]
    fsl_dcdc.o(.text.DCDC_SetClockSource) refers to fsl_dcdc.o(.rodata.str1.1) for .L.str.1
    fsl_dcdc.o(.text.DCDC_SetClockSource) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dcdc.o(.ARM.exidx.text.DCDC_SetClockSource) refers to fsl_dcdc.o(.text.DCDC_SetClockSource) for [Anonymous Symbol]
    fsl_dcdc.o(.text.DCDC_GetDefaultLowPowerConfig) refers to memset.o(.text) for memset
    fsl_dcdc.o(.text.DCDC_GetDefaultLowPowerConfig) refers to fsl_dcdc.o(.rodata.str1.1) for .L.str
    fsl_dcdc.o(.text.DCDC_GetDefaultLowPowerConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dcdc.o(.ARM.exidx.text.DCDC_GetDefaultLowPowerConfig) refers to fsl_dcdc.o(.text.DCDC_GetDefaultLowPowerConfig) for [Anonymous Symbol]
    fsl_dcdc.o(.text.DCDC_SetLowPowerConfig) refers to fsl_dcdc.o(.rodata.str1.1) for .L.str
    fsl_dcdc.o(.text.DCDC_SetLowPowerConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dcdc.o(.ARM.exidx.text.DCDC_SetLowPowerConfig) refers to fsl_dcdc.o(.text.DCDC_SetLowPowerConfig) for [Anonymous Symbol]
    fsl_dcdc.o(.text.DCDC_GetDefaultLoopControlConfig) refers to memset.o(.text) for memset
    fsl_dcdc.o(.text.DCDC_GetDefaultLoopControlConfig) refers to fsl_dcdc.o(.rodata.str1.1) for .L.str
    fsl_dcdc.o(.text.DCDC_GetDefaultLoopControlConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dcdc.o(.ARM.exidx.text.DCDC_GetDefaultLoopControlConfig) refers to fsl_dcdc.o(.text.DCDC_GetDefaultLoopControlConfig) for [Anonymous Symbol]
    fsl_dcdc.o(.text.DCDC_SetLoopControlConfig) refers to fsl_dcdc.o(.rodata.str1.1) for .L.str
    fsl_dcdc.o(.text.DCDC_SetLoopControlConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dcdc.o(.ARM.exidx.text.DCDC_SetLoopControlConfig) refers to fsl_dcdc.o(.text.DCDC_SetLoopControlConfig) for [Anonymous Symbol]
    fsl_dcdc.o(.text.DCDC_SetMinPowerConfig) refers to fsl_dcdc.o(.rodata.str1.1) for .L.str
    fsl_dcdc.o(.text.DCDC_SetMinPowerConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dcdc.o(.ARM.exidx.text.DCDC_SetMinPowerConfig) refers to fsl_dcdc.o(.text.DCDC_SetMinPowerConfig) for [Anonymous Symbol]
    fsl_dcdc.o(.text.DCDC_SetInternalRegulatorConfig) refers to fsl_dcdc.o(.rodata.str1.1) for .L.str
    fsl_dcdc.o(.text.DCDC_SetInternalRegulatorConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dcdc.o(.ARM.exidx.text.DCDC_SetInternalRegulatorConfig) refers to fsl_dcdc.o(.text.DCDC_SetInternalRegulatorConfig) for [Anonymous Symbol]
    fsl_dcdc.o(.text.DCDC_SetPointInit) refers to fsl_dcdc.o(.rodata.str1.1) for .L.str.5
    fsl_dcdc.o(.text.DCDC_SetPointInit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dcdc.o(.ARM.exidx.text.DCDC_SetPointInit) refers to fsl_dcdc.o(.text.DCDC_SetPointInit) for [Anonymous Symbol]
    fsl_dcdc.o(.ARM.exidx.text.DCDC_BootIntoDCM) refers to fsl_dcdc.o(.text.DCDC_BootIntoDCM) for [Anonymous Symbol]
    fsl_dcdc.o(.ARM.exidx.text.DCDC_BootIntoCCM) refers to fsl_dcdc.o(.text.DCDC_BootIntoCCM) for [Anonymous Symbol]
    fsl_cache.o(.ARM.exidx.text.L1CACHE_InvalidateICacheByRange) refers to fsl_cache.o(.text.L1CACHE_InvalidateICacheByRange) for [Anonymous Symbol]
    fsl_cache.o(.ARM.exidx.text.ICACHE_InvalidateByRange) refers to fsl_cache.o(.text.ICACHE_InvalidateByRange) for [Anonymous Symbol]
    fsl_cache.o(.ARM.exidx.text.DCACHE_InvalidateByRange) refers to fsl_cache.o(.text.DCACHE_InvalidateByRange) for [Anonymous Symbol]
    fsl_cache.o(.ARM.exidx.text.DCACHE_CleanByRange) refers to fsl_cache.o(.text.DCACHE_CleanByRange) for [Anonymous Symbol]
    fsl_cache.o(.ARM.exidx.text.DCACHE_CleanInvalidateByRange) refers to fsl_cache.o(.text.DCACHE_CleanInvalidateByRange) for [Anonymous Symbol]
    fsl_anatop_ai.o(.ARM.exidx.text.ANATOP_AI_Access) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Access) for [Anonymous Symbol]
    fsl_anatop_ai.o(.text.ANATOP_AI_Write) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Access) for ANATOP_AI_Access
    fsl_anatop_ai.o(.ARM.exidx.text.ANATOP_AI_Write) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for [Anonymous Symbol]
    fsl_anatop_ai.o(.text.ANATOP_AI_Read) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Access) for ANATOP_AI_Access
    fsl_anatop_ai.o(.ARM.exidx.text.ANATOP_AI_Read) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for [Anonymous Symbol]
    fsl_anatop_ai.o(.text.ANATOP_AI_WriteWithMaskShift) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Access) for ANATOP_AI_Access
    fsl_anatop_ai.o(.ARM.exidx.text.ANATOP_AI_WriteWithMaskShift) refers to fsl_anatop_ai.o(.text.ANATOP_AI_WriteWithMaskShift) for [Anonymous Symbol]
    system_mimxrt1176_cm7.o(.text.SystemInit) refers to system_mimxrt1176_cm7.o(.text.SystemInitHook) for SystemInitHook
    system_mimxrt1176_cm7.o(.ARM.exidx.text.SystemInit) refers to system_mimxrt1176_cm7.o(.text.SystemInit) for [Anonymous Symbol]
    system_mimxrt1176_cm7.o(.ARM.exidx.text.SystemInitHook) refers to system_mimxrt1176_cm7.o(.text.SystemInitHook) for [Anonymous Symbol]
    system_mimxrt1176_cm7.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_mimxrt1176_cm7.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    fsl_adapter_lpuart.o(.text.HAL_UartInit) refers to fsl_lpuart.o(.text.LPUART_GetDefaultConfig) for LPUART_GetDefaultConfig
    fsl_adapter_lpuart.o(.text.HAL_UartInit) refers to fsl_adapter_lpuart.o(.rodata.s_LpuartAdapterBase) for s_LpuartAdapterBase
    fsl_adapter_lpuart.o(.text.HAL_UartInit) refers to fsl_lpuart.o(.text.LPUART_Init) for LPUART_Init
    fsl_adapter_lpuart.o(.text.HAL_UartInit) refers to fsl_adapter_lpuart.o(.rodata.str1.1) for .L.str
    fsl_adapter_lpuart.o(.text.HAL_UartInit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartInit) refers to fsl_adapter_lpuart.o(.text.HAL_UartInit) for [Anonymous Symbol]
    fsl_adapter_lpuart.o(.text.HAL_UartDeinit) refers to fsl_adapter_lpuart.o(.rodata.s_LpuartAdapterBase) for s_LpuartAdapterBase
    fsl_adapter_lpuart.o(.text.HAL_UartDeinit) refers to fsl_lpuart.o(.text.LPUART_Deinit) for LPUART_Deinit
    fsl_adapter_lpuart.o(.text.HAL_UartDeinit) refers to fsl_adapter_lpuart.o(.rodata.str1.1) for .L.str
    fsl_adapter_lpuart.o(.text.HAL_UartDeinit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartDeinit) refers to fsl_adapter_lpuart.o(.text.HAL_UartDeinit) for [Anonymous Symbol]
    fsl_adapter_lpuart.o(.text.HAL_UartReceiveBlocking) refers to fsl_adapter_lpuart.o(.rodata.s_LpuartAdapterBase) for s_LpuartAdapterBase
    fsl_adapter_lpuart.o(.text.HAL_UartReceiveBlocking) refers to fsl_lpuart.o(.text.LPUART_ReadBlocking) for LPUART_ReadBlocking
    fsl_adapter_lpuart.o(.text.HAL_UartReceiveBlocking) refers to fsl_adapter_lpuart.o(.rodata.str1.1) for .L.str
    fsl_adapter_lpuart.o(.text.HAL_UartReceiveBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartReceiveBlocking) refers to fsl_adapter_lpuart.o(.text.HAL_UartReceiveBlocking) for [Anonymous Symbol]
    fsl_adapter_lpuart.o(.text.HAL_UartSendBlocking) refers to fsl_adapter_lpuart.o(.rodata.s_LpuartAdapterBase) for s_LpuartAdapterBase
    fsl_adapter_lpuart.o(.text.HAL_UartSendBlocking) refers to fsl_lpuart.o(.text.LPUART_WriteBlocking) for LPUART_WriteBlocking
    fsl_adapter_lpuart.o(.text.HAL_UartSendBlocking) refers to fsl_adapter_lpuart.o(.rodata.str1.1) for .L.str
    fsl_adapter_lpuart.o(.text.HAL_UartSendBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartSendBlocking) refers to fsl_adapter_lpuart.o(.text.HAL_UartSendBlocking) for [Anonymous Symbol]
    fsl_adapter_lpuart.o(.text.HAL_UartEnterLowpower) refers to fsl_adapter_lpuart.o(.rodata.str1.1) for .L.str
    fsl_adapter_lpuart.o(.text.HAL_UartEnterLowpower) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartEnterLowpower) refers to fsl_adapter_lpuart.o(.text.HAL_UartEnterLowpower) for [Anonymous Symbol]
    fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartExitLowpower) refers to fsl_adapter_lpuart.o(.text.HAL_UartExitLowpower) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_Init) refers to fsl_component_generic_list.o(.text.LIST_Init) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetList) refers to fsl_component_generic_list.o(.text.LIST_GetList) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddTail) refers to fsl_component_generic_list.o(.text.LIST_AddTail) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddHead) refers to fsl_component_generic_list.o(.text.LIST_AddHead) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_RemoveHead) refers to fsl_component_generic_list.o(.text.LIST_RemoveHead) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetHead) refers to fsl_component_generic_list.o(.text.LIST_GetHead) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetNext) refers to fsl_component_generic_list.o(.text.LIST_GetNext) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetPrev) refers to fsl_component_generic_list.o(.text.LIST_GetPrev) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_RemoveElement) refers to fsl_component_generic_list.o(.text.LIST_RemoveElement) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddPrevElement) refers to fsl_component_generic_list.o(.text.LIST_AddPrevElement) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetSize) refers to fsl_component_generic_list.o(.text.LIST_GetSize) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetAvailableSize) refers to fsl_component_generic_list.o(.text.LIST_GetAvailableSize) for [Anonymous Symbol]
    startup_mimxrt1176_cm7.o(.text) refers to startup_mimxrt1176_cm7.o(.isr_vector) for __Vectors
    startup_mimxrt1176_cm7.o(.text) refers to system_mimxrt1176_cm7.o(.text.SystemInit) for SystemInit
    startup_mimxrt1176_cm7.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    startup_mimxrt1176_cm7.o(.text) refers to fsl_lpuart.o(.text.LPUART1_DriverIRQHandler) for LPUART1_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_lpuart.o(.text.LPUART2_DriverIRQHandler) for LPUART2_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_lpuart.o(.text.LPUART3_DriverIRQHandler) for LPUART3_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_lpuart.o(.text.LPUART4_DriverIRQHandler) for LPUART4_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_lpuart.o(.text.LPUART5_DriverIRQHandler) for LPUART5_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_lpuart.o(.text.LPUART6_DriverIRQHandler) for LPUART6_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_lpuart.o(.text.LPUART7_DriverIRQHandler) for LPUART7_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_lpuart.o(.text.LPUART8_DriverIRQHandler) for LPUART8_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_lpuart.o(.text.LPUART9_DriverIRQHandler) for LPUART9_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_lpuart.o(.text.LPUART10_DriverIRQHandler) for LPUART10_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_lpuart.o(.text.LPUART11_DriverIRQHandler) for LPUART11_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_lpuart.o(.text.LPUART12_DriverIRQHandler) for LPUART12_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_flexcan.o(.text.CAN1_DriverIRQHandler) for CAN1_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_flexcan.o(.text.CAN2_DriverIRQHandler) for CAN2_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_flexcan.o(.text.CAN3_DriverIRQHandler) for CAN3_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.isr_vector) refers to startup_mimxrt1176_cm7.o(.text) for Reset_Handler
    fsl_flexspi_nor_boot.o(.boot_hdr.ivt) refers to startup_mimxrt1176_cm7.o(.text) for Reset_Handler
    fsl_flexspi_nor_boot.o(.boot_hdr.ivt) refers to fsl_flexspi_nor_boot.o(.boot_hdr.boot_data) for g_boot_data
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry4.o(.ARM.Collect$$$$00000003) for _main_stk
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    malloc2.o(i.__free$2region) refers to mvars.o(.data) for __microlib_freelist
    malloc2.o(i.__malloc$2region) refers to mvars.o(.data) for __microlib_freelist_initialised
    malloc2.o(i.__malloc$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocr2.o(i.__free$realloc$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocr2.o(i.__malloc$realloc$2region) refers to mallocr2.o(i.internal_alloc) for internal_alloc
    mallocr2.o(i.__malloc$realloc$2region) refers to mvars.o(.data) for __microlib_freelist_initialised
    mallocr2.o(i.__malloc$realloc$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocr2.o(i.__realloc$2region) refers to mallocr2.o(i.__free$realloc$2region) for __free$realloc$2region
    mallocr2.o(i.__realloc$2region) refers to mallocr2.o(i.internal_alloc) for internal_alloc
    mallocr2.o(i.__realloc$2region) refers to mallocr2.o(i.__malloc$realloc$2region) for __malloc$realloc$2region
    mallocr2.o(i.__realloc$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocr2.o(i.internal_alloc) refers to memcpy.o(.text) for __aeabi_memcpy
    mallocr2.o(i.internal_alloc) refers to mvars.o(.data) for __microlib_freelist
    malloca2.o(i.__aligned_malloc$2region) refers to mvars.o(.data) for __microlib_freelist_initialised
    malloca2.o(i.__aligned_malloc$2region) refers to mvars.o(.data) for __microlib_freelist
    malloca2.o(i.__free$memalign$2region) refers to mvars.o(.data) for __microlib_freelist
    malloca2.o(i.__malloc$memalign$2region) refers to malloca2.o(i.__aligned_malloc$2region) for __aligned_malloc$2region
    mallocra2.o(i.__aligned_malloc$realloc$2region) refers to mallocra2.o(i.internal_alloc) for internal_alloc
    mallocra2.o(i.__aligned_malloc$realloc$2region) refers to mvars.o(.data) for __microlib_freelist_initialised
    mallocra2.o(i.__aligned_malloc$realloc$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocra2.o(i.__free$realloc$memalign$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocra2.o(i.__malloc$realloc$memalign$2region) refers to mallocra2.o(i.__aligned_malloc$realloc$2region) for __aligned_malloc$realloc$2region
    mallocra2.o(i.__realloc$memalign$2region) refers to mallocra2.o(i.__free$realloc$memalign$2region) for __free$realloc$memalign$2region
    mallocra2.o(i.__realloc$memalign$2region) refers to mallocra2.o(i.internal_alloc) for internal_alloc
    mallocra2.o(i.__realloc$memalign$2region) refers to mallocra2.o(i.__malloc$realloc$memalign$2region) for __malloc$realloc$memalign$2region
    mallocra2.o(i.__realloc$memalign$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocra2.o(i.internal_alloc) refers to memcpy.o(.text) for __aeabi_memcpy
    mallocra2.o(i.internal_alloc) refers to mvars.o(.data) for __microlib_freelist
    errno.o(i.__aeabi_errno_addr) refers to errno.o(.data) for .data
    errno.o(i.__read_errno) refers to errno.o(.data) for .data
    errno.o(i.__set_errno) refers to errno.o(.data) for .data
    strtoul.o(.text) refers to errno.o(i.__aeabi_errno_addr) for __aeabi_errno_addr
    strtoul.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    strtoul.o(.text) refers to _strtoul.o(.text) for _strtoul
    entry4.o(.ARM.Collect$$$$00000003) refers to entry4.o(.ARM.Collect$$$$00002714) for __lit__00000000
    entry4.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to flexcan_interrupt_transfer.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to flexcan_interrupt_transfer.o(.text.main) for main
    ctype_o.o(.text) refers to ctype_o.o(.constdata) for .constdata
    ctype_o.o(.constdata) refers to ctype_o.o(.constdata) for __ctype_table
    isalnum_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isalpha_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isblank_o.o(.text) refers to ctype_o.o(.constdata) for __ctype_table
    iscntrl_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isdigit_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isgraph_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    islower_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isprint_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    ispunct_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isspace_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isupper_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isxdigit_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    _strtoul.o(.text) refers to _chval.o(.text) for _chval
    _strtoul.o(.text) refers to errno.o(i.__aeabi_errno_addr) for __aeabi_errno_addr
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload


==============================================================================

Removing Unused input sections from the image.

    Removing flexcan_interrupt_transfer.o(.text), (0 bytes).
    Removing flexcan_interrupt_transfer.o(.ARM.exidx.text.main), (8 bytes).
    Removing flexcan_interrupt_transfer.o(.ARM.exidx.text.flexcan_callback), (8 bytes).
    Removing flexcan_interrupt_transfer.o(.ARM.use_no_argv), (4 bytes).
    Removing pin_mux.o(.text), (0 bytes).
    Removing pin_mux.o(.text.BOARD_InitBootPins), (108 bytes).
    Removing pin_mux.o(.ARM.exidx.text.BOARD_InitBootPins), (8 bytes).
    Removing pin_mux.o(.ARM.exidx.text.BOARD_InitPins), (8 bytes).
    Removing board.o(.text), (0 bytes).
    Removing board.o(.text.BOARD_DebugConsoleSrcFreq), (74 bytes).
    Removing board.o(.ARM.exidx.text.BOARD_DebugConsoleSrcFreq), (8 bytes).
    Removing board.o(.ARM.exidx.text.BOARD_InitDebugConsole), (8 bytes).
    Removing board.o(.ARM.exidx.text.BOARD_ConfigMPU), (8 bytes).
    Removing board.o(.text.BOARD_SD_Pin_Config), (2 bytes).
    Removing board.o(.ARM.exidx.text.BOARD_SD_Pin_Config), (8 bytes).
    Removing board.o(.text.BOARD_MMC_Pin_Config), (2 bytes).
    Removing board.o(.ARM.exidx.text.BOARD_MMC_Pin_Config), (8 bytes).
    Removing clock_config.o(.text), (0 bytes).
    Removing clock_config.o(.text.BOARD_InitBootClocks), (4 bytes).
    Removing clock_config.o(.ARM.exidx.text.BOARD_InitBootClocks), (8 bytes).
    Removing clock_config.o(.ARM.exidx.text.BOARD_BootClockRUN), (8 bytes).
    Removing clock_config.o(.text.BOARD_BootClockRUN_800M), (1570 bytes).
    Removing clock_config.o(.ARM.exidx.text.BOARD_BootClockRUN_800M), (8 bytes).
    Removing clock_config.o(.rodata.armPllConfig_BOARD_BootClockRUN_800M), (8 bytes).
    Removing clock_config.o(.rodata.sysPll2Config_BOARD_BootClockRUN_800M), (12 bytes).
    Removing clock_config.o(.rodata.videoPllConfig_BOARD_BootClockRUN_800M), (20 bytes).
    Removing dcd.o(.text), (0 bytes).
    Removing dcd.o(.rodata.dcd_data), (1 bytes).
    Removing fsl_str.o(.text), (0 bytes).
    Removing fsl_str.o(.text.StrFormatPrintf), (724 bytes).
    Removing fsl_str.o(.ARM.exidx.text.StrFormatPrintf), (8 bytes).
    Removing fsl_str.o(.text.StrFormatScanf), (746 bytes).
    Removing fsl_str.o(.ARM.exidx.text.StrFormatScanf), (8 bytes).
    Removing fsl_debug_console.o(.text), (0 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Init), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_Deinit), (28 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Deinit), (8 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Printf), (8 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Vprintf), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_Putchar), (44 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Putchar), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_Scanf), (166 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Scanf), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_Getchar), (50 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Getchar), (8 bytes).
    Removing fsl_assert.o(.text), (0 bytes).
    Removing fsl_assert.o(.ARM.exidx.text.__aeabi_assert), (8 bytes).
    Removing fsl_flexcan.o(.text), (0 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_GetInstance), (52 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_GetInstance), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_EnterFreezeMode), (24 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_EnterFreezeMode), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_ExitFreezeMode), (36 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_ExitFreezeMode), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_SetBitRate), (182 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetBitRate), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_CalculateImprovedTimingValues), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_SetTimingConfig), (180 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetTimingConfig), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_SetFDBitRate), (178 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetFDBitRate), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_FDCalculateImprovedTimingValues), (564 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_FDCalculateImprovedTimingValues), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_SetFDTimingConfig), (168 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetFDTimingConfig), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_Init), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_Reset), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_FDInit), (652 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_FDInit), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_Deinit), (124 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_Deinit), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_GetDefaultConfig), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetRxMbGlobalMask), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_SetRxFifoGlobalMask), (60 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetRxFifoGlobalMask), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_SetRxIndividualMask), (140 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetRxIndividualMask), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetTxMbConfig), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_CalculateImprovedNominalTimingValues), (312 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_CalculateImprovedNominalTimingValues), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetFDTxMbConfig), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetRxMbConfig), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_SetFDRxMbConfig), (324 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetFDRxMbConfig), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_SetRxFifoConfig), (640 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetRxFifoConfig), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_EnableRxFifoDMA), (116 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_EnableRxFifoDMA), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_GetMemoryErrorReportStatus), (188 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_GetMemoryErrorReportStatus), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_WriteTxMb), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_WriteFDTxMb), (378 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_WriteFDTxMb), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_ReadRxMb), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_ReadFDRxMb), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_ReadRxFifo), (100 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_ReadRxFifo), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_TransferSendBlocking), (78 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferSendBlocking), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_TransferReceiveBlocking), (60 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferReceiveBlocking), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_TransferFDSendBlocking), (186 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferFDSendBlocking), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_TransferFDReceiveBlocking), (60 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferFDReceiveBlocking), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_TransferReceiveFifoBlocking), (120 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferReceiveFifoBlocking), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferCreateHandle), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferHandleIRQ), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferSendNonBlocking), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferReceiveNonBlocking), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_TransferFDSendNonBlocking), (240 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferFDSendNonBlocking), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_TransferFDReceiveNonBlocking), (216 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferFDReceiveNonBlocking), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_TransferReceiveFifoNonBlocking), (124 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferReceiveFifoNonBlocking), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_TransferGetReceiveFifoCount), (48 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferGetReceiveFifoCount), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferAbortSend), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferFDAbortSend), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferFDAbortReceive), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferAbortReceive), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_TransferAbortReceiveFifo), (62 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferAbortReceiveFifo), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_GetTimeStamp), (38 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_GetTimeStamp), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.CAN1_DriverIRQHandler), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.CAN2_DriverIRQHandler), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.CAN3_DriverIRQHandler), (8 bytes).
    Removing fsl_clock.o(.text), (0 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_InitArmPll), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_DeinitArmPll), (22 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitArmPll), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_CalcPllSpreadSpectrum), (72 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_CalcPllSpreadSpectrum), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_InitSysPll2), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_DeinitSysPll2), (48 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitSysPll2), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_IsSysPll2PfdEnabled), (26 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_IsSysPll2PfdEnabled), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_InitPfd), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_DeinitPfd), (58 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitPfd), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetPfdFreq), (224 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetPfdFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_InitSysPll3), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_DeinitSysPll3), (40 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitSysPll3), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_IsSysPll3PfdEnabled), (26 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_IsSysPll3PfdEnabled), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetPllBypass), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_InitAudioPllWithFreq), (384 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_InitAudioPllWithFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_CalcAvPllFreq), (366 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_CalcAvPllFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_InitAudioPll), (216 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_InitAudioPll), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.ANATOP_PllConfigure), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitAudioPll), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GPC_SetAudioPllOutputFreq), (78 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GPC_SetAudioPllOutputFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_CalcArmPllFreq), (192 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_CalcArmPllFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_InitArmPllWithFreq), (184 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_InitArmPllWithFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_InitVideoPllWithFreq), (384 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_InitVideoPllWithFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_InitVideoPll), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_DeinitVideoPll), (78 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitVideoPll), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GPC_SetVideoPllOutputFreq), (78 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GPC_SetVideoPllOutputFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_InitSysPll1), (198 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_InitSysPll1), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitSysPll1), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GPC_SetSysPll1OutputFreq), (80 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GPC_SetSysPll1OutputFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_EnableOsc24M), (32 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_EnableOsc24M), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_SetOsc24MWorkMode), (18 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_SetOsc24MWorkMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_SetOsc16MConfig), (38 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_SetOsc16MConfig), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MRefClkDiv), (30 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_SetOscRc400MRefClkDiv), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MFastClkCount), (28 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_SetOscRc400MFastClkCount), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MHysteresisValue), (42 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_SetOscRc400MHysteresisValue), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_BypassOscRc400MTuneLogic), (20 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_BypassOscRc400MTuneLogic), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_EnableOscRc400MTuneLogic), (20 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_EnableOscRc400MTuneLogic), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_FreezeOscRc400MTuneValue), (20 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_FreezeOscRc400MTuneValue), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MTuneValue), (32 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_SetOscRc400MTuneValue), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_Set1MHzOutputBehavior), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_SetLocked1MHzCount), (52 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_SetLocked1MHzCount), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_CheckLocked1MHzErrorFlag), (16 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_CheckLocked1MHzErrorFlag), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_ClearLocked1MHzErrorFlag), (10 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_ClearLocked1MHzErrorFlag), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_GetCurrentOscRc400MFastClockCount), (14 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_GetCurrentOscRc400MFastClockCount), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_GetCurrentOscRc400MTuneValue), (14 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_GetCurrentOscRc400MTuneValue), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetPllFreq), (296 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetPllFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetGroupConfig), (92 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetGroupConfig), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_TrimOscRc400M), (64 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_TrimOscRc400M), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_EnableOscRc400M), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetFreqFromObs), (92 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetFreqFromObs), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_EnableUsbhs0Clock), (4 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbhs0Clock), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_EnableUsbhs0PhyPllClock), (242 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbhs0PhyPllClock), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_DisableUsbhs0PhyPllClock), (22 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_DisableUsbhs0PhyPllClock), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_EnableUsbhs1Clock), (4 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbhs1Clock), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_EnableUsbhs1PhyPllClock), (242 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbhs1PhyPllClock), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_DisableUsbhs1PhyPllClock), (22 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_DisableUsbhs1PhyPllClock), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSCPLL_ControlBySetPointMode), (36 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSCPLL_ControlBySetPointMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSCPLL_ControlByCpuLowPowerMode), (80 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSCPLL_ControlByCpuLowPowerMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_ROOT_ControlBySetPointMode), (120 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_ROOT_ControlBySetPointMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_LPCG_ControlBySetPointMode), (50 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_LPCG_ControlBySetPointMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_LPCG_ControlByCpuLowPowerMode), (92 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_LPCG_ControlByCpuLowPowerMode), (8 bytes).
    Removing fsl_common.o(.text), (0 bytes).
    Removing fsl_common.o(.text.SDK_Malloc), (72 bytes).
    Removing fsl_common.o(.ARM.exidx.text.SDK_Malloc), (8 bytes).
    Removing fsl_common.o(.text.SDK_Free), (24 bytes).
    Removing fsl_common.o(.ARM.exidx.text.SDK_Free), (8 bytes).
    Removing fsl_common_arm.o(.text), (0 bytes).
    Removing fsl_common_arm.o(.text.MSDK_EnableCpuCycleCounter), (136 bytes).
    Removing fsl_common_arm.o(.ARM.exidx.text.MSDK_EnableCpuCycleCounter), (8 bytes).
    Removing fsl_common_arm.o(.text.MSDK_GetCpuCycleCount), (12 bytes).
    Removing fsl_common_arm.o(.ARM.exidx.text.MSDK_GetCpuCycleCount), (8 bytes).
    Removing fsl_common_arm.o(.ARM.exidx.text.SDK_DelayAtLeastUs), (8 bytes).
    Removing fsl_lpuart.o(.text), (0 bytes).
    Removing fsl_lpuart.o(.text.LPUART_GetInstance), (50 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_GetInstance), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferGetRxRingBufferLength), (38 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferGetRxRingBufferLength), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_Init), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_Deinit), (128 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_Deinit), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_GetDefaultConfig), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_SetBaudRate), (228 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_SetBaudRate), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_Enable9bitMode), (64 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_Enable9bitMode), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_SendAddress), (48 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_SendAddress), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_EnableInterrupts), (44 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_EnableInterrupts), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_DisableInterrupts), (52 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_DisableInterrupts), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_GetEnabledInterrupts), (44 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_GetEnabledInterrupts), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_GetStatusFlags), (24 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_GetStatusFlags), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_ClearStatusFlags), (60 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_ClearStatusFlags), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_WriteBlocking), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_ReadBlocking), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferCreateHandle), (214 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferCreateHandle), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferHandleIRQ), (900 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferHandleIRQ), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferStartRingBuffer), (96 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferStartRingBuffer), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferStopRingBuffer), (64 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferStopRingBuffer), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferSendNonBlocking), (184 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferSendNonBlocking), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferAbortSend), (54 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferAbortSend), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferGetSendCount), (84 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferGetSendCount), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferReceiveNonBlocking), (416 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferReceiveNonBlocking), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferAbortReceive), (60 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferAbortReceive), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferGetReceiveCount), (76 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferGetReceiveCount), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferHandleErrorIRQ), (2 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferHandleErrorIRQ), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART1_DriverIRQHandler), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART2_DriverIRQHandler), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART3_DriverIRQHandler), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART4_DriverIRQHandler), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART5_DriverIRQHandler), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART6_DriverIRQHandler), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART7_DriverIRQHandler), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART8_DriverIRQHandler), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART9_DriverIRQHandler), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART10_DriverIRQHandler), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART11_DriverIRQHandler), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART12_DriverIRQHandler), (8 bytes).
    Removing fsl_lpuart.o(.rodata.s_lpuartIRQ), (26 bytes).
    Removing fsl_gpio.o(.text), (0 bytes).
    Removing fsl_gpio.o(.text.GPIO_PinInit), (424 bytes).
    Removing fsl_gpio.o(.ARM.exidx.text.GPIO_PinInit), (8 bytes).
    Removing fsl_gpio.o(.text.GPIO_PinWrite), (44 bytes).
    Removing fsl_gpio.o(.ARM.exidx.text.GPIO_PinWrite), (8 bytes).
    Removing fsl_gpio.o(.text.GPIO_PinSetInterruptConfig), (132 bytes).
    Removing fsl_gpio.o(.ARM.exidx.text.GPIO_PinSetInterruptConfig), (8 bytes).
    Removing fsl_gpio.o(.rodata.str1.1), (69 bytes).
    Removing fsl_pmu.o(.text), (0 bytes).
    Removing fsl_pmu.o(.text.PMU_SetPllLdoControlMode), (20 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_SetPllLdoControlMode), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_SwitchPllLdoToGPCMode), (18 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_SwitchPllLdoToGPCMode), (8 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_StaticEnablePllLdo), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_StaticDisablePllLdo), (10 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_StaticDisablePllLdo), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_SetLpsrAnaLdoControlMode), (20 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_SetLpsrAnaLdoControlMode), (8 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_StaticEnableLpsrAnaLdoBypassMode), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_StaticGetLpsrAnaLdoDefaultConfig), (54 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_StaticGetLpsrAnaLdoDefaultConfig), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_StaticLpsrAnaLdoInit), (108 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_StaticLpsrAnaLdoInit), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_StaticLpsrAnaLdoDeinit), (14 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_StaticLpsrAnaLdoDeinit), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_SetLpsrDigLdoControlMode), (20 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_SetLpsrDigLdoControlMode), (8 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_StaticEnableLpsrDigLdoBypassMode), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_StaticGetLpsrDigLdoDefaultConfig), (48 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_StaticGetLpsrDigLdoDefaultConfig), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_StaticLpsrDigLdoInit), (100 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_StaticLpsrDigLdoInit), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_StaticLpsrDigLdoDeinit), (30 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_StaticLpsrDigLdoDeinit), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_GPCSetLpsrDigLdoTargetVoltage), (104 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_GPCSetLpsrDigLdoTargetVoltage), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_GetSnvsDigLdoDefaultConfig), (48 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_GetSnvsDigLdoDefaultConfig), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_SnvsDigLdoInit), (22 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_SnvsDigLdoInit), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_GPCEnableLdo), (60 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_GPCEnableLdo), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_GPCSetLdoOperateMode), (82 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_GPCSetLdoOperateMode), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_GPCEnableLdoTrackingMode), (80 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_GPCEnableLdoTrackingMode), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_GPCEnableLdoBypassMode), (80 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_GPCEnableLdoBypassMode), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_GPCEnableLdoStandbyMode), (56 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_GPCEnableLdoStandbyMode), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_SetBandgapControlMode), (20 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_SetBandgapControlMode), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_SwitchBandgapToGPCMode), (18 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_SwitchBandgapToGPCMode), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_DisableBandgapSelfBiasAfterPowerUp), (40 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_DisableBandgapSelfBiasAfterPowerUp), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_EnableBandgapSelfBiasBeforePowerDown), (26 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_EnableBandgapSelfBiasBeforePowerDown), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_StaticBandgapInit), (94 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_StaticBandgapInit), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_WellBiasInit), (78 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_WellBiasInit), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_GetWellBiasDefaultConfig), (46 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_GetWellBiasDefaultConfig), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_SetBodyBiasControlMode), (80 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_SetBodyBiasControlMode), (8 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_EnableBodyBias), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_GPCEnableBodyBias), (24 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_GPCEnableBodyBias), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_GPCEnableBodyBiasStandbyMode), (24 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_GPCEnableBodyBiasStandbyMode), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_GPCGetBodyBiasDefaultConfig), (40 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_GPCGetBodyBiasDefaultConfig), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_GPCSetBodyBiasConfig), (108 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_GPCSetBodyBiasConfig), (8 bytes).
    Removing fsl_pmu.o(.rodata.str1.1), (139 bytes).
    Removing fsl_pmu.o(.rodata.cst16), (16 bytes).
    Removing fsl_dcdc.o(.text), (0 bytes).
    Removing fsl_dcdc.o(.text.DCDC_Init), (134 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_Init), (8 bytes).
    Removing fsl_dcdc.o(.text.DCDC_Deinit), (98 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_Deinit), (8 bytes).
    Removing fsl_dcdc.o(.text.DCDC_GetDefaultConfig), (42 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_GetDefaultConfig), (8 bytes).
    Removing fsl_dcdc.o(.text.DCDC_GetDefaultDetectionConfig), (58 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_GetDefaultDetectionConfig), (8 bytes).
    Removing fsl_dcdc.o(.text.DCDC_SetDetectionConfig), (122 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_SetDetectionConfig), (8 bytes).
    Removing fsl_dcdc.o(.text.DCDC_SetClockSource), (72 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_SetClockSource), (8 bytes).
    Removing fsl_dcdc.o(.text.DCDC_GetDefaultLowPowerConfig), (44 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_GetDefaultLowPowerConfig), (8 bytes).
    Removing fsl_dcdc.o(.text.DCDC_SetLowPowerConfig), (46 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_SetLowPowerConfig), (8 bytes).
    Removing fsl_dcdc.o(.text.DCDC_GetDefaultLoopControlConfig), (56 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_GetDefaultLoopControlConfig), (8 bytes).
    Removing fsl_dcdc.o(.text.DCDC_SetLoopControlConfig), (150 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_SetLoopControlConfig), (8 bytes).
    Removing fsl_dcdc.o(.text.DCDC_SetMinPowerConfig), (46 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_SetMinPowerConfig), (8 bytes).
    Removing fsl_dcdc.o(.text.DCDC_SetInternalRegulatorConfig), (42 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_SetInternalRegulatorConfig), (8 bytes).
    Removing fsl_dcdc.o(.text.DCDC_SetPointInit), (576 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_SetPointInit), (8 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_BootIntoDCM), (8 bytes).
    Removing fsl_dcdc.o(.text.DCDC_BootIntoCCM), (28 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_BootIntoCCM), (8 bytes).
    Removing fsl_dcdc.o(.rodata.str1.1), (126 bytes).
    Removing fsl_cache.o(.text), (0 bytes).
    Removing fsl_cache.o(.text.L1CACHE_InvalidateICacheByRange), (50 bytes).
    Removing fsl_cache.o(.ARM.exidx.text.L1CACHE_InvalidateICacheByRange), (8 bytes).
    Removing fsl_cache.o(.text.ICACHE_InvalidateByRange), (50 bytes).
    Removing fsl_cache.o(.ARM.exidx.text.ICACHE_InvalidateByRange), (8 bytes).
    Removing fsl_cache.o(.text.DCACHE_InvalidateByRange), (46 bytes).
    Removing fsl_cache.o(.ARM.exidx.text.DCACHE_InvalidateByRange), (8 bytes).
    Removing fsl_cache.o(.text.DCACHE_CleanByRange), (46 bytes).
    Removing fsl_cache.o(.ARM.exidx.text.DCACHE_CleanByRange), (8 bytes).
    Removing fsl_cache.o(.text.DCACHE_CleanInvalidateByRange), (46 bytes).
    Removing fsl_cache.o(.ARM.exidx.text.DCACHE_CleanInvalidateByRange), (8 bytes).
    Removing fsl_anatop_ai.o(.text), (0 bytes).
    Removing fsl_anatop_ai.o(.ARM.exidx.text.ANATOP_AI_Access), (8 bytes).
    Removing fsl_anatop_ai.o(.ARM.exidx.text.ANATOP_AI_Write), (8 bytes).
    Removing fsl_anatop_ai.o(.ARM.exidx.text.ANATOP_AI_Read), (8 bytes).
    Removing fsl_anatop_ai.o(.ARM.exidx.text.ANATOP_AI_WriteWithMaskShift), (8 bytes).
    Removing system_mimxrt1176_cm7.o(.text), (0 bytes).
    Removing system_mimxrt1176_cm7.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_mimxrt1176_cm7.o(.ARM.exidx.text.SystemInitHook), (8 bytes).
    Removing system_mimxrt1176_cm7.o(.text.SystemCoreClockUpdate), (2 bytes).
    Removing system_mimxrt1176_cm7.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing fsl_adapter_lpuart.o(.text), (0 bytes).
    Removing fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartInit), (8 bytes).
    Removing fsl_adapter_lpuart.o(.text.HAL_UartDeinit), (50 bytes).
    Removing fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartDeinit), (8 bytes).
    Removing fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartReceiveBlocking), (8 bytes).
    Removing fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartSendBlocking), (8 bytes).
    Removing fsl_adapter_lpuart.o(.text.HAL_UartEnterLowpower), (32 bytes).
    Removing fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartEnterLowpower), (8 bytes).
    Removing fsl_adapter_lpuart.o(.text.HAL_UartExitLowpower), (4 bytes).
    Removing fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartExitLowpower), (8 bytes).
    Removing fsl_component_generic_list.o(.text), (0 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_Init), (12 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_Init), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetList), (4 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetList), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_AddTail), (66 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddTail), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_AddHead), (60 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddHead), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_RemoveHead), (56 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_RemoveHead), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetHead), (4 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetHead), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetNext), (4 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetNext), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetPrev), (4 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetPrev), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_RemoveElement), (80 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_RemoveElement), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_AddPrevElement), (106 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddPrevElement), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetSize), (4 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetSize), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetAvailableSize), (8 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetAvailableSize), (8 bytes).
    Removing fsl_flexspi_nor_boot.o(.text), (0 bytes).
    Removing evkmimxrt1170_flexspi_nor_config.o(.text), (0 bytes).

480 unused section(s) (total 23869 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  ctype_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isalnum_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isalpha_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isblank_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  iscntrl_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isdigit_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isgraph_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  islower_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isprint_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  ispunct_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isspace_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isupper_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isxdigit_o.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/errno.c                 0x00000000   Number         0  errno.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry4.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  malloc2.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  mallocr2.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  malloca2.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  mallocra2.o ABSOLUTE
    ../clib/microlib/malloc/mvars.c          0x00000000   Number         0  mvars.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpy.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyc.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memset.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/string/strlen.c         0x00000000   Number         0  strlen.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  strtoul.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  _strtoul.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  _chval.o ABSOLUTE
    board.c                                  0x00000000   Number         0  board.o ABSOLUTE
    clock_config.c                           0x00000000   Number         0  clock_config.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    dcd.c                                    0x00000000   Number         0  dcd.o ABSOLUTE
    evkmimxrt1170_flexspi_nor_config.c       0x00000000   Number         0  evkmimxrt1170_flexspi_nor_config.o ABSOLUTE
    flexcan_interrupt_transfer.c             0x00000000   Number         0  flexcan_interrupt_transfer.o ABSOLUTE
    fsl_adapter_lpuart.c                     0x00000000   Number         0  fsl_adapter_lpuart.o ABSOLUTE
    fsl_anatop_ai.c                          0x00000000   Number         0  fsl_anatop_ai.o ABSOLUTE
    fsl_assert.c                             0x00000000   Number         0  fsl_assert.o ABSOLUTE
    fsl_cache.c                              0x00000000   Number         0  fsl_cache.o ABSOLUTE
    fsl_clock.c                              0x00000000   Number         0  fsl_clock.o ABSOLUTE
    fsl_common.c                             0x00000000   Number         0  fsl_common.o ABSOLUTE
    fsl_common_arm.c                         0x00000000   Number         0  fsl_common_arm.o ABSOLUTE
    fsl_component_generic_list.c             0x00000000   Number         0  fsl_component_generic_list.o ABSOLUTE
    fsl_dcdc.c                               0x00000000   Number         0  fsl_dcdc.o ABSOLUTE
    fsl_debug_console.c                      0x00000000   Number         0  fsl_debug_console.o ABSOLUTE
    fsl_flexcan.c                            0x00000000   Number         0  fsl_flexcan.o ABSOLUTE
    fsl_flexspi_nor_boot.c                   0x00000000   Number         0  fsl_flexspi_nor_boot.o ABSOLUTE
    fsl_gpio.c                               0x00000000   Number         0  fsl_gpio.o ABSOLUTE
    fsl_lpuart.c                             0x00000000   Number         0  fsl_lpuart.o ABSOLUTE
    fsl_pmu.c                                0x00000000   Number         0  fsl_pmu.o ABSOLUTE
    fsl_str.c                                0x00000000   Number         0  fsl_str.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    pin_mux.c                                0x00000000   Number         0  pin_mux.o ABSOLUTE
    system_MIMXRT1176_cm7.c                  0x00000000   Number         0  system_mimxrt1176_cm7.o ABSOLUTE
    s_flexcanIsr                             0x20000004   Data           4  fsl_flexcan.o(.data.s_flexcanIsr)
    [Anonymous Symbol]                       0x20000004   Section        0  fsl_flexcan.o(.data.s_flexcanIsr)
    s_debugConsole                           0x200003b8   Data          20  fsl_debug_console.o(.bss.s_debugConsole)
    [Anonymous Symbol]                       0x200003b8   Section        0  fsl_debug_console.o(.bss.s_debugConsole)
    s_flexcanHandle                          0x200003cc   Data          16  fsl_flexcan.o(.bss.s_flexcanHandle)
    [Anonymous Symbol]                       0x200003cc   Section        0  fsl_flexcan.o(.bss.s_flexcanHandle)
    __tagsym$$used.0                         0x30000400   Number         0  evkmimxrt1170_flexspi_nor_config.o(.boot_hdr.conf)
    __tagsym$$used.1                         0x30001000   Number         0  fsl_flexspi_nor_boot.o(.boot_hdr.ivt)
    __tagsym$$used.0                         0x30001020   Number         0  fsl_flexspi_nor_boot.o(.boot_hdr.boot_data)
    .ARM.Collect$$$$00000000                 0x30002400   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000003                 0x30002400   Section        4  entry4.o(.ARM.Collect$$$$00000003)
    .ARM.Collect$$$$00000004                 0x30002404   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x30002408   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x30002408   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x30002408   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x30002410   Data           4  entry4.o(.ARM.Collect$$$$00002714)
    .ARM.Collect$$$$0000000D                 0x30002410   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x30002410   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002714                 0x30002410   Section        4  entry4.o(.ARM.Collect$$$$00002714)
    [Anonymous Symbol]                       0x30002414   Section        0  startup_mimxrt1176_cm7.o(.text)
    .text                                    0x300026e8   Section        0  uldiv.o(.text)
    .text                                    0x3000274a   Section        0  memcpy.o(.text)
    .text                                    0x30002772   Section        0  memset.o(.text)
    .text                                    0x30002784   Section        0  strlen.o(.text)
    .text                                    0x30002792   Section        0  llshl.o(.text)
    .text                                    0x300027b0   Section        0  llushr.o(.text)
    .text                                    0x300027d0   Section       48  init.o(.text)
    [Anonymous Symbol]                       0x30002800   Section        0  fsl_anatop_ai.o(.text.ANATOP_AI_Access)
    [Anonymous Symbol]                       0x30002b48   Section        0  fsl_anatop_ai.o(.text.ANATOP_AI_Read)
    [Anonymous Symbol]                       0x30002b58   Section        0  fsl_anatop_ai.o(.text.ANATOP_AI_Write)
    [Anonymous Symbol]                       0x30002b68   Section        0  fsl_anatop_ai.o(.text.ANATOP_AI_WriteWithMaskShift)
    ANATOP_PllConfigure                      0x30002b99   Thumb Code   158  fsl_clock.o(.text.ANATOP_PllConfigure)
    [Anonymous Symbol]                       0x30002b98   Section        0  fsl_clock.o(.text.ANATOP_PllConfigure)
    [Anonymous Symbol]                       0x30002c38   Section        0  clock_config.o(.text.BOARD_BootClockRUN)
    [Anonymous Symbol]                       0x30003260   Section        0  board.o(.text.BOARD_ConfigMPU)
    [Anonymous Symbol]                       0x30003598   Section        0  board.o(.text.BOARD_InitDebugConsole)
    [Anonymous Symbol]                       0x300035f8   Section        0  pin_mux.o(.text.BOARD_InitPins)
    [Anonymous Symbol]                       0x30003668   Section        0  fsl_flexcan.o(.text.CAN1_DriverIRQHandler)
    [Anonymous Symbol]                       0x300036c0   Section        0  fsl_flexcan.o(.text.CAN2_DriverIRQHandler)
    [Anonymous Symbol]                       0x30003718   Section        0  fsl_flexcan.o(.text.CAN3_DriverIRQHandler)
    [Anonymous Symbol]                       0x30003770   Section        0  fsl_clock.o(.text.CLOCK_DeinitAudioPll)
    [Anonymous Symbol]                       0x300037c0   Section        0  fsl_clock.o(.text.CLOCK_DeinitSysPll1)
    [Anonymous Symbol]                       0x30003820   Section        0  fsl_clock.o(.text.CLOCK_GetFreq)
    [Anonymous Symbol]                       0x30003b08   Section        0  fsl_clock.o(.text.CLOCK_InitArmPll)
    [Anonymous Symbol]                       0x30003be0   Section        0  fsl_clock.o(.text.CLOCK_InitPfd)
    [Anonymous Symbol]                       0x30003cf8   Section        0  fsl_clock.o(.text.CLOCK_InitSysPll2)
    [Anonymous Symbol]                       0x30003df8   Section        0  fsl_clock.o(.text.CLOCK_InitSysPll3)
    [Anonymous Symbol]                       0x30003e88   Section        0  fsl_clock.o(.text.CLOCK_InitVideoPll)
    [Anonymous Symbol]                       0x30003f60   Section        0  fsl_clock.o(.text.CLOCK_OSC_EnableOscRc400M)
    [Anonymous Symbol]                       0x30003f80   Section        0  fsl_clock.o(.text.CLOCK_OSC_Set1MHzOutputBehavior)
    [Anonymous Symbol]                       0x30003fb0   Section        0  fsl_clock.o(.text.CLOCK_SetPllBypass)
    [Anonymous Symbol]                       0x30004048   Section        0  fsl_dcdc.o(.text.DCDC_BootIntoDCM)
    [Anonymous Symbol]                       0x30004088   Section        0  fsl_debug_console.o(.text.DbgConsole_Init)
    [Anonymous Symbol]                       0x300040e0   Section        0  fsl_debug_console.o(.text.DbgConsole_Printf)
    [Anonymous Symbol]                       0x30004100   Section        0  fsl_debug_console.o(.text.DbgConsole_Vprintf)
    [Anonymous Symbol]                       0x30004528   Section        0  fsl_flexcan.o(.text.FLEXCAN_CalculateImprovedTimingValues)
    [Anonymous Symbol]                       0x30004670   Section        0  fsl_flexcan.o(.text.FLEXCAN_GetDefaultConfig)
    [Anonymous Symbol]                       0x300046e8   Section        0  fsl_flexcan.o(.text.FLEXCAN_Init)
    [Anonymous Symbol]                       0x300049c8   Section        0  fsl_flexcan.o(.text.FLEXCAN_ReadFDRxMb)
    [Anonymous Symbol]                       0x30004b28   Section        0  fsl_flexcan.o(.text.FLEXCAN_ReadRxMb)
    FLEXCAN_Reset                            0x30004be1   Thumb Code   196  fsl_flexcan.o(.text.FLEXCAN_Reset)
    [Anonymous Symbol]                       0x30004be0   Section        0  fsl_flexcan.o(.text.FLEXCAN_Reset)
    [Anonymous Symbol]                       0x30004cd0   Section        0  fsl_flexcan.o(.text.FLEXCAN_SetFDTxMbConfig)
    [Anonymous Symbol]                       0x30004de0   Section        0  fsl_flexcan.o(.text.FLEXCAN_SetRxMbConfig)
    [Anonymous Symbol]                       0x30004e98   Section        0  fsl_flexcan.o(.text.FLEXCAN_SetRxMbGlobalMask)
    [Anonymous Symbol]                       0x30004ed8   Section        0  fsl_flexcan.o(.text.FLEXCAN_SetTxMbConfig)
    [Anonymous Symbol]                       0x30004f48   Section        0  fsl_flexcan.o(.text.FLEXCAN_TransferAbortReceive)
    [Anonymous Symbol]                       0x30004ff0   Section        0  fsl_flexcan.o(.text.FLEXCAN_TransferAbortSend)
    [Anonymous Symbol]                       0x30005100   Section        0  fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle)
    [Anonymous Symbol]                       0x30005210   Section        0  fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortReceive)
    [Anonymous Symbol]                       0x300052b8   Section        0  fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortSend)
    [Anonymous Symbol]                       0x300053e0   Section        0  fsl_flexcan.o(.text.FLEXCAN_TransferHandleIRQ)
    [Anonymous Symbol]                       0x300057e0   Section        0  fsl_flexcan.o(.text.FLEXCAN_TransferReceiveNonBlocking)
    [Anonymous Symbol]                       0x300058b8   Section        0  fsl_flexcan.o(.text.FLEXCAN_TransferSendNonBlocking)
    [Anonymous Symbol]                       0x300059a8   Section        0  fsl_flexcan.o(.text.FLEXCAN_WriteTxMb)
    [Anonymous Symbol]                       0x30005a98   Section        0  fsl_adapter_lpuart.o(.text.HAL_UartInit)
    [Anonymous Symbol]                       0x30005be0   Section        0  fsl_adapter_lpuart.o(.text.HAL_UartReceiveBlocking)
    [Anonymous Symbol]                       0x30005c50   Section        0  fsl_adapter_lpuart.o(.text.HAL_UartSendBlocking)
    [Anonymous Symbol]                       0x30005cb8   Section        0  fsl_lpuart.o(.text.LPUART10_DriverIRQHandler)
    [Anonymous Symbol]                       0x30005ce0   Section        0  fsl_lpuart.o(.text.LPUART11_DriverIRQHandler)
    [Anonymous Symbol]                       0x30005d08   Section        0  fsl_lpuart.o(.text.LPUART12_DriverIRQHandler)
    [Anonymous Symbol]                       0x30005d30   Section        0  fsl_lpuart.o(.text.LPUART1_DriverIRQHandler)
    [Anonymous Symbol]                       0x30005d58   Section        0  fsl_lpuart.o(.text.LPUART2_DriverIRQHandler)
    [Anonymous Symbol]                       0x30005d80   Section        0  fsl_lpuart.o(.text.LPUART3_DriverIRQHandler)
    [Anonymous Symbol]                       0x30005da8   Section        0  fsl_lpuart.o(.text.LPUART4_DriverIRQHandler)
    [Anonymous Symbol]                       0x30005dd0   Section        0  fsl_lpuart.o(.text.LPUART5_DriverIRQHandler)
    [Anonymous Symbol]                       0x30005df8   Section        0  fsl_lpuart.o(.text.LPUART6_DriverIRQHandler)
    [Anonymous Symbol]                       0x30005e20   Section        0  fsl_lpuart.o(.text.LPUART7_DriverIRQHandler)
    [Anonymous Symbol]                       0x30005e48   Section        0  fsl_lpuart.o(.text.LPUART8_DriverIRQHandler)
    [Anonymous Symbol]                       0x30005e70   Section        0  fsl_lpuart.o(.text.LPUART9_DriverIRQHandler)
    [Anonymous Symbol]                       0x30005e98   Section        0  fsl_lpuart.o(.text.LPUART_GetDefaultConfig)
    [Anonymous Symbol]                       0x30005ed8   Section        0  fsl_lpuart.o(.text.LPUART_Init)
    [Anonymous Symbol]                       0x30006168   Section        0  fsl_lpuart.o(.text.LPUART_ReadBlocking)
    [Anonymous Symbol]                       0x30006280   Section        0  fsl_lpuart.o(.text.LPUART_WriteBlocking)
    [Anonymous Symbol]                       0x300062b8   Section        0  fsl_pmu.o(.text.PMU_EnableBodyBias)
    [Anonymous Symbol]                       0x30006388   Section        0  fsl_pmu.o(.text.PMU_StaticEnableLpsrAnaLdoBypassMode)
    [Anonymous Symbol]                       0x30006420   Section        0  fsl_pmu.o(.text.PMU_StaticEnableLpsrDigLdoBypassMode)
    [Anonymous Symbol]                       0x30006490   Section        0  fsl_pmu.o(.text.PMU_StaticEnablePllLdo)
    [Anonymous Symbol]                       0x300064d0   Section        0  fsl_common_arm.o(.text.SDK_DelayAtLeastUs)
    loop                                     0x300064fa   Number         0  fsl_common_arm.o(.text.SDK_DelayAtLeastUs)
    [Anonymous Symbol]                       0x30006528   Section        0  system_mimxrt1176_cm7.o(.text.SystemInit)
    [Anonymous Symbol]                       0x30006648   Section        0  system_mimxrt1176_cm7.o(.text.SystemInitHook)
    [Anonymous Symbol]                       0x30006650   Section        0  fsl_assert.o(.text.__aeabi_assert)
    flexcan_callback                         0x30006691   Thumb Code    82  flexcan_interrupt_transfer.o(.text.flexcan_callback)
    [Anonymous Symbol]                       0x30006690   Section        0  flexcan_interrupt_transfer.o(.text.flexcan_callback)
    [Anonymous Symbol]                       0x300066e8   Section        0  flexcan_interrupt_transfer.o(.text.main)
    i.__scatterload_copy                     0x30006a50   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x30006a5e   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x30006a60   Section       14  handlers.o(i.__scatterload_zeroinit)
    s_flexcanBases                           0x30006a78   Data          16  fsl_flexcan.o(.rodata.cst16)
    [Anonymous Symbol]                       0x30006a78   Section        0  fsl_flexcan.o(.rodata.cst16)
    s_flexcanClock                           0x30006a88   Data           4  fsl_flexcan.o(.rodata.cst4)
    [Anonymous Symbol]                       0x30006a88   Section        0  fsl_flexcan.o(.rodata.cst4)
    s_flexcanMbIRQ                           0x30006a8c   Data           8  fsl_flexcan.o(.rodata.cst8)
    [Anonymous Symbol]                       0x30006a8c   Section        0  fsl_flexcan.o(.rodata.cst8)
    s_LpuartAdapterBase                      0x30006a94   Data          52  fsl_adapter_lpuart.o(.rodata.s_LpuartAdapterBase)
    [Anonymous Symbol]                       0x30006a94   Section        0  fsl_adapter_lpuart.o(.rodata.s_LpuartAdapterBase)
    s_clockSourceName                        0x30006ac8   Data         632  flexcan_interrupt_transfer.o(.rodata.s_clockSourceName)
    [Anonymous Symbol]                       0x30006ac8   Section        0  flexcan_interrupt_transfer.o(.rodata.s_clockSourceName)
    s_clockSourceName                        0x30006d40   Data         632  board.o(.rodata.s_clockSourceName)
    [Anonymous Symbol]                       0x30006d40   Section        0  board.o(.rodata.s_clockSourceName)
    s_clockSourceName                        0x30006fb8   Data         632  clock_config.o(.rodata.s_clockSourceName)
    [Anonymous Symbol]                       0x30006fb8   Section        0  clock_config.o(.rodata.s_clockSourceName)
    s_clockSourceName                        0x30007230   Data         632  fsl_clock.o(.rodata.s_clockSourceName)
    [Anonymous Symbol]                       0x30007230   Section        0  fsl_clock.o(.rodata.s_clockSourceName)
    s_lpuartBases                            0x300074a8   Data          52  fsl_lpuart.o(.rodata.s_lpuartBases)
    [Anonymous Symbol]                       0x300074a8   Section        0  fsl_lpuart.o(.rodata.s_lpuartBases)
    s_lpuartClock                            0x300074dc   Data          13  fsl_lpuart.o(.rodata.s_lpuartClock)
    [Anonymous Symbol]                       0x300074dc   Section        0  fsl_lpuart.o(.rodata.s_lpuartClock)
    .L.str.7                                 0x300074e9   Data          76  flexcan_interrupt_transfer.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x300074e9   Section        0  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.1                                 0x30007535   Data          43  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str                                   0x30007560   Data          49  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.2                                 0x30007591   Data          37  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.3                                 0x300075b6   Data          37  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.9                                 0x300075db   Data          52  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.1                                 0x3000760f   Data          60  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.11                                0x3000760f   Data          60  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.16                                0x3000760f   Data          60  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.5                                 0x3000760f   Data          60  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.12                                0x3000764b   Data           5  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.2                                 0x3000764b   Data           5  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.4                                 0x3000764b   Data           5  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.1                                 0x30007650   Data          11  board.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x30007650   Section        0  board.o(.rodata.str1.1)
    .L.str.17                                0x3000765b   Data          45  fsl_flexcan.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x3000765b   Section        0  fsl_flexcan.o(.rodata.str1.1)
    .L.str.3                                 0x30007688   Data         117  fsl_flexcan.o(.rodata.str1.1)
    .L.str.27                                0x30007766   Data          51  fsl_flexcan.o(.rodata.str1.1)
    .L.str.11                                0x3000776f   Data          42  fsl_flexcan.o(.rodata.str1.1)
    .L.str                                   0x30007799   Data          38  fsl_flexcan.o(.rodata.str1.1)
    .L.str.7                                 0x3000779c   Data         105  fsl_flexcan.o(.rodata.str1.1)
    .L.str.12                                0x300077bf   Data          35  fsl_flexcan.o(.rodata.str1.1)
    .L.str.28                                0x300077e2   Data          44  fsl_flexcan.o(.rodata.str1.1)
    .L.str.4                                 0x3000780e   Data          88  fsl_flexcan.o(.rodata.str1.1)
    .L.str.13                                0x30007866   Data          27  fsl_flexcan.o(.rodata.str1.1)
    .L.str.1                                 0x30007881   Data          62  fsl_flexcan.o(.rodata.str1.1)
    .L.str.21                                0x3000789a   Data           6  fsl_flexcan.o(.rodata.str1.1)
    .L.str                                   0x300078bf   Data          15  fsl_flexcan.o(.rodata.str1.1)
    .L.str.25                                0x300078bf   Data          15  fsl_flexcan.o(.rodata.str1.1)
    .L.str.24                                0x300078ce   Data          17  fsl_flexcan.o(.rodata.str1.1)
    .L.str.22                                0x300078df   Data          17  fsl_flexcan.o(.rodata.str1.1)
    .L.str.5                                 0x300078f0   Data           6  fsl_flexcan.o(.rodata.str1.1)
    .L.str.2                                 0x300078f6   Data          16  fsl_flexcan.o(.rodata.str1.1)
    .L.str.26                                0x30007906   Data          16  fsl_flexcan.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x30007916   Section        0  fsl_clock.o(.rodata.str1.1)
    .L.str                                   0x30007972   Data         113  fsl_clock.o(.rodata.str1.1)
    .L.str.12                                0x300079f2   Data          12  fsl_clock.o(.rodata.str1.1)
    .L.str.7                                 0x300079fe   Data          31  fsl_clock.o(.rodata.str1.1)
    .L.str.9                                 0x30007a07   Data          15  fsl_clock.o(.rodata.str1.1)
    .L.str.10                                0x30007a16   Data          47  fsl_clock.o(.rodata.str1.1)
    .L.str.8                                 0x30007a1d   Data          31  fsl_clock.o(.rodata.str1.1)
    .L.str.1                                 0x30007a3c   Data          60  fsl_clock.o(.rodata.str1.1)
    .L.str.11                                0x30007a45   Data          45  fsl_clock.o(.rodata.str1.1)
    .L.str.1                                 0x30007a78   Data          65  fsl_common_arm.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x30007a78   Section        0  fsl_common_arm.o(.rodata.str1.1)
    .L.str                                   0x30007ab9   Data          37  fsl_lpuart.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x30007ab9   Section        0  fsl_lpuart.o(.rodata.str1.1)
    .L.str.5                                 0x30007aeb   Data          13  fsl_lpuart.o(.rodata.str1.1)
    .L.str.9                                 0x30007aeb   Data          13  fsl_lpuart.o(.rodata.str1.1)
    .L.str.1                                 0x30007af8   Data          61  fsl_lpuart.o(.rodata.str1.1)
    .L.str.2                                 0x30007b1b   Data          15  fsl_lpuart.o(.rodata.str1.1)
    .L.str.3                                 0x30007b4a   Data          15  fsl_lpuart.o(.rodata.str1.1)
    .L.str.6                                 0x30007b59   Data          71  fsl_lpuart.o(.rodata.str1.1)
    .L.str.5                                 0x30007ba0   Data          71  fsl_lpuart.o(.rodata.str1.1)
    .L.str.8                                 0x30007bc7   Data          13  fsl_lpuart.o(.rodata.str1.1)
    .L.str.11                                0x30007be1   Data          13  fsl_lpuart.o(.rodata.str1.1)
    .L.str.13                                0x30007bee   Data          21  fsl_lpuart.o(.rodata.str1.1)
    .L.str.3                                 0x30007c02   Data          73  fsl_adapter_lpuart.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x30007c02   Section        0  fsl_adapter_lpuart.o(.rodata.str1.1)
    .L.str.14                                0x30007c03   Data          14  fsl_lpuart.o(.rodata.str1.1)
    .L.str.6                                 0x30007c4b   Data          12  fsl_adapter_lpuart.o(.rodata.str1.1)
    .L.str.1                                 0x30007c57   Data          58  fsl_adapter_lpuart.o(.rodata.str1.1)
    VTOR                                     0xe000ed08   Number         0  startup_mimxrt1176_cm7.o ABSOLUTE

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPv5_D16$PE$PLD8$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    SystemCoreClock                          0x20000000   Data           4  system_mimxrt1176_cm7.o(.data.SystemCoreClock)
    s_lpuartIsr                              0x20000008   Data          52  fsl_lpuart.o(.data.s_lpuartIsr)
    flexcanHandle                            0x2000003c   Data         856  flexcan_interrupt_transfer.o(.bss.flexcanHandle)
    frame                                    0x20000394   Data          16  flexcan_interrupt_transfer.o(.bss.frame)
    rxComplete                               0x200003a4   Data           1  flexcan_interrupt_transfer.o(.bss.rxComplete)
    rxIdentifier                             0x200003a8   Data           4  flexcan_interrupt_transfer.o(.bss.rxIdentifier)
    rxXfer                                   0x200003ac   Data          12  flexcan_interrupt_transfer.o(.bss.rxXfer)
    s_lpuartHandle                           0x200003dc   Data          52  fsl_lpuart.o(.bss.s_lpuartHandle)
    txComplete                               0x20000410   Data           1  flexcan_interrupt_transfer.o(.bss.txComplete)
    txIdentifier                             0x20000414   Data           4  flexcan_interrupt_transfer.o(.bss.txIdentifier)
    txXfer                                   0x20000418   Data          12  flexcan_interrupt_transfer.o(.bss.txXfer)
    wakenUp                                  0x20000424   Data           1  flexcan_interrupt_transfer.o(.bss.wakenUp)
    Image$$ARM_LIB_HEAP$$ZI$$Base            0x20000428   Number         0  anon$$obj.o ABSOLUTE
    Image$$ARM_LIB_HEAP$$ZI$$Limit           0x20000828   Number         0  anon$$obj.o ABSOLUTE
    Image$$ARM_LIB_STACK$$ZI$$Limit          0x20040000   Number         0  anon$$obj.o ABSOLUTE
    Image$$RW_m_ncache$$Base                 0x202c0000   Number         0  anon$$obj.o ABSOLUTE
    Image$$RW_m_ncache_unused$$Base          0x202c0000   Number         0  anon$$obj.o ABSOLUTE
    Image$$RW_m_ncache_unused$$ZI$$Limit     0x20340000   Number         0  anon$$obj.o ABSOLUTE
    qspiflash_config                         0x30000400   Data         512  evkmimxrt1170_flexspi_nor_config.o(.boot_hdr.conf)
    image_vector_table                       0x30001000   Data          32  fsl_flexspi_nor_boot.o(.boot_hdr.ivt)
    g_boot_data                              0x30001020   Data          16  fsl_flexspi_nor_boot.o(.boot_hdr.boot_data)
    __Vectors                                0x30002000   Number      1024  startup_mimxrt1176_cm7.o(.isr_vector)
    __main                                   0x30002401   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x30002401   Thumb Code     0  entry4.o(.ARM.Collect$$$$00000003)
    _main_scatterload                        0x30002405   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x30002409   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x30002409   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x30002409   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x30002409   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x30002411   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x30002411   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x30002415   Thumb Code    40  startup_mimxrt1176_cm7.o(.text)
    ACMP1_IRQHandler                         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ACMP2_IRQHandler                         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ACMP3_IRQHandler                         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ACMP4_IRQHandler                         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ADC1_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ADC2_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ADC_ETC_ERROR_IRQ_IRQHandler             0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ADC_ETC_IRQ0_IRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ADC_ETC_IRQ1_IRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ADC_ETC_IRQ2_IRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ADC_ETC_IRQ3_IRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ASRC_DriverIRQHandler                    0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    BusFault_Handler                         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAAM_IRQ0_IRQHandler                     0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAAM_IRQ1_IRQHandler                     0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAAM_IRQ2_IRQHandler                     0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAAM_IRQ3_IRQHandler                     0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAAM_RECORVE_ERRPR_IRQHandler            0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAAM_RTIC_IRQHandler                     0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAN1_ERROR_DriverIRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAN2_ERROR_DriverIRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAN3_ERROR_DriverIRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CDOG_DriverIRQHandler                    0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CM7_GPIO2_3_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CORE_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CSI_IRQHandler                           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CTI_TRIGGER_OUT0_IRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CTI_TRIGGER_OUT1_IRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DAC_IRQHandler                           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DCIC1_IRQHandler                         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DCIC2_IRQHandler                         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA0_DMA16_DriverIRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA10_DMA26_DriverIRQHandler             0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA11_DMA27_DriverIRQHandler             0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA12_DMA28_DriverIRQHandler             0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA13_DMA29_DriverIRQHandler             0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA14_DMA30_DriverIRQHandler             0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA15_DMA31_DriverIRQHandler             0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA1_DMA17_DriverIRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA2_DMA18_DriverIRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA3_DMA19_DriverIRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA4_DMA20_DriverIRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA5_DMA21_DriverIRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA6_DMA22_DriverIRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA7_DMA23_DriverIRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA8_DMA24_DriverIRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA9_DMA25_DriverIRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA_ERROR_DriverIRQHandler               0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DebugMon_Handler                         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DefaultISR                               0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    EMVSIM1_IRQHandler                       0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    EMVSIM2_IRQHandler                       0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENC1_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENC2_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENC3_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENC4_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_1588_Timer_DriverIRQHandler         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_1G_1588_Timer_DriverIRQHandler      0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_1G_DriverIRQHandler                 0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_1G_MAC0_Tx_Rx_1_DriverIRQHandler    0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_1G_MAC0_Tx_Rx_2_DriverIRQHandler    0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_DriverIRQHandler                    0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_QOS_DriverIRQHandler                0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_QOS_PMT_DriverIRQHandler            0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    EWM_IRQHandler                           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    FLEXIO1_DriverIRQHandler                 0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    FLEXIO2_DriverIRQHandler                 0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    FLEXRAM_ECC_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    FLEXRAM_IRQHandler                       0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    FLEXSPI1_DriverIRQHandler                0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    FLEXSPI2_DriverIRQHandler                0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPC_IRQHandler                           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPIO13_Combined_0_31_IRQHandler          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPIO1_Combined_0_15_IRQHandler           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPIO1_Combined_16_31_IRQHandler          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPIO2_Combined_0_15_IRQHandler           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPIO2_Combined_16_31_IRQHandler          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPIO3_Combined_0_15_IRQHandler           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPIO3_Combined_16_31_IRQHandler          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPIO4_Combined_0_15_IRQHandler           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPIO4_Combined_16_31_IRQHandler          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPIO5_Combined_0_15_IRQHandler           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPIO5_Combined_16_31_IRQHandler          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPIO6_Combined_0_15_IRQHandler           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPIO6_Combined_16_31_IRQHandler          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPR_IRQ_IRQHandler                       0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPT1_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPT2_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPT3_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPT4_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPT5_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPT6_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPU2D_IRQHandler                         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    KEY_MANAGER_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    KPP_IRQHandler                           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LCDIFv2_IRQHandler                       0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPI2C1_DriverIRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPI2C2_DriverIRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPI2C3_DriverIRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPI2C4_DriverIRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPI2C5_DriverIRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPI2C6_DriverIRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPSPI1_DriverIRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPSPI2_DriverIRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPSPI3_DriverIRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPSPI4_DriverIRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPSPI5_DriverIRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPSPI6_DriverIRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPSR_LP0_BROWNOUT_IRQHandler             0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPSR_LP8_BROWNOUT_IRQHandler             0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    MECC1_FATAL_INT_IRQHandler               0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    MECC1_INT_IRQHandler                     0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    MECC2_FATAL_INT_IRQHandler               0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    MECC2_INT_IRQHandler                     0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    MIPI_CSI_DriverIRQHandler                0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    MIPI_DSI_DriverIRQHandler                0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    MUA_IRQHandler                           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    MemManage_Handler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    OCOTP_READ_DONE_ERROR_IRQHandler         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    OCOTP_READ_FUSE_ERROR_IRQHandler         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PDM_ERROR_DriverIRQHandler               0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PDM_EVENT_DriverIRQHandler               0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PDM_HWVAD_ERROR_DriverIRQHandler         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PDM_HWVAD_EVENT_DriverIRQHandler         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PIT1_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PIT2_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM1_0_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM1_1_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM1_2_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM1_3_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM1_FAULT_IRQHandler                    0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM2_0_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM2_1_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM2_2_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM2_3_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM2_FAULT_IRQHandler                    0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM3_0_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM3_1_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM3_2_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM3_3_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM3_FAULT_IRQHandler                    0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM4_0_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM4_1_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM4_2_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM4_3_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM4_FAULT_IRQHandler                    0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PXP_IRQHandler                           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    RDC_IRQHandler                           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    RTWDOG3_IRQHandler                       0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved110_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved166_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved167_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved168_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved169_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved170_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved177_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved178_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved179_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved180_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved185_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved186_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved208_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved209_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved210_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved211_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved212_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved213_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved214_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved215_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved68_IRQHandler                    0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SAI1_DriverIRQHandler                    0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SAI2_DriverIRQHandler                    0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SAI3_RX_DriverIRQHandler                 0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SAI3_TX_DriverIRQHandler                 0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SAI4_RX_DriverIRQHandler                 0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SAI4_TX_DriverIRQHandler                 0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SEMA4_CP0_IRQHandler                     0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SEMA4_CP1_IRQHandler                     0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SEMC_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SNVS_HP_NON_TZ_IRQHandler                0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SNVS_HP_TZ_IRQHandler                    0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SNVS_PULSE_EVENT_IRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SPDIF_DriverIRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    TMPSNS_INT_IRQHandler                    0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    TMPSNS_LOW_HIGH_IRQHandler               0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    TMPSNS_PANIC_IRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    TMR1_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    TMR2_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    TMR3_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    TMR4_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    USBPHY1_IRQHandler                       0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    USBPHY2_IRQHandler                       0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    USB_OTG1_IRQHandler                      0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    USB_OTG2_IRQHandler                      0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    USDHC1_DriverIRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    USDHC2_DriverIRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    UsageFault_Handler                       0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    WDOG1_IRQHandler                         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    WDOG2_IRQHandler                         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    XBAR1_IRQ_0_1_IRQHandler                 0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    XBAR1_IRQ_2_3_IRQHandler                 0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    XECC_FLEXSPI1_FATAL_INT_DriverIRQHandler 0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    XECC_FLEXSPI1_INT_DriverIRQHandler       0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    XECC_FLEXSPI2_FATAL_INT_DriverIRQHandler 0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    XECC_FLEXSPI2_INT_DriverIRQHandler       0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    XECC_SEMC_FATAL_INT_IRQHandler           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    XECC_SEMC_INT_IRQHandler                 0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    eLCDIF_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    NMI_Handler                              0x30002441   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    HardFault_Handler                        0x30002445   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SVC_Handler                              0x30002449   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PendSV_Handler                           0x3000244d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SysTick_Handler                          0x30002451   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA0_DMA16_IRQHandler                    0x30002455   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA1_DMA17_IRQHandler                    0x30002459   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA2_DMA18_IRQHandler                    0x3000245d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA3_DMA19_IRQHandler                    0x30002461   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA4_DMA20_IRQHandler                    0x30002465   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA5_DMA21_IRQHandler                    0x30002469   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA6_DMA22_IRQHandler                    0x3000246d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA7_DMA23_IRQHandler                    0x30002471   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA8_DMA24_IRQHandler                    0x30002475   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA9_DMA25_IRQHandler                    0x30002479   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA10_DMA26_IRQHandler                   0x3000247d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA11_DMA27_IRQHandler                   0x30002481   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA12_DMA28_IRQHandler                   0x30002485   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA13_DMA29_IRQHandler                   0x30002489   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA14_DMA30_IRQHandler                   0x3000248d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA15_DMA31_IRQHandler                   0x30002491   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA_ERROR_IRQHandler                     0x30002495   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPUART1_IRQHandler                       0x30002499   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPUART2_IRQHandler                       0x3000249d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPUART3_IRQHandler                       0x300024a1   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPUART4_IRQHandler                       0x300024a5   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPUART5_IRQHandler                       0x300024a9   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPUART6_IRQHandler                       0x300024ad   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPUART7_IRQHandler                       0x300024b1   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPUART8_IRQHandler                       0x300024b5   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPUART9_IRQHandler                       0x300024b9   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPUART10_IRQHandler                      0x300024bd   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPUART11_IRQHandler                      0x300024c1   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPUART12_IRQHandler                      0x300024c5   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPI2C1_IRQHandler                        0x300024c9   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPI2C2_IRQHandler                        0x300024cd   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPI2C3_IRQHandler                        0x300024d1   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPI2C4_IRQHandler                        0x300024d5   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPI2C5_IRQHandler                        0x300024d9   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPI2C6_IRQHandler                        0x300024dd   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPSPI1_IRQHandler                        0x300024e1   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPSPI2_IRQHandler                        0x300024e5   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPSPI3_IRQHandler                        0x300024e9   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPSPI4_IRQHandler                        0x300024ed   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPSPI5_IRQHandler                        0x300024f1   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPSPI6_IRQHandler                        0x300024f5   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAN1_IRQHandler                          0x300024f9   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAN1_ERROR_IRQHandler                    0x300024fd   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAN2_IRQHandler                          0x30002501   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAN2_ERROR_IRQHandler                    0x30002505   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAN3_IRQHandler                          0x30002509   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAN3_ERROR_IRQHandler                    0x3000250d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    MIPI_CSI_IRQHandler                      0x30002511   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    MIPI_DSI_IRQHandler                      0x30002515   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CDOG_IRQHandler                          0x30002519   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SAI1_IRQHandler                          0x3000251d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SAI2_IRQHandler                          0x30002521   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SAI3_RX_IRQHandler                       0x30002525   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SAI3_TX_IRQHandler                       0x30002529   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SAI4_RX_IRQHandler                       0x3000252d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SAI4_TX_IRQHandler                       0x30002531   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SPDIF_IRQHandler                         0x30002535   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ASRC_IRQHandler                          0x30002539   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    FLEXIO1_IRQHandler                       0x3000253d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    FLEXIO2_IRQHandler                       0x30002541   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    FLEXSPI1_IRQHandler                      0x30002545   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    FLEXSPI2_IRQHandler                      0x30002549   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    USDHC1_IRQHandler                        0x3000254d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    USDHC2_IRQHandler                        0x30002551   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_IRQHandler                          0x30002555   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_1588_Timer_IRQHandler               0x30002559   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_1G_MAC0_Tx_Rx_1_IRQHandler          0x3000255d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_1G_MAC0_Tx_Rx_2_IRQHandler          0x30002561   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_1G_IRQHandler                       0x30002565   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_1G_1588_Timer_IRQHandler            0x30002569   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PDM_HWVAD_EVENT_IRQHandler               0x3000256d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PDM_HWVAD_ERROR_IRQHandler               0x30002571   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PDM_EVENT_IRQHandler                     0x30002575   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PDM_ERROR_IRQHandler                     0x30002579   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    XECC_FLEXSPI1_INT_IRQHandler             0x3000257d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    XECC_FLEXSPI1_FATAL_INT_IRQHandler       0x30002581   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    XECC_FLEXSPI2_INT_IRQHandler             0x30002585   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    XECC_FLEXSPI2_FATAL_INT_IRQHandler       0x30002589   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_QOS_IRQHandler                      0x3000258d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_QOS_PMT_IRQHandler                  0x30002591   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    __aeabi_uldivmod                         0x300026e9   Thumb Code    98  uldiv.o(.text)
    ___aeabi_memcpy4$ret                     0x3000274b   Thumb Code     0  memcpy.o(.text)
    ___aeabi_memcpy8$ret                     0x3000274b   Thumb Code     0  memcpy.o(.text)
    __aeabi_memcpy                           0x3000274b   Thumb Code    40  memcpy.o(.text)
    memcpy                                   0x3000274b   Thumb Code     0  memcpy.o(.text)
    memset                                   0x30002773   Thumb Code    18  memset.o(.text)
    strlen                                   0x30002785   Thumb Code    14  strlen.o(.text)
    __aeabi_llsl                             0x30002793   Thumb Code    30  llshl.o(.text)
    _ll_shift_l                              0x30002793   Thumb Code     0  llshl.o(.text)
    __aeabi_llsr                             0x300027b1   Thumb Code    32  llushr.o(.text)
    _ll_ushift_r                             0x300027b1   Thumb Code     0  llushr.o(.text)
    __scatterload                            0x300027d1   Thumb Code    38  init.o(.text)
    __scatterload_rt2                        0x300027d1   Thumb Code     0  init.o(.text)
    ANATOP_AI_Access                         0x30002801   Thumb Code   840  fsl_anatop_ai.o(.text.ANATOP_AI_Access)
    ANATOP_AI_Read                           0x30002b49   Thumb Code    10  fsl_anatop_ai.o(.text.ANATOP_AI_Read)
    ANATOP_AI_Write                          0x30002b59   Thumb Code    12  fsl_anatop_ai.o(.text.ANATOP_AI_Write)
    ANATOP_AI_WriteWithMaskShift             0x30002b69   Thumb Code    48  fsl_anatop_ai.o(.text.ANATOP_AI_WriteWithMaskShift)
    BOARD_BootClockRUN                       0x30002c39   Thumb Code  1570  clock_config.o(.text.BOARD_BootClockRUN)
    BOARD_ConfigMPU                          0x30003261   Thumb Code   760  board.o(.text.BOARD_ConfigMPU)
    BOARD_InitDebugConsole                   0x30003599   Thumb Code    90  board.o(.text.BOARD_InitDebugConsole)
    BOARD_InitPins                           0x300035f9   Thumb Code   108  pin_mux.o(.text.BOARD_InitPins)
    CAN1_DriverIRQHandler                    0x30003669   Thumb Code    60  fsl_flexcan.o(.text.CAN1_DriverIRQHandler)
    CAN2_DriverIRQHandler                    0x300036c1   Thumb Code    60  fsl_flexcan.o(.text.CAN2_DriverIRQHandler)
    CAN3_DriverIRQHandler                    0x30003719   Thumb Code    60  fsl_flexcan.o(.text.CAN3_DriverIRQHandler)
    CLOCK_DeinitAudioPll                     0x30003771   Thumb Code    78  fsl_clock.o(.text.CLOCK_DeinitAudioPll)
    CLOCK_DeinitSysPll1                      0x300037c1   Thumb Code    94  fsl_clock.o(.text.CLOCK_DeinitSysPll1)
    CLOCK_GetFreq                            0x30003821   Thumb Code   728  fsl_clock.o(.text.CLOCK_GetFreq)
    CLOCK_InitArmPll                         0x30003b09   Thumb Code   212  fsl_clock.o(.text.CLOCK_InitArmPll)
    CLOCK_InitPfd                            0x30003be1   Thumb Code   216  fsl_clock.o(.text.CLOCK_InitPfd)
    CLOCK_InitSysPll2                        0x30003cf9   Thumb Code   254  fsl_clock.o(.text.CLOCK_InitSysPll2)
    CLOCK_InitSysPll3                        0x30003df9   Thumb Code   140  fsl_clock.o(.text.CLOCK_InitSysPll3)
    CLOCK_InitVideoPll                       0x30003e89   Thumb Code   216  fsl_clock.o(.text.CLOCK_InitVideoPll)
    CLOCK_OSC_EnableOscRc400M                0x30003f61   Thumb Code    26  fsl_clock.o(.text.CLOCK_OSC_EnableOscRc400M)
    CLOCK_OSC_Set1MHzOutputBehavior          0x30003f81   Thumb Code    44  fsl_clock.o(.text.CLOCK_OSC_Set1MHzOutputBehavior)
    CLOCK_SetPllBypass                       0x30003fb1   Thumb Code   148  fsl_clock.o(.text.CLOCK_SetPllBypass)
    DCDC_BootIntoDCM                         0x30004049   Thumb Code    58  fsl_dcdc.o(.text.DCDC_BootIntoDCM)
    DbgConsole_Init                          0x30004089   Thumb Code    82  fsl_debug_console.o(.text.DbgConsole_Init)
    DbgConsole_Printf                        0x300040e1   Thumb Code    32  fsl_debug_console.o(.text.DbgConsole_Printf)
    DbgConsole_Vprintf                       0x30004101   Thumb Code  1064  fsl_debug_console.o(.text.DbgConsole_Vprintf)
    FLEXCAN_CalculateImprovedTimingValues    0x30004529   Thumb Code   326  fsl_flexcan.o(.text.FLEXCAN_CalculateImprovedTimingValues)
    FLEXCAN_GetDefaultConfig                 0x30004671   Thumb Code   120  fsl_flexcan.o(.text.FLEXCAN_GetDefaultConfig)
    FLEXCAN_Init                             0x300046e9   Thumb Code   692  fsl_flexcan.o(.text.FLEXCAN_Init)
    FLEXCAN_ReadFDRxMb                       0x300049c9   Thumb Code   346  fsl_flexcan.o(.text.FLEXCAN_ReadFDRxMb)
    FLEXCAN_ReadRxMb                         0x30004b29   Thumb Code   184  fsl_flexcan.o(.text.FLEXCAN_ReadRxMb)
    FLEXCAN_SetFDTxMbConfig                  0x30004cd1   Thumb Code   266  fsl_flexcan.o(.text.FLEXCAN_SetFDTxMbConfig)
    FLEXCAN_SetRxMbConfig                    0x30004de1   Thumb Code   180  fsl_flexcan.o(.text.FLEXCAN_SetRxMbConfig)
    FLEXCAN_SetRxMbGlobalMask                0x30004e99   Thumb Code    64  fsl_flexcan.o(.text.FLEXCAN_SetRxMbGlobalMask)
    FLEXCAN_SetTxMbConfig                    0x30004ed9   Thumb Code   112  fsl_flexcan.o(.text.FLEXCAN_SetTxMbConfig)
    FLEXCAN_TransferAbortReceive             0x30004f49   Thumb Code   164  fsl_flexcan.o(.text.FLEXCAN_TransferAbortReceive)
    FLEXCAN_TransferAbortSend                0x30004ff1   Thumb Code   272  fsl_flexcan.o(.text.FLEXCAN_TransferAbortSend)
    FLEXCAN_TransferCreateHandle             0x30005101   Thumb Code   268  fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle)
    FLEXCAN_TransferFDAbortReceive           0x30005211   Thumb Code   166  fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortReceive)
    FLEXCAN_TransferFDAbortSend              0x300052b9   Thumb Code   296  fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortSend)
    FLEXCAN_TransferHandleIRQ                0x300053e1   Thumb Code  1018  fsl_flexcan.o(.text.FLEXCAN_TransferHandleIRQ)
    FLEXCAN_TransferReceiveNonBlocking       0x300057e1   Thumb Code   214  fsl_flexcan.o(.text.FLEXCAN_TransferReceiveNonBlocking)
    FLEXCAN_TransferSendNonBlocking          0x300058b9   Thumb Code   240  fsl_flexcan.o(.text.FLEXCAN_TransferSendNonBlocking)
    FLEXCAN_WriteTxMb                        0x300059a9   Thumb Code   212  fsl_flexcan.o(.text.FLEXCAN_WriteTxMb)
    HAL_UartInit                             0x30005a99   Thumb Code   264  fsl_adapter_lpuart.o(.text.HAL_UartInit)
    HAL_UartReceiveBlocking                  0x30005be1   Thumb Code   108  fsl_adapter_lpuart.o(.text.HAL_UartReceiveBlocking)
    HAL_UartSendBlocking                     0x30005c51   Thumb Code   102  fsl_adapter_lpuart.o(.text.HAL_UartSendBlocking)
    LPUART10_DriverIRQHandler                0x30005cb9   Thumb Code    36  fsl_lpuart.o(.text.LPUART10_DriverIRQHandler)
    LPUART11_DriverIRQHandler                0x30005ce1   Thumb Code    38  fsl_lpuart.o(.text.LPUART11_DriverIRQHandler)
    LPUART12_DriverIRQHandler                0x30005d09   Thumb Code    38  fsl_lpuart.o(.text.LPUART12_DriverIRQHandler)
    LPUART1_DriverIRQHandler                 0x30005d31   Thumb Code    38  fsl_lpuart.o(.text.LPUART1_DriverIRQHandler)
    LPUART2_DriverIRQHandler                 0x30005d59   Thumb Code    36  fsl_lpuart.o(.text.LPUART2_DriverIRQHandler)
    LPUART3_DriverIRQHandler                 0x30005d81   Thumb Code    38  fsl_lpuart.o(.text.LPUART3_DriverIRQHandler)
    LPUART4_DriverIRQHandler                 0x30005da9   Thumb Code    38  fsl_lpuart.o(.text.LPUART4_DriverIRQHandler)
    LPUART5_DriverIRQHandler                 0x30005dd1   Thumb Code    38  fsl_lpuart.o(.text.LPUART5_DriverIRQHandler)
    LPUART6_DriverIRQHandler                 0x30005df9   Thumb Code    36  fsl_lpuart.o(.text.LPUART6_DriverIRQHandler)
    LPUART7_DriverIRQHandler                 0x30005e21   Thumb Code    38  fsl_lpuart.o(.text.LPUART7_DriverIRQHandler)
    LPUART8_DriverIRQHandler                 0x30005e49   Thumb Code    38  fsl_lpuart.o(.text.LPUART8_DriverIRQHandler)
    LPUART9_DriverIRQHandler                 0x30005e71   Thumb Code    38  fsl_lpuart.o(.text.LPUART9_DriverIRQHandler)
    LPUART_GetDefaultConfig                  0x30005e99   Thumb Code    58  fsl_lpuart.o(.text.LPUART_GetDefaultConfig)
    LPUART_Init                              0x30005ed9   Thumb Code   628  fsl_lpuart.o(.text.LPUART_Init)
    LPUART_ReadBlocking                      0x30006169   Thumb Code   276  fsl_lpuart.o(.text.LPUART_ReadBlocking)
    LPUART_WriteBlocking                     0x30006281   Thumb Code    54  fsl_lpuart.o(.text.LPUART_WriteBlocking)
    PMU_EnableBodyBias                       0x300062b9   Thumb Code   202  fsl_pmu.o(.text.PMU_EnableBodyBias)
    PMU_StaticEnableLpsrAnaLdoBypassMode     0x30006389   Thumb Code   148  fsl_pmu.o(.text.PMU_StaticEnableLpsrAnaLdoBypassMode)
    PMU_StaticEnableLpsrDigLdoBypassMode     0x30006421   Thumb Code   106  fsl_pmu.o(.text.PMU_StaticEnableLpsrDigLdoBypassMode)
    PMU_StaticEnablePllLdo                   0x30006491   Thumb Code    62  fsl_pmu.o(.text.PMU_StaticEnablePllLdo)
    SDK_DelayAtLeastUs                       0x300064d1   Thumb Code    68  fsl_common_arm.o(.text.SDK_DelayAtLeastUs)
    SystemInit                               0x30006529   Thumb Code   288  system_mimxrt1176_cm7.o(.text.SystemInit)
    SystemInitHook                           0x30006649   Thumb Code     2  system_mimxrt1176_cm7.o(.text.SystemInitHook)
    __aeabi_assert                           0x30006651   Thumb Code    16  fsl_assert.o(.text.__aeabi_assert)
    main                                     0x300066e9   Thumb Code   732  flexcan_interrupt_transfer.o(.text.main)
    __scatterload_copy                       0x30006a51   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x30006a5f   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x30006a61   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    armPllConfig_BOARD_BootClockRUN          0x30006a70   Data           8  clock_config.o(.rodata.armPllConfig_BOARD_BootClockRUN)
    sysPll2Config_BOARD_BootClockRUN         0x30007c94   Data          12  clock_config.o(.rodata.sysPll2Config_BOARD_BootClockRUN)
    videoPllConfig_BOARD_BootClockRUN        0x30007ca0   Data          20  clock_config.o(.rodata.videoPllConfig_BOARD_BootClockRUN)
    Region$$Table$$Base                      0x30007cb4   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x30007cd4   Number         0  anon$$obj.o(Region$$Table)



==============================================================================

Memory Map of the image

  Image Entry point : 0x30002415

  Load Region LR_m_text (Base: 0x30000400, Size: 0x00007910, Max: 0x00fbfc00, ABSOLUTE)

    Execution Region RW_m_ram_text (Exec base: 0x00000000, Load base: 0x30007d10, Size: 0x00000000, Max: 0x00040000, ABSOLUTE)

    **** No section assigned to this execution region ****


    Execution Region RW_m_data (Exec base: 0x20000000, Load base: 0x30007cd4, Size: 0x00000428, Max: 0x0003f800, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x30007cd4   0x00000004   Data   RW          675    .data.SystemCoreClock  system_mimxrt1176_cm7.o
    0x20000004   0x30007cd8   0x00000004   Data   RW          242    .data.s_flexcanIsr  fsl_flexcan.o
    0x20000008   0x30007cdc   0x00000034   Data   RW          488    .data.s_lpuartIsr   fsl_lpuart.o
    0x2000003c        -       0x00000358   Zero   RW           17    .bss.flexcanHandle  flexcan_interrupt_transfer.o
    0x20000394        -       0x00000010   Zero   RW           18    .bss.frame          flexcan_interrupt_transfer.o
    0x200003a4        -       0x00000001   Zero   RW           12    .bss.rxComplete     flexcan_interrupt_transfer.o
    0x200003a5   0x30007d10   0x00000003   PAD
    0x200003a8        -       0x00000004   Zero   RW           16    .bss.rxIdentifier   flexcan_interrupt_transfer.o
    0x200003ac        -       0x0000000c   Zero   RW           20    .bss.rxXfer         flexcan_interrupt_transfer.o
    0x200003b8        -       0x00000014   Zero   RW          116    .bss.s_debugConsole  fsl_debug_console.o
    0x200003cc        -       0x00000010   Zero   RW          241    .bss.s_flexcanHandle  fsl_flexcan.o
    0x200003dc        -       0x00000034   Zero   RW          492    .bss.s_lpuartHandle  fsl_lpuart.o
    0x20000410        -       0x00000001   Zero   RW           11    .bss.txComplete     flexcan_interrupt_transfer.o
    0x20000411   0x30007d10   0x00000003   PAD
    0x20000414        -       0x00000004   Zero   RW           15    .bss.txIdentifier   flexcan_interrupt_transfer.o
    0x20000418        -       0x0000000c   Zero   RW           19    .bss.txXfer         flexcan_interrupt_transfer.o
    0x20000424        -       0x00000001   Zero   RW           13    .bss.wakenUp        flexcan_interrupt_transfer.o


    Execution Region ARM_LIB_HEAP (Exec base: 0x20000428, Load base: 0x30007d10, Size: 0x00000400, Max: 0x00000400, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000428        -       0x00000400   Zero   RW            2    ARM_LIB_HEAP.bss    anon$$obj.o


    Execution Region ARM_LIB_STACK (Exec base: 0x2003fc00, Load base: 0x30007d10, Size: 0x00000400, Max: 0x00000400, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x2003fc00        -       0x00000400   Zero   RW            3    ARM_LIB_STACK.bss   anon$$obj.o


    Execution Region RW_m_ncache (Exec base: 0x202c0000, Load base: 0x30007d10, Size: 0x00000000, Max: 0x00000000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x202c0000        -       0x00000000   Zero   RW            4    RW_m_ncache.bss     anon$$obj.o


    Execution Region RW_m_ncache_unused (Exec base: 0x202c0000, Load base: 0x30007d10, Size: 0x00080000, Max: 0x00080000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x202c0000        -       0x00080000   Zero   RW            5    RW_m_ncache_unused.bss  anon$$obj.o


    Execution Region RW_m_config_text (Exec base: 0x30000400, Load base: 0x30000400, Size: 0x00000200, Max: 0x00000c00, ABSOLUTE, FIXED)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x30000400   0x30000400   0x00000200   Data   RO          750    .boot_hdr.conf      evkmimxrt1170_flexspi_nor_config.o


    Execution Region RW_m_ivt_text (Exec base: 0x30001000, Load base: 0x30001000, Size: 0x00000030, Max: 0x00001000, ABSOLUTE, FIXED)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x30001000   0x30001000   0x00000020   Data   RO          744    .boot_hdr.ivt       fsl_flexspi_nor_boot.o
    0x30001020   0x30001020   0x00000010   Data   RO          743    .boot_hdr.boot_data  fsl_flexspi_nor_boot.o


    Execution Region VECTOR_ROM (Exec base: 0x30002000, Load base: 0x30002000, Size: 0x00000400, Max: 0x00000400, ABSOLUTE, FIXED)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x30002000   0x30002000   0x00000400   Data   RO          737    .isr_vector         startup_mimxrt1176_cm7.o


    Execution Region VECTOR_RAM (Exec base: 0x30002000, Load base: 0x30007cd4, Size: 0x00000000, Max: 0x00000000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x30002000        -       0x00000000   Zero   RW            1    VECTOR_RAM.bss      anon$$obj.o


    Execution Region ER_m_text (Exec base: 0x30002400, Load base: 0x30002400, Size: 0x000058d4, Max: 0x00fbdc00, ABSOLUTE, FIXED)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x30002400   0x30002400   0x00000000   Code   RO          755  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x30002400   0x30002400   0x00000004   Code   RO          807    .ARM.Collect$$$$00000003  mc_w.l(entry4.o)
    0x30002404   0x30002404   0x00000004   Code   RO          810    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x30002408   0x30002408   0x00000000   Code   RO          812    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x30002408   0x30002408   0x00000000   Code   RO          814    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x30002408   0x30002408   0x00000008   Code   RO          815    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x30002410   0x30002410   0x00000000   Code   RO          817    .ARM.Collect$$$$0000000D  mc_w.l(entry10a.o)
    0x30002410   0x30002410   0x00000000   Code   RO          819    .ARM.Collect$$$$0000000F  mc_w.l(entry11a.o)
    0x30002410   0x30002410   0x00000004   Code   RO          808    .ARM.Collect$$$$00002714  mc_w.l(entry4.o)
    0x30002414   0x30002414   0x000002d4   Code   RO          736  * .text               startup_mimxrt1176_cm7.o
    0x300026e8   0x300026e8   0x00000062   Code   RO          758    .text               mc_w.l(uldiv.o)
    0x3000274a   0x3000274a   0x00000028   Code   RO          760    .text               mc_w.l(memcpy.o)
    0x30002772   0x30002772   0x00000012   Code   RO          762    .text               mc_w.l(memset.o)
    0x30002784   0x30002784   0x0000000e   Code   RO          766    .text               mc_w.l(strlen.o)
    0x30002792   0x30002792   0x0000001e   Code   RO          821    .text               mc_w.l(llshl.o)
    0x300027b0   0x300027b0   0x00000020   Code   RO          823    .text               mc_w.l(llushr.o)
    0x300027d0   0x300027d0   0x00000030   Code   RO          861    .text               mc_w.l(init.o)
    0x30002800   0x30002800   0x00000348   Code   RO          653    .text.ANATOP_AI_Access  fsl_anatop_ai.o
    0x30002b48   0x30002b48   0x0000000a   Code   RO          657    .text.ANATOP_AI_Read  fsl_anatop_ai.o
    0x30002b52   0x30002b52   0x00000006   PAD
    0x30002b58   0x30002b58   0x0000000c   Code   RO          655    .text.ANATOP_AI_Write  fsl_anatop_ai.o
    0x30002b64   0x30002b64   0x00000004   PAD
    0x30002b68   0x30002b68   0x00000030   Code   RO          659    .text.ANATOP_AI_WriteWithMaskShift  fsl_anatop_ai.o
    0x30002b98   0x30002b98   0x0000009e   Code   RO          284    .text.ANATOP_PllConfigure  fsl_clock.o
    0x30002c36   0x30002c36   0x00000002   PAD
    0x30002c38   0x30002c38   0x00000622   Code   RO           64    .text.BOARD_BootClockRUN  clock_config.o
    0x3000325a   0x3000325a   0x00000006   PAD
    0x30003260   0x30003260   0x00000334   Code   RO           46    .text.BOARD_ConfigMPU  board.o
    0x30003594   0x30003594   0x00000004   PAD
    0x30003598   0x30003598   0x0000005a   Code   RO           44    .text.BOARD_InitDebugConsole  board.o
    0x300035f2   0x300035f2   0x00000006   PAD
    0x300035f8   0x300035f8   0x0000006c   Code   RO           33    .text.BOARD_InitPins  pin_mux.o
    0x30003664   0x30003664   0x00000004   PAD
    0x30003668   0x30003668   0x00000058   Code   RO          232    .text.CAN1_DriverIRQHandler  fsl_flexcan.o
    0x300036c0   0x300036c0   0x00000058   Code   RO          234    .text.CAN2_DriverIRQHandler  fsl_flexcan.o
    0x30003718   0x30003718   0x00000058   Code   RO          236    .text.CAN3_DriverIRQHandler  fsl_flexcan.o
    0x30003770   0x30003770   0x0000004e   Code   RO          286    .text.CLOCK_DeinitAudioPll  fsl_clock.o
    0x300037be   0x300037be   0x00000002   PAD
    0x300037c0   0x300037c0   0x0000005e   Code   RO          304    .text.CLOCK_DeinitSysPll1  fsl_clock.o
    0x3000381e   0x3000381e   0x00000002   PAD
    0x30003820   0x30003820   0x000002e8   Code   RO          342    .text.CLOCK_GetFreq  fsl_clock.o
    0x30003b08   0x30003b08   0x000000d4   Code   RO          252    .text.CLOCK_InitArmPll  fsl_clock.o
    0x30003bdc   0x30003bdc   0x00000004   PAD
    0x30003be0   0x30003be0   0x00000118   Code   RO          264    .text.CLOCK_InitPfd  fsl_clock.o
    0x30003cf8   0x30003cf8   0x000000fe   Code   RO          258    .text.CLOCK_InitSysPll2  fsl_clock.o
    0x30003df6   0x30003df6   0x00000002   PAD
    0x30003df8   0x30003df8   0x0000008c   Code   RO          270    .text.CLOCK_InitSysPll3  fsl_clock.o
    0x30003e84   0x30003e84   0x00000004   PAD
    0x30003e88   0x30003e88   0x000000d8   Code   RO          296    .text.CLOCK_InitVideoPll  fsl_clock.o
    0x30003f60   0x30003f60   0x0000001a   Code   RO          348    .text.CLOCK_OSC_EnableOscRc400M  fsl_clock.o
    0x30003f7a   0x30003f7a   0x00000006   PAD
    0x30003f80   0x30003f80   0x0000002c   Code   RO          328    .text.CLOCK_OSC_Set1MHzOutputBehavior  fsl_clock.o
    0x30003fac   0x30003fac   0x00000004   PAD
    0x30003fb0   0x30003fb0   0x00000094   Code   RO          276    .text.CLOCK_SetPllBypass  fsl_clock.o
    0x30004044   0x30004044   0x00000004   PAD
    0x30004048   0x30004048   0x0000003a   Code   RO          622    .text.DCDC_BootIntoDCM  fsl_dcdc.o
    0x30004082   0x30004082   0x00000006   PAD
    0x30004088   0x30004088   0x00000052   Code   RO          102    .text.DbgConsole_Init  fsl_debug_console.o
    0x300040da   0x300040da   0x00000006   PAD
    0x300040e0   0x300040e0   0x00000020   Code   RO          106    .text.DbgConsole_Printf  fsl_debug_console.o
    0x30004100   0x30004100   0x00000428   Code   RO          108    .text.DbgConsole_Vprintf  fsl_debug_console.o
    0x30004528   0x30004528   0x00000146   Code   RO          142    .text.FLEXCAN_CalculateImprovedTimingValues  fsl_flexcan.o
    0x3000466e   0x3000466e   0x00000002   PAD
    0x30004670   0x30004670   0x00000078   Code   RO          160    .text.FLEXCAN_GetDefaultConfig  fsl_flexcan.o
    0x300046e8   0x300046e8   0x000002e0   Code   RO          152    .text.FLEXCAN_Init  fsl_flexcan.o
    0x300049c8   0x300049c8   0x0000015a   Code   RO          190    .text.FLEXCAN_ReadFDRxMb  fsl_flexcan.o
    0x30004b22   0x30004b22   0x00000006   PAD
    0x30004b28   0x30004b28   0x000000b8   Code   RO          188    .text.FLEXCAN_ReadRxMb  fsl_flexcan.o
    0x30004be0   0x30004be0   0x000000ec   Code   RO          154    .text.FLEXCAN_Reset  fsl_flexcan.o
    0x30004ccc   0x30004ccc   0x00000004   PAD
    0x30004cd0   0x30004cd0   0x0000010a   Code   RO          172    .text.FLEXCAN_SetFDTxMbConfig  fsl_flexcan.o
    0x30004dda   0x30004dda   0x00000006   PAD
    0x30004de0   0x30004de0   0x000000b4   Code   RO          174    .text.FLEXCAN_SetRxMbConfig  fsl_flexcan.o
    0x30004e94   0x30004e94   0x00000004   PAD
    0x30004e98   0x30004e98   0x00000040   Code   RO          162    .text.FLEXCAN_SetRxMbGlobalMask  fsl_flexcan.o
    0x30004ed8   0x30004ed8   0x00000070   Code   RO          168    .text.FLEXCAN_SetTxMbConfig  fsl_flexcan.o
    0x30004f48   0x30004f48   0x000000a4   Code   RO          226    .text.FLEXCAN_TransferAbortReceive  fsl_flexcan.o
    0x30004fec   0x30004fec   0x00000004   PAD
    0x30004ff0   0x30004ff0   0x00000110   Code   RO          220    .text.FLEXCAN_TransferAbortSend  fsl_flexcan.o
    0x30005100   0x30005100   0x0000010c   Code   RO          204    .text.FLEXCAN_TransferCreateHandle  fsl_flexcan.o
    0x3000520c   0x3000520c   0x00000004   PAD
    0x30005210   0x30005210   0x000000a6   Code   RO          224    .text.FLEXCAN_TransferFDAbortReceive  fsl_flexcan.o
    0x300052b6   0x300052b6   0x00000002   PAD
    0x300052b8   0x300052b8   0x00000128   Code   RO          222    .text.FLEXCAN_TransferFDAbortSend  fsl_flexcan.o
    0x300053e0   0x300053e0   0x000003fa   Code   RO          206    .text.FLEXCAN_TransferHandleIRQ  fsl_flexcan.o
    0x300057da   0x300057da   0x00000006   PAD
    0x300057e0   0x300057e0   0x000000d6   Code   RO          210    .text.FLEXCAN_TransferReceiveNonBlocking  fsl_flexcan.o
    0x300058b6   0x300058b6   0x00000002   PAD
    0x300058b8   0x300058b8   0x000000f0   Code   RO          208    .text.FLEXCAN_TransferSendNonBlocking  fsl_flexcan.o
    0x300059a8   0x300059a8   0x000000ec   Code   RO          184    .text.FLEXCAN_WriteTxMb  fsl_flexcan.o
    0x30005a94   0x30005a94   0x00000004   PAD
    0x30005a98   0x30005a98   0x00000148   Code   RO          683    .text.HAL_UartInit  fsl_adapter_lpuart.o
    0x30005be0   0x30005be0   0x0000006c   Code   RO          687    .text.HAL_UartReceiveBlocking  fsl_adapter_lpuart.o
    0x30005c4c   0x30005c4c   0x00000004   PAD
    0x30005c50   0x30005c50   0x00000066   Code   RO          689    .text.HAL_UartSendBlocking  fsl_adapter_lpuart.o
    0x30005cb6   0x30005cb6   0x00000002   PAD
    0x30005cb8   0x30005cb8   0x00000024   Code   RO          481    .text.LPUART10_DriverIRQHandler  fsl_lpuart.o
    0x30005cdc   0x30005cdc   0x00000004   PAD
    0x30005ce0   0x30005ce0   0x00000026   Code   RO          483    .text.LPUART11_DriverIRQHandler  fsl_lpuart.o
    0x30005d06   0x30005d06   0x00000002   PAD
    0x30005d08   0x30005d08   0x00000026   Code   RO          485    .text.LPUART12_DriverIRQHandler  fsl_lpuart.o
    0x30005d2e   0x30005d2e   0x00000002   PAD
    0x30005d30   0x30005d30   0x00000026   Code   RO          463    .text.LPUART1_DriverIRQHandler  fsl_lpuart.o
    0x30005d56   0x30005d56   0x00000002   PAD
    0x30005d58   0x30005d58   0x00000024   Code   RO          465    .text.LPUART2_DriverIRQHandler  fsl_lpuart.o
    0x30005d7c   0x30005d7c   0x00000004   PAD
    0x30005d80   0x30005d80   0x00000026   Code   RO          467    .text.LPUART3_DriverIRQHandler  fsl_lpuart.o
    0x30005da6   0x30005da6   0x00000002   PAD
    0x30005da8   0x30005da8   0x00000026   Code   RO          469    .text.LPUART4_DriverIRQHandler  fsl_lpuart.o
    0x30005dce   0x30005dce   0x00000002   PAD
    0x30005dd0   0x30005dd0   0x00000026   Code   RO          471    .text.LPUART5_DriverIRQHandler  fsl_lpuart.o
    0x30005df6   0x30005df6   0x00000002   PAD
    0x30005df8   0x30005df8   0x00000024   Code   RO          473    .text.LPUART6_DriverIRQHandler  fsl_lpuart.o
    0x30005e1c   0x30005e1c   0x00000004   PAD
    0x30005e20   0x30005e20   0x00000026   Code   RO          475    .text.LPUART7_DriverIRQHandler  fsl_lpuart.o
    0x30005e46   0x30005e46   0x00000002   PAD
    0x30005e48   0x30005e48   0x00000026   Code   RO          477    .text.LPUART8_DriverIRQHandler  fsl_lpuart.o
    0x30005e6e   0x30005e6e   0x00000002   PAD
    0x30005e70   0x30005e70   0x00000026   Code   RO          479    .text.LPUART9_DriverIRQHandler  fsl_lpuart.o
    0x30005e96   0x30005e96   0x00000002   PAD
    0x30005e98   0x30005e98   0x0000003a   Code   RO          419    .text.LPUART_GetDefaultConfig  fsl_lpuart.o
    0x30005ed2   0x30005ed2   0x00000006   PAD
    0x30005ed8   0x30005ed8   0x00000290   Code   RO          415    .text.LPUART_Init   fsl_lpuart.o
    0x30006168   0x30006168   0x00000114   Code   RO          439    .text.LPUART_ReadBlocking  fsl_lpuart.o
    0x3000627c   0x3000627c   0x00000004   PAD
    0x30006280   0x30006280   0x00000036   Code   RO          437    .text.LPUART_WriteBlocking  fsl_lpuart.o
    0x300062b6   0x300062b6   0x00000002   PAD
    0x300062b8   0x300062b8   0x000000ca   Code   RO          576    .text.PMU_EnableBodyBias  fsl_pmu.o
    0x30006382   0x30006382   0x00000006   PAD
    0x30006388   0x30006388   0x00000094   Code   RO          526    .text.PMU_StaticEnableLpsrAnaLdoBypassMode  fsl_pmu.o
    0x3000641c   0x3000641c   0x00000004   PAD
    0x30006420   0x30006420   0x0000006a   Code   RO          536    .text.PMU_StaticEnableLpsrDigLdoBypassMode  fsl_pmu.o
    0x3000648a   0x3000648a   0x00000006   PAD
    0x30006490   0x30006490   0x0000003e   Code   RO          520    .text.PMU_StaticEnablePllLdo  fsl_pmu.o
    0x300064ce   0x300064ce   0x00000002   PAD
    0x300064d0   0x300064d0   0x00000058   Code   RO          400    .text.SDK_DelayAtLeastUs  fsl_common_arm.o
    0x30006528   0x30006528   0x00000120   Code   RO          669    .text.SystemInit    system_mimxrt1176_cm7.o
    0x30006648   0x30006648   0x00000002   Code   RO          671    .text.SystemInitHook  system_mimxrt1176_cm7.o
    0x3000664a   0x3000664a   0x00000006   PAD
    0x30006650   0x30006650   0x0000003c   Code   RO          125    .text.__aeabi_assert  fsl_assert.o
    0x3000668c   0x3000668c   0x00000004   PAD
    0x30006690   0x30006690   0x00000052   Code   RO            9    .text.flexcan_callback  flexcan_interrupt_transfer.o
    0x300066e2   0x300066e2   0x00000006   PAD
    0x300066e8   0x300066e8   0x00000368   Code   RO            7    .text.main          flexcan_interrupt_transfer.o
    0x30006a50   0x30006a50   0x0000000e   Code   RO          867    i.__scatterload_copy  mc_w.l(handlers.o)
    0x30006a5e   0x30006a5e   0x00000002   Code   RO          868    i.__scatterload_null  mc_w.l(handlers.o)
    0x30006a60   0x30006a60   0x0000000e   Code   RO          869    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x30006a6e   0x30006a6e   0x00000002   PAD
    0x30006a70   0x30006a70   0x00000008   Data   RO           68    .rodata.armPllConfig_BOARD_BootClockRUN  clock_config.o
    0x30006a78   0x30006a78   0x00000010   Data   RO          238    .rodata.cst16       fsl_flexcan.o
    0x30006a88   0x30006a88   0x00000004   Data   RO          240    .rodata.cst4        fsl_flexcan.o
    0x30006a8c   0x30006a8c   0x00000008   Data   RO          243    .rodata.cst8        fsl_flexcan.o
    0x30006a94   0x30006a94   0x00000034   Data   RO          696    .rodata.s_LpuartAdapterBase  fsl_adapter_lpuart.o
    0x30006ac8   0x30006ac8   0x00000278   Data   RO           21    .rodata.s_clockSourceName  flexcan_interrupt_transfer.o
    0x30006d40   0x30006d40   0x00000278   Data   RO           53    .rodata.s_clockSourceName  board.o
    0x30006fb8   0x30006fb8   0x00000278   Data   RO           75    .rodata.s_clockSourceName  clock_config.o
    0x30007230   0x30007230   0x00000278   Data   RO          375    .rodata.s_clockSourceName  fsl_clock.o
    0x300074a8   0x300074a8   0x00000034   Data   RO          489    .rodata.s_lpuartBases  fsl_lpuart.o
    0x300074dc   0x300074dc   0x0000000d   Data   RO          491    .rodata.s_lpuartClock  fsl_lpuart.o
    0x300074e9   0x300074e9   0x00000167   Data   RO           14    .rodata.str1.1      flexcan_interrupt_transfer.o
    0x30007650   0x30007650   0x0000000b   Data   RO           52    .rodata.str1.1      board.o
    0x3000765b   0x3000765b   0x000002bb   Data   RO          239    .rodata.str1.1      fsl_flexcan.o
    0x30007916   0x30007916   0x00000162   Data   RO          374    .rodata.str1.1      fsl_clock.o
    0x30007a78   0x30007a78   0x00000041   Data   RO          402    .rodata.str1.1      fsl_common_arm.o
    0x30007ab9   0x30007ab9   0x00000149   Data   RO          490    .rodata.str1.1      fsl_lpuart.o
    0x30007c02   0x30007c02   0x0000008f   Data   RO          695    .rodata.str1.1      fsl_adapter_lpuart.o
    0x30007c91   0x30007c91   0x00000003   PAD
    0x30007c94   0x30007c94   0x0000000c   Data   RO           69    .rodata.sysPll2Config_BOARD_BootClockRUN  clock_config.o
    0x30007ca0   0x30007ca0   0x00000014   Data   RO           70    .rodata.videoPllConfig_BOARD_BootClockRUN  clock_config.o
    0x30007cb4   0x30007cb4   0x00000020   Data   RO          866    Region$$Table       anon$$obj.o



  Load Region LR_CORE1_IMAGE (Base: 0x30fc0000, Size: 0x00000000, Max: 0xffffffff, ABSOLUTE)

    Execution Region CORE1_REGION (Exec base: 0x30fc0000, Load base: 0x30fc0000, Size: 0x00000000, Max: 0x00040000, ABSOLUTE)

    **** No section assigned to this execution region ****


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       910         60        643          0          0      12024   board.o
      1570          0        672          0          0      52836   clock_config.o
         0          0        512          0          0       2667   evkmimxrt1170_flexspi_nor_config.o
       954        140        991          0        907      15076   flexcan_interrupt_transfer.o
       538         64        195          0          0       7309   fsl_adapter_lpuart.o
       910          8          0          0          0      10249   fsl_anatop_ai.o
        60         44          0          0          0        939   fsl_assert.o
      2394        148        986          0          0      52174   fsl_clock.o
        88         20         65          0          0       2436   fsl_common_arm.o
        58          0          0          0          0      21728   fsl_dcdc.o
      1178        142          0          0         20      11881   fsl_debug_console.o
      5708        196        727          4         16      67677   fsl_flexcan.o
         0          0         48          0          0       1049   fsl_flexspi_nor_boot.o
      1494         28        394         52         52      42221   fsl_lpuart.o
       518          0          0          0          0      20679   fsl_pmu.o
       108          0          0          0          0       9080   pin_mux.o
       724        356       1024          0          0       3607   startup_mimxrt1176_cm7.o
       290          0          0          4          0       4697   system_mimxrt1176_cm7.o

    ----------------------------------------------------------------------
     17700       1222       6292         60     527340     338329   Object Totals
         0          0         32          0     526336          0   (incl. Generated)
       198         16          3          0          9          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry4.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        48         10          0          0          0         68   init.o
        30          0          0          0          0         68   llshl.o
        32          0          0          0          0         68   llushr.o
        40          0          0          0          0         76   memcpy.o
        18          0          0          0          0         76   memset.o
        14          0          0          0          0         68   strlen.o
        98          0          0          0          0         92   uldiv.o

    ----------------------------------------------------------------------
       332         18          0          0          0        516   Library Totals
         2          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       330         18          0          0          0        516   mc_w.l

    ----------------------------------------------------------------------
       332         18          0          0          0        516   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     18032       1240       6292         60     527340     338613   Grand Totals
     18032       1240       6292         60     527340     338613   ELF Image Totals
     18032       1240       6292         60          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                24324 (  23.75kB)
    Total RW  Size (RW Data + ZI Data)            527400 ( 515.04kB)
    Total ROM Size (Code + RO Data + RW Data)      24384 (  23.81kB)

==============================================================================

