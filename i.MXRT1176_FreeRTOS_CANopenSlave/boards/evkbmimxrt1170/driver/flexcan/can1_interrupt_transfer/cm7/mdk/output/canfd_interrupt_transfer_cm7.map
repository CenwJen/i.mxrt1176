Component: Arm Compiler for Embedded 6.22 Tool: armlink [5ee90200]

==============================================================================

Section Cross References

    flexcan_interrupt_transfer.o(.ARM.exidx.text.canChangeBaudRate_driver) refers to flexcan_interrupt_transfer.o(.text.canChangeBaudRate_driver) for [Anonymous Symbol]
    flexcan_interrupt_transfer.o(.ARM.exidx.text.setTimer) refers to flexcan_interrupt_transfer.o(.text.setTimer) for [Anonymous Symbol]
    flexcan_interrupt_transfer.o(.ARM.exidx.text.getElapsedTime) refers to flexcan_interrupt_transfer.o(.text.getElapsedTime) for [Anonymous Symbol]
    flexcan_interrupt_transfer.o(.text.canSend) refers to memcpy.o(.text) for memcpy
    flexcan_interrupt_transfer.o(.text.canSend) refers to flexcan_interrupt_transfer.o(.bss.txXfer) for txXfer
    flexcan_interrupt_transfer.o(.text.canSend) refers to flexcan_interrupt_transfer.o(.bss.flexcanHandle) for flexcanHandle
    flexcan_interrupt_transfer.o(.text.canSend) refers to fsl_flexcan.o(.text.FLEXCAN_TransferSendNonBlocking) for FLEXCAN_TransferSendNonBlocking
    flexcan_interrupt_transfer.o(.text.canSend) refers to flexcan_interrupt_transfer.o(.bss.txComplete) for txComplete
    flexcan_interrupt_transfer.o(.ARM.exidx.text.canSend) refers to flexcan_interrupt_transfer.o(.text.canSend) for [Anonymous Symbol]
    flexcan_interrupt_transfer.o(.text.GPT2_IRQHandler) refers to timer.o(.text.TimeDispatch) for TimeDispatch
    flexcan_interrupt_transfer.o(.ARM.exidx.text.GPT2_IRQHandler) refers to flexcan_interrupt_transfer.o(.text.GPT2_IRQHandler) for [Anonymous Symbol]
    flexcan_interrupt_transfer.o(.text.main) refers to board.o(.text.BOARD_ConfigMPU) for BOARD_ConfigMPU
    flexcan_interrupt_transfer.o(.text.main) refers to pin_mux.o(.text.BOARD_InitPins) for BOARD_InitPins
    flexcan_interrupt_transfer.o(.text.main) refers to clock_config.o(.text.BOARD_BootClockRUN) for BOARD_BootClockRUN
    flexcan_interrupt_transfer.o(.text.main) refers to board.o(.text.BOARD_InitDebugConsole) for BOARD_InitDebugConsole
    flexcan_interrupt_transfer.o(.text.main) refers to flexcan_interrupt_transfer.o(.bss.gptConfig) for gptConfig
    flexcan_interrupt_transfer.o(.text.main) refers to fsl_gpt.o(.text.GPT_GetDefaultConfig) for GPT_GetDefaultConfig
    flexcan_interrupt_transfer.o(.text.main) refers to fsl_gpt.o(.text.GPT_Init) for GPT_Init
    flexcan_interrupt_transfer.o(.text.main) refers to fsl_clock.o(.text.CLOCK_GetFreq) for CLOCK_GetFreq
    flexcan_interrupt_transfer.o(.text.main) refers to flexcan_interrupt_transfer.o(.bss.gptFreq) for gptFreq
    flexcan_interrupt_transfer.o(.text.main) refers to flexcan_interrupt_transfer.o(.rodata.str1.1) for .L.str.1
    flexcan_interrupt_transfer.o(.text.main) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    flexcan_interrupt_transfer.o(.text.main) refers to flexcan_interrupt_transfer.o(.bss.flexcanConfig) for flexcanConfig
    flexcan_interrupt_transfer.o(.text.main) refers to fsl_flexcan.o(.text.FLEXCAN_GetDefaultConfig) for FLEXCAN_GetDefaultConfig
    flexcan_interrupt_transfer.o(.text.main) refers to memset.o(.text) for memset
    flexcan_interrupt_transfer.o(.text.main) refers to flexcan_interrupt_transfer.o(.rodata.s_clockSourceName) for s_clockSourceName
    flexcan_interrupt_transfer.o(.text.main) refers to fsl_flexcan.o(.text.FLEXCAN_CalculateImprovedTimingValues) for FLEXCAN_CalculateImprovedTimingValues
    flexcan_interrupt_transfer.o(.text.main) refers to memcpy.o(.text) for memcpy
    flexcan_interrupt_transfer.o(.text.main) refers to fsl_flexcan.o(.text.FLEXCAN_Init) for FLEXCAN_Init
    flexcan_interrupt_transfer.o(.text.main) refers to slave.o(.data.Slave_Data) for Slave_Data
    flexcan_interrupt_transfer.o(.text.main) refers to states.o(.text.setState) for setState
    flexcan_interrupt_transfer.o(.text.main) refers to flexcan_interrupt_transfer.o(.bss.flexcanHandle) for flexcanHandle
    flexcan_interrupt_transfer.o(.text.main) refers to flexcan_interrupt_transfer.o(.text.flexcan_callback) for flexcan_callback
    flexcan_interrupt_transfer.o(.text.main) refers to fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle) for FLEXCAN_TransferCreateHandle
    flexcan_interrupt_transfer.o(.text.main) refers to fsl_flexcan.o(.text.FLEXCAN_SetRxMbGlobalMask) for FLEXCAN_SetRxMbGlobalMask
    flexcan_interrupt_transfer.o(.text.main) refers to flexcan_interrupt_transfer.o(.bss.mbConfig) for mbConfig
    flexcan_interrupt_transfer.o(.text.main) refers to fsl_flexcan.o(.text.FLEXCAN_SetRxMbConfig) for FLEXCAN_SetRxMbConfig
    flexcan_interrupt_transfer.o(.text.main) refers to fsl_flexcan.o(.text.FLEXCAN_SetTxMbConfig) for FLEXCAN_SetTxMbConfig
    flexcan_interrupt_transfer.o(.text.main) refers to flexcan_interrupt_transfer.o(.text.AppTaskCreate) for AppTaskCreate
    flexcan_interrupt_transfer.o(.text.main) refers to flexcan_interrupt_transfer.o(.bss.AppTaskCreate_Handle) for AppTaskCreate_Handle
    flexcan_interrupt_transfer.o(.text.main) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    flexcan_interrupt_transfer.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    flexcan_interrupt_transfer.o(.text.main) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    flexcan_interrupt_transfer.o(.ARM.exidx.text.main) refers to flexcan_interrupt_transfer.o(.text.main) for [Anonymous Symbol]
    flexcan_interrupt_transfer.o(.text.AppTaskCreate) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    flexcan_interrupt_transfer.o(.text.AppTaskCreate) refers to flexcan_interrupt_transfer.o(.text.CANopenRx_Task) for CANopenRx_Task
    flexcan_interrupt_transfer.o(.text.AppTaskCreate) refers to flexcan_interrupt_transfer.o(.bss.CANopenRx_Task_Handle) for CANopenRx_Task_Handle
    flexcan_interrupt_transfer.o(.text.AppTaskCreate) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    flexcan_interrupt_transfer.o(.text.AppTaskCreate) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    flexcan_interrupt_transfer.o(.text.AppTaskCreate) refers to flexcan_interrupt_transfer.o(.bss.AppTaskCreate_Handle) for AppTaskCreate_Handle
    flexcan_interrupt_transfer.o(.text.AppTaskCreate) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    flexcan_interrupt_transfer.o(.text.AppTaskCreate) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    flexcan_interrupt_transfer.o(.ARM.exidx.text.AppTaskCreate) refers to flexcan_interrupt_transfer.o(.text.AppTaskCreate) for [Anonymous Symbol]
    flexcan_interrupt_transfer.o(.text.flexcan_callback) refers to flexcan_interrupt_transfer.o(.bss.wakenUp) for wakenUp
    flexcan_interrupt_transfer.o(.text.flexcan_callback) refers to flexcan_interrupt_transfer.o(.bss.txComplete) for txComplete
    flexcan_interrupt_transfer.o(.text.flexcan_callback) refers to flexcan_interrupt_transfer.o(.bss.rxComplete) for rxComplete
    flexcan_interrupt_transfer.o(.ARM.exidx.text.flexcan_callback) refers to flexcan_interrupt_transfer.o(.text.flexcan_callback) for [Anonymous Symbol]
    flexcan_interrupt_transfer.o(.text.CANopenRx_Task) refers to flexcan_interrupt_transfer.o(.bss.rxXfer) for rxXfer
    flexcan_interrupt_transfer.o(.text.CANopenRx_Task) refers to flexcan_interrupt_transfer.o(.bss.rxMessage) for rxMessage
    flexcan_interrupt_transfer.o(.text.CANopenRx_Task) refers to flexcan_interrupt_transfer.o(.bss.rxFrame) for rxFrame
    flexcan_interrupt_transfer.o(.text.CANopenRx_Task) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    flexcan_interrupt_transfer.o(.text.CANopenRx_Task) refers to flexcan_interrupt_transfer.o(.bss.flexcanHandle) for flexcanHandle
    flexcan_interrupt_transfer.o(.text.CANopenRx_Task) refers to fsl_flexcan.o(.text.FLEXCAN_TransferReceiveNonBlocking) for FLEXCAN_TransferReceiveNonBlocking
    flexcan_interrupt_transfer.o(.text.CANopenRx_Task) refers to slave.o(.data.Slave_Data) for Slave_Data
    flexcan_interrupt_transfer.o(.text.CANopenRx_Task) refers to states.o(.text.canDispatch) for canDispatch
    flexcan_interrupt_transfer.o(.ARM.exidx.text.CANopenRx_Task) refers to flexcan_interrupt_transfer.o(.text.CANopenRx_Task) for [Anonymous Symbol]
    pin_mux.o(.ARM.exidx.text.BOARD_InitBootPins) refers to pin_mux.o(.text.BOARD_InitBootPins) for [Anonymous Symbol]
    pin_mux.o(.ARM.exidx.text.BOARD_InitPins) refers to pin_mux.o(.text.BOARD_InitPins) for [Anonymous Symbol]
    board.o(.text.BOARD_DebugConsoleSrcFreq) refers to board.o(.rodata.s_clockSourceName) for s_clockSourceName
    board.o(.text.BOARD_DebugConsoleSrcFreq) refers to fsl_clock.o(.text.CLOCK_GetFreq) for CLOCK_GetFreq
    board.o(.text.BOARD_DebugConsoleSrcFreq) refers to board.o(.rodata.str1.1) for .L.str.4
    board.o(.text.BOARD_DebugConsoleSrcFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    board.o(.ARM.exidx.text.BOARD_DebugConsoleSrcFreq) refers to board.o(.text.BOARD_DebugConsoleSrcFreq) for [Anonymous Symbol]
    board.o(.text.BOARD_InitDebugConsole) refers to board.o(.rodata.s_clockSourceName) for s_clockSourceName
    board.o(.text.BOARD_InitDebugConsole) refers to fsl_clock.o(.text.CLOCK_GetFreq) for CLOCK_GetFreq
    board.o(.text.BOARD_InitDebugConsole) refers to fsl_debug_console.o(.text.DbgConsole_Init) for DbgConsole_Init
    board.o(.text.BOARD_InitDebugConsole) refers to board.o(.rodata.str1.1) for .L.str.4
    board.o(.text.BOARD_InitDebugConsole) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    board.o(.ARM.exidx.text.BOARD_InitDebugConsole) refers to board.o(.text.BOARD_InitDebugConsole) for [Anonymous Symbol]
    board.o(.text.BOARD_ConfigMPU) refers to board.o(.rodata.str1.1) for .L.str.1
    board.o(.text.BOARD_ConfigMPU) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    board.o(.ARM.exidx.text.BOARD_ConfigMPU) refers to board.o(.text.BOARD_ConfigMPU) for [Anonymous Symbol]
    board.o(.ARM.exidx.text.BOARD_SD_Pin_Config) refers to board.o(.text.BOARD_SD_Pin_Config) for [Anonymous Symbol]
    board.o(.ARM.exidx.text.BOARD_MMC_Pin_Config) refers to board.o(.text.BOARD_MMC_Pin_Config) for [Anonymous Symbol]
    clock_config.o(.text.BOARD_InitBootClocks) refers to clock_config.o(.text.BOARD_BootClockRUN) for BOARD_BootClockRUN
    clock_config.o(.ARM.exidx.text.BOARD_InitBootClocks) refers to clock_config.o(.text.BOARD_InitBootClocks) for [Anonymous Symbol]
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_dcdc.o(.text.DCDC_BootIntoDCM) for DCDC_BootIntoDCM
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_pmu.o(.text.PMU_EnableBodyBias) for PMU_EnableBodyBias
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_pmu.o(.text.PMU_StaticEnableLpsrAnaLdoBypassMode) for PMU_StaticEnableLpsrAnaLdoBypassMode
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_pmu.o(.text.PMU_StaticEnableLpsrDigLdoBypassMode) for PMU_StaticEnableLpsrDigLdoBypassMode
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_OSC_Set1MHzOutputBehavior) for CLOCK_OSC_Set1MHzOutputBehavior
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_OSC_EnableOscRc400M) for CLOCK_OSC_EnableOscRc400M
    clock_config.o(.text.BOARD_BootClockRUN) refers to clock_config.o(.rodata.armPllConfig_BOARD_BootClockRUN) for armPllConfig_BOARD_BootClockRUN
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_InitArmPll) for CLOCK_InitArmPll
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_SetPllBypass) for CLOCK_SetPllBypass
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_DeinitSysPll1) for CLOCK_DeinitSysPll1
    clock_config.o(.text.BOARD_BootClockRUN) refers to clock_config.o(.rodata.sysPll2Config_BOARD_BootClockRUN) for sysPll2Config_BOARD_BootClockRUN
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_InitSysPll2) for CLOCK_InitSysPll2
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_InitPfd) for CLOCK_InitPfd
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_InitSysPll3) for CLOCK_InitSysPll3
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_DeinitAudioPll) for CLOCK_DeinitAudioPll
    clock_config.o(.text.BOARD_BootClockRUN) refers to clock_config.o(.rodata.videoPllConfig_BOARD_BootClockRUN) for videoPllConfig_BOARD_BootClockRUN
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_InitVideoPll) for CLOCK_InitVideoPll
    clock_config.o(.text.BOARD_BootClockRUN) refers to clock_config.o(.rodata.s_clockSourceName) for s_clockSourceName
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_GetFreq) for CLOCK_GetFreq
    clock_config.o(.text.BOARD_BootClockRUN) refers to system_mimxrt1176_cm7.o(.data.SystemCoreClock) for SystemCoreClock
    clock_config.o(.text.BOARD_BootClockRUN) refers to clock_config.o(.rodata.str1.1) for .L.str.2
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    clock_config.o(.ARM.exidx.text.BOARD_BootClockRUN) refers to clock_config.o(.text.BOARD_BootClockRUN) for [Anonymous Symbol]
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_dcdc.o(.text.DCDC_BootIntoDCM) for DCDC_BootIntoDCM
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_pmu.o(.text.PMU_EnableBodyBias) for PMU_EnableBodyBias
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_pmu.o(.text.PMU_StaticEnableLpsrAnaLdoBypassMode) for PMU_StaticEnableLpsrAnaLdoBypassMode
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_pmu.o(.text.PMU_StaticEnableLpsrDigLdoBypassMode) for PMU_StaticEnableLpsrDigLdoBypassMode
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_clock.o(.text.CLOCK_OSC_Set1MHzOutputBehavior) for CLOCK_OSC_Set1MHzOutputBehavior
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_clock.o(.text.CLOCK_OSC_EnableOscRc400M) for CLOCK_OSC_EnableOscRc400M
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to clock_config.o(.rodata.armPllConfig_BOARD_BootClockRUN_800M) for armPllConfig_BOARD_BootClockRUN_800M
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_clock.o(.text.CLOCK_InitArmPll) for CLOCK_InitArmPll
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_clock.o(.text.CLOCK_SetPllBypass) for CLOCK_SetPllBypass
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_clock.o(.text.CLOCK_DeinitSysPll1) for CLOCK_DeinitSysPll1
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to clock_config.o(.rodata.sysPll2Config_BOARD_BootClockRUN_800M) for sysPll2Config_BOARD_BootClockRUN_800M
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_clock.o(.text.CLOCK_InitSysPll2) for CLOCK_InitSysPll2
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_clock.o(.text.CLOCK_InitPfd) for CLOCK_InitPfd
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_clock.o(.text.CLOCK_InitSysPll3) for CLOCK_InitSysPll3
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_clock.o(.text.CLOCK_DeinitAudioPll) for CLOCK_DeinitAudioPll
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to clock_config.o(.rodata.videoPllConfig_BOARD_BootClockRUN_800M) for videoPllConfig_BOARD_BootClockRUN_800M
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_clock.o(.text.CLOCK_InitVideoPll) for CLOCK_InitVideoPll
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to clock_config.o(.rodata.s_clockSourceName) for s_clockSourceName
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_clock.o(.text.CLOCK_GetFreq) for CLOCK_GetFreq
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to system_mimxrt1176_cm7.o(.data.SystemCoreClock) for SystemCoreClock
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to clock_config.o(.rodata.str1.1) for .L.str.2
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    clock_config.o(.ARM.exidx.text.BOARD_BootClockRUN_800M) refers to clock_config.o(.text.BOARD_BootClockRUN_800M) for [Anonymous Symbol]
    fsl_str.o(.text.StrFormatPrintf) refers to strlen.o(.text) for strlen
    fsl_str.o(.text.StrFormatPrintf) refers to memcpy.o(.text) for memcpy
    fsl_str.o(.ARM.exidx.text.StrFormatPrintf) refers to fsl_str.o(.text.StrFormatPrintf) for [Anonymous Symbol]
    fsl_str.o(.text.StrFormatScanf) refers to errno.o(i.__aeabi_errno_addr) for __aeabi_errno_addr
    fsl_str.o(.text.StrFormatScanf) refers to strtoul.o(.text) for strtoul
    fsl_str.o(.text.StrFormatScanf) refers to strlen.o(.text) for strlen
    fsl_str.o(.text.StrFormatScanf) refers to memcpy.o(.text) for memcpy
    fsl_str.o(.ARM.exidx.text.StrFormatScanf) refers to fsl_str.o(.text.StrFormatScanf) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Init) refers to fsl_debug_console.o(.bss.s_debugConsole) for s_debugConsole
    fsl_debug_console.o(.text.DbgConsole_Init) refers to fsl_adapter_lpuart.o(.text.HAL_UartInit) for HAL_UartInit
    fsl_debug_console.o(.text.DbgConsole_Init) refers to fsl_adapter_lpuart.o(.text.HAL_UartSendBlocking) for HAL_UartSendBlocking
    fsl_debug_console.o(.text.DbgConsole_Init) refers to fsl_adapter_lpuart.o(.text.HAL_UartReceiveBlocking) for HAL_UartReceiveBlocking
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Init) refers to fsl_debug_console.o(.text.DbgConsole_Init) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Deinit) refers to fsl_debug_console.o(.bss.s_debugConsole) for s_debugConsole
    fsl_debug_console.o(.text.DbgConsole_Deinit) refers to fsl_adapter_lpuart.o(.text.HAL_UartDeinit) for HAL_UartDeinit
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Deinit) refers to fsl_debug_console.o(.text.DbgConsole_Deinit) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Printf) refers to fsl_debug_console.o(.text.DbgConsole_Vprintf) for DbgConsole_Vprintf
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Printf) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Vprintf) refers to fsl_debug_console.o(.bss.s_debugConsole) for s_debugConsole
    fsl_debug_console.o(.text.DbgConsole_Vprintf) refers to memcpy.o(.text) for memcpy
    fsl_debug_console.o(.text.DbgConsole_Vprintf) refers to strlen.o(.text) for strlen
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Vprintf) refers to fsl_debug_console.o(.text.DbgConsole_Vprintf) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Putchar) refers to fsl_debug_console.o(.bss.s_debugConsole) for s_debugConsole
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Putchar) refers to fsl_debug_console.o(.text.DbgConsole_Putchar) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Scanf) refers to fsl_debug_console.o(.bss.s_debugConsole) for s_debugConsole
    fsl_debug_console.o(.text.DbgConsole_Scanf) refers to fsl_str.o(.text.StrFormatScanf) for StrFormatScanf
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Scanf) refers to fsl_debug_console.o(.text.DbgConsole_Scanf) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Getchar) refers to fsl_debug_console.o(.bss.s_debugConsole) for s_debugConsole
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Getchar) refers to fsl_debug_console.o(.text.DbgConsole_Getchar) for [Anonymous Symbol]
    fsl_assert.o(.text.__aeabi_assert) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    fsl_assert.o(.ARM.exidx.text.__aeabi_assert) refers to fsl_assert.o(.text.__aeabi_assert) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_GetInstance) refers to fsl_flexcan.o(.rodata.cst16) for s_flexcanBases
    fsl_flexcan.o(.text.FLEXCAN_GetInstance) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str
    fsl_flexcan.o(.text.FLEXCAN_GetInstance) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_GetInstance) refers to fsl_flexcan.o(.text.FLEXCAN_GetInstance) for [Anonymous Symbol]
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_EnterFreezeMode) refers to fsl_flexcan.o(.text.FLEXCAN_EnterFreezeMode) for [Anonymous Symbol]
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_ExitFreezeMode) refers to fsl_flexcan.o(.text.FLEXCAN_ExitFreezeMode) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_SetBitRate) refers to fsl_flexcan.o(.text.FLEXCAN_CalculateImprovedTimingValues) for FLEXCAN_CalculateImprovedTimingValues
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetBitRate) refers to fsl_flexcan.o(.text.FLEXCAN_SetBitRate) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_CalculateImprovedTimingValues) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.13
    fsl_flexcan.o(.text.FLEXCAN_CalculateImprovedTimingValues) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_CalculateImprovedTimingValues) refers to fsl_flexcan.o(.text.FLEXCAN_CalculateImprovedTimingValues) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_SetTimingConfig) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.2
    fsl_flexcan.o(.text.FLEXCAN_SetTimingConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetTimingConfig) refers to fsl_flexcan.o(.text.FLEXCAN_SetTimingConfig) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_SetFDBitRate) refers to fsl_flexcan.o(.text.FLEXCAN_FDCalculateImprovedTimingValues) for FLEXCAN_FDCalculateImprovedTimingValues
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetFDBitRate) refers to fsl_flexcan.o(.text.FLEXCAN_SetFDBitRate) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_FDCalculateImprovedTimingValues) refers to fsl_flexcan.o(.text.FLEXCAN_CalculateImprovedNominalTimingValues) for FLEXCAN_CalculateImprovedNominalTimingValues
    fsl_flexcan.o(.text.FLEXCAN_FDCalculateImprovedTimingValues) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.1
    fsl_flexcan.o(.text.FLEXCAN_FDCalculateImprovedTimingValues) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_FDCalculateImprovedTimingValues) refers to fsl_flexcan.o(.text.FLEXCAN_FDCalculateImprovedTimingValues) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_SetFDTimingConfig) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.2
    fsl_flexcan.o(.text.FLEXCAN_SetFDTimingConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetFDTimingConfig) refers to fsl_flexcan.o(.text.FLEXCAN_SetFDTimingConfig) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_Init) refers to fsl_flexcan.o(.rodata.cst16) for s_flexcanBases
    fsl_flexcan.o(.text.FLEXCAN_Init) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str
    fsl_flexcan.o(.text.FLEXCAN_Init) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.text.FLEXCAN_Init) refers to fsl_flexcan.o(.rodata.cst4) for s_flexcanClock
    fsl_flexcan.o(.text.FLEXCAN_Init) refers to fsl_flexcan.o(.text.FLEXCAN_Reset) for FLEXCAN_Reset
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_Init) refers to fsl_flexcan.o(.text.FLEXCAN_Init) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_Reset) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.1
    fsl_flexcan.o(.text.FLEXCAN_Reset) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_Reset) refers to fsl_flexcan.o(.text.FLEXCAN_Reset) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_FDInit) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.7
    fsl_flexcan.o(.text.FLEXCAN_FDInit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.text.FLEXCAN_FDInit) refers to fsl_flexcan.o(.text.FLEXCAN_Init) for FLEXCAN_Init
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_FDInit) refers to fsl_flexcan.o(.text.FLEXCAN_FDInit) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_Deinit) refers to fsl_flexcan.o(.text.FLEXCAN_Reset) for FLEXCAN_Reset
    fsl_flexcan.o(.text.FLEXCAN_Deinit) refers to fsl_flexcan.o(.rodata.cst16) for s_flexcanBases
    fsl_flexcan.o(.text.FLEXCAN_Deinit) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str
    fsl_flexcan.o(.text.FLEXCAN_Deinit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.text.FLEXCAN_Deinit) refers to fsl_flexcan.o(.rodata.cst4) for s_flexcanClock
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_Deinit) refers to fsl_flexcan.o(.text.FLEXCAN_Deinit) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_GetDefaultConfig) refers to memset.o(.text) for memset
    fsl_flexcan.o(.text.FLEXCAN_GetDefaultConfig) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.2
    fsl_flexcan.o(.text.FLEXCAN_GetDefaultConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_GetDefaultConfig) refers to fsl_flexcan.o(.text.FLEXCAN_GetDefaultConfig) for [Anonymous Symbol]
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetRxMbGlobalMask) refers to fsl_flexcan.o(.text.FLEXCAN_SetRxMbGlobalMask) for [Anonymous Symbol]
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetRxFifoGlobalMask) refers to fsl_flexcan.o(.text.FLEXCAN_SetRxFifoGlobalMask) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_SetRxIndividualMask) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.1
    fsl_flexcan.o(.text.FLEXCAN_SetRxIndividualMask) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetRxIndividualMask) refers to fsl_flexcan.o(.text.FLEXCAN_SetRxIndividualMask) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_SetTxMbConfig) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.11
    fsl_flexcan.o(.text.FLEXCAN_SetTxMbConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetTxMbConfig) refers to fsl_flexcan.o(.text.FLEXCAN_SetTxMbConfig) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_CalculateImprovedNominalTimingValues) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.13
    fsl_flexcan.o(.text.FLEXCAN_CalculateImprovedNominalTimingValues) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_CalculateImprovedNominalTimingValues) refers to fsl_flexcan.o(.text.FLEXCAN_CalculateImprovedNominalTimingValues) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_SetFDTxMbConfig) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.11
    fsl_flexcan.o(.text.FLEXCAN_SetFDTxMbConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetFDTxMbConfig) refers to fsl_flexcan.o(.text.FLEXCAN_SetFDTxMbConfig) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_SetRxMbConfig) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.11
    fsl_flexcan.o(.text.FLEXCAN_SetRxMbConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetRxMbConfig) refers to fsl_flexcan.o(.text.FLEXCAN_SetRxMbConfig) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_SetFDRxMbConfig) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.11
    fsl_flexcan.o(.text.FLEXCAN_SetFDRxMbConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetFDRxMbConfig) refers to fsl_flexcan.o(.text.FLEXCAN_SetFDRxMbConfig) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_SetRxFifoConfig) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.12
    fsl_flexcan.o(.text.FLEXCAN_SetRxFifoConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetRxFifoConfig) refers to fsl_flexcan.o(.text.FLEXCAN_SetRxFifoConfig) for [Anonymous Symbol]
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_EnableRxFifoDMA) refers to fsl_flexcan.o(.text.FLEXCAN_EnableRxFifoDMA) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_GetMemoryErrorReportStatus) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.21
    fsl_flexcan.o(.text.FLEXCAN_GetMemoryErrorReportStatus) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_GetMemoryErrorReportStatus) refers to fsl_flexcan.o(.text.FLEXCAN_GetMemoryErrorReportStatus) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_WriteTxMb) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.11
    fsl_flexcan.o(.text.FLEXCAN_WriteTxMb) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_WriteTxMb) refers to fsl_flexcan.o(.text.FLEXCAN_WriteTxMb) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_WriteFDTxMb) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.11
    fsl_flexcan.o(.text.FLEXCAN_WriteFDTxMb) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_WriteFDTxMb) refers to fsl_flexcan.o(.text.FLEXCAN_WriteFDTxMb) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_ReadRxMb) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.11
    fsl_flexcan.o(.text.FLEXCAN_ReadRxMb) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_ReadRxMb) refers to fsl_flexcan.o(.text.FLEXCAN_ReadRxMb) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_ReadFDRxMb) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.11
    fsl_flexcan.o(.text.FLEXCAN_ReadFDRxMb) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_ReadFDRxMb) refers to fsl_flexcan.o(.text.FLEXCAN_ReadFDRxMb) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_ReadRxFifo) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.24
    fsl_flexcan.o(.text.FLEXCAN_ReadRxFifo) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_ReadRxFifo) refers to fsl_flexcan.o(.text.FLEXCAN_ReadRxFifo) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferSendBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_WriteTxMb) for FLEXCAN_WriteTxMb
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferSendBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_TransferSendBlocking) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferReceiveBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_ReadRxMb) for FLEXCAN_ReadRxMb
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferReceiveBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_TransferReceiveBlocking) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferFDSendBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_WriteFDTxMb) for FLEXCAN_WriteFDTxMb
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferFDSendBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_TransferFDSendBlocking) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferFDReceiveBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_ReadFDRxMb) for FLEXCAN_ReadFDRxMb
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferFDReceiveBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_TransferFDReceiveBlocking) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferReceiveFifoBlocking) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.24
    fsl_flexcan.o(.text.FLEXCAN_TransferReceiveFifoBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferReceiveFifoBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_TransferReceiveFifoBlocking) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle) refers to memset.o(.text) for memset
    fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle) refers to fsl_flexcan.o(.rodata.cst16) for s_flexcanBases
    fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str
    fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle) refers to fsl_flexcan.o(.bss.s_flexcanHandle) for s_flexcanHandle
    fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle) refers to fsl_flexcan.o(.text.FLEXCAN_TransferHandleIRQ) for FLEXCAN_TransferHandleIRQ
    fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle) refers to fsl_flexcan.o(.data.s_flexcanIsr) for s_flexcanIsr
    fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle) refers to fsl_flexcan.o(.rodata.cst8) for s_flexcanMbIRQ
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferCreateHandle) refers to fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferHandleIRQ) refers to fsl_flexcan.o(.text.FLEXCAN_ReadRxMb) for FLEXCAN_ReadRxMb
    fsl_flexcan.o(.text.FLEXCAN_TransferHandleIRQ) refers to fsl_flexcan.o(.text.FLEXCAN_TransferAbortSend) for FLEXCAN_TransferAbortSend
    fsl_flexcan.o(.text.FLEXCAN_TransferHandleIRQ) refers to fsl_flexcan.o(.text.FLEXCAN_TransferAbortReceive) for FLEXCAN_TransferAbortReceive
    fsl_flexcan.o(.text.FLEXCAN_TransferHandleIRQ) refers to fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortSend) for FLEXCAN_TransferFDAbortSend
    fsl_flexcan.o(.text.FLEXCAN_TransferHandleIRQ) refers to fsl_flexcan.o(.text.FLEXCAN_ReadFDRxMb) for FLEXCAN_ReadFDRxMb
    fsl_flexcan.o(.text.FLEXCAN_TransferHandleIRQ) refers to fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortReceive) for FLEXCAN_TransferFDAbortReceive
    fsl_flexcan.o(.text.FLEXCAN_TransferHandleIRQ) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.24
    fsl_flexcan.o(.text.FLEXCAN_TransferHandleIRQ) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferHandleIRQ) refers to fsl_flexcan.o(.text.FLEXCAN_TransferHandleIRQ) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferSendNonBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_WriteTxMb) for FLEXCAN_WriteTxMb
    fsl_flexcan.o(.text.FLEXCAN_TransferSendNonBlocking) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.25
    fsl_flexcan.o(.text.FLEXCAN_TransferSendNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferSendNonBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_TransferSendNonBlocking) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferReceiveNonBlocking) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.25
    fsl_flexcan.o(.text.FLEXCAN_TransferReceiveNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferReceiveNonBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_TransferReceiveNonBlocking) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferFDSendNonBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_WriteFDTxMb) for FLEXCAN_WriteFDTxMb
    fsl_flexcan.o(.text.FLEXCAN_TransferFDSendNonBlocking) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.25
    fsl_flexcan.o(.text.FLEXCAN_TransferFDSendNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferFDSendNonBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_TransferFDSendNonBlocking) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferFDReceiveNonBlocking) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.25
    fsl_flexcan.o(.text.FLEXCAN_TransferFDReceiveNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferFDReceiveNonBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_TransferFDReceiveNonBlocking) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferReceiveFifoNonBlocking) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.25
    fsl_flexcan.o(.text.FLEXCAN_TransferReceiveFifoNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferReceiveFifoNonBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_TransferReceiveFifoNonBlocking) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferGetReceiveFifoCount) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.25
    fsl_flexcan.o(.text.FLEXCAN_TransferGetReceiveFifoCount) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferGetReceiveFifoCount) refers to fsl_flexcan.o(.text.FLEXCAN_TransferGetReceiveFifoCount) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferAbortSend) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.25
    fsl_flexcan.o(.text.FLEXCAN_TransferAbortSend) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferAbortSend) refers to fsl_flexcan.o(.text.FLEXCAN_TransferAbortSend) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortSend) refers to fsl_flexcan.o(.text.FLEXCAN_SetFDTxMbConfig) for FLEXCAN_SetFDTxMbConfig
    fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortSend) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.25
    fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortSend) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferFDAbortSend) refers to fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortSend) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortReceive) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.25
    fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortReceive) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferFDAbortReceive) refers to fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortReceive) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferAbortReceive) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.25
    fsl_flexcan.o(.text.FLEXCAN_TransferAbortReceive) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferAbortReceive) refers to fsl_flexcan.o(.text.FLEXCAN_TransferAbortReceive) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferAbortReceiveFifo) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.25
    fsl_flexcan.o(.text.FLEXCAN_TransferAbortReceiveFifo) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferAbortReceiveFifo) refers to fsl_flexcan.o(.text.FLEXCAN_TransferAbortReceiveFifo) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_GetTimeStamp) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.25
    fsl_flexcan.o(.text.FLEXCAN_GetTimeStamp) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_GetTimeStamp) refers to fsl_flexcan.o(.text.FLEXCAN_GetTimeStamp) for [Anonymous Symbol]
    fsl_flexcan.o(.text.CAN1_DriverIRQHandler) refers to fsl_flexcan.o(.bss.s_flexcanHandle) for s_flexcanHandle
    fsl_flexcan.o(.text.CAN1_DriverIRQHandler) refers to fsl_flexcan.o(.data.s_flexcanIsr) for s_flexcanIsr
    fsl_flexcan.o(.text.CAN1_DriverIRQHandler) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.1
    fsl_flexcan.o(.text.CAN1_DriverIRQHandler) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.CAN1_DriverIRQHandler) refers to fsl_flexcan.o(.text.CAN1_DriverIRQHandler) for [Anonymous Symbol]
    fsl_flexcan.o(.text.CAN2_DriverIRQHandler) refers to fsl_flexcan.o(.bss.s_flexcanHandle) for s_flexcanHandle
    fsl_flexcan.o(.text.CAN2_DriverIRQHandler) refers to fsl_flexcan.o(.data.s_flexcanIsr) for s_flexcanIsr
    fsl_flexcan.o(.text.CAN2_DriverIRQHandler) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.1
    fsl_flexcan.o(.text.CAN2_DriverIRQHandler) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.CAN2_DriverIRQHandler) refers to fsl_flexcan.o(.text.CAN2_DriverIRQHandler) for [Anonymous Symbol]
    fsl_flexcan.o(.text.CAN3_DriverIRQHandler) refers to fsl_flexcan.o(.bss.s_flexcanHandle) for s_flexcanHandle
    fsl_flexcan.o(.text.CAN3_DriverIRQHandler) refers to fsl_flexcan.o(.data.s_flexcanIsr) for s_flexcanIsr
    fsl_flexcan.o(.text.CAN3_DriverIRQHandler) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.1
    fsl_flexcan.o(.text.CAN3_DriverIRQHandler) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.CAN3_DriverIRQHandler) refers to fsl_flexcan.o(.text.CAN3_DriverIRQHandler) for [Anonymous Symbol]
    fsl_flexcan.o(.data.s_flexcanIsr) refers to startup_mimxrt1176_cm7.o(.text) for DefaultISR
    fsl_clock.o(.text.CLOCK_InitArmPll) refers to fsl_pmu.o(.text.PMU_StaticEnablePllLdo) for PMU_StaticEnablePllLdo
    fsl_clock.o(.text.CLOCK_InitArmPll) refers to fsl_common_arm.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_clock.o(.text.CLOCK_InitArmPll) refers to fsl_clock.o(.rodata.str1.1) for .L.str
    fsl_clock.o(.text.CLOCK_InitArmPll) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_InitArmPll) refers to fsl_clock.o(.text.CLOCK_InitArmPll) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitArmPll) refers to fsl_clock.o(.text.CLOCK_DeinitArmPll) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_CalcPllSpreadSpectrum) refers to fsl_clock.o(.rodata.str1.1) for .L.str.1
    fsl_clock.o(.text.CLOCK_CalcPllSpreadSpectrum) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_CalcPllSpreadSpectrum) refers to fsl_clock.o(.text.CLOCK_CalcPllSpreadSpectrum) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_InitSysPll2) refers to fsl_pmu.o(.text.PMU_StaticEnablePllLdo) for PMU_StaticEnablePllLdo
    fsl_clock.o(.text.CLOCK_InitSysPll2) refers to fsl_common_arm.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_clock.o(.ARM.exidx.text.CLOCK_InitSysPll2) refers to fsl_clock.o(.text.CLOCK_InitSysPll2) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitSysPll2) refers to fsl_clock.o(.text.CLOCK_DeinitSysPll2) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_IsSysPll2PfdEnabled) refers to fsl_clock.o(.text.CLOCK_IsSysPll2PfdEnabled) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_InitPfd) refers to fsl_clock.o(.rodata.str1.1) for .L.str.1
    fsl_clock.o(.text.CLOCK_InitPfd) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_InitPfd) refers to fsl_clock.o(.text.CLOCK_InitPfd) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_DeinitPfd) refers to fsl_clock.o(.rodata.str1.1) for .L.str.5
    fsl_clock.o(.text.CLOCK_DeinitPfd) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitPfd) refers to fsl_clock.o(.text.CLOCK_DeinitPfd) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetPfdFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.8
    fsl_clock.o(.text.CLOCK_GetPfdFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetPfdFreq) refers to fsl_clock.o(.text.CLOCK_GetPfdFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_InitSysPll3) refers to fsl_pmu.o(.text.PMU_StaticEnablePllLdo) for PMU_StaticEnablePllLdo
    fsl_clock.o(.text.CLOCK_InitSysPll3) refers to fsl_common_arm.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_clock.o(.ARM.exidx.text.CLOCK_InitSysPll3) refers to fsl_clock.o(.text.CLOCK_InitSysPll3) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitSysPll3) refers to fsl_clock.o(.text.CLOCK_DeinitSysPll3) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_IsSysPll3PfdEnabled) refers to fsl_clock.o(.text.CLOCK_IsSysPll3PfdEnabled) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetPllBypass) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.text.CLOCK_SetPllBypass) refers to fsl_clock.o(.rodata.str1.1) for .L.str.5
    fsl_clock.o(.text.CLOCK_SetPllBypass) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetPllBypass) refers to fsl_clock.o(.text.CLOCK_SetPllBypass) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_InitAudioPllWithFreq) refers to fsl_clock.o(.text.CLOCK_InitAudioPll) for CLOCK_InitAudioPll
    fsl_clock.o(.text.CLOCK_InitAudioPllWithFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.11
    fsl_clock.o(.text.CLOCK_InitAudioPllWithFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_InitAudioPllWithFreq) refers to fsl_clock.o(.text.CLOCK_InitAudioPllWithFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_CalcAvPllFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.9
    fsl_clock.o(.text.CLOCK_CalcAvPllFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_CalcAvPllFreq) refers to fsl_clock.o(.text.CLOCK_CalcAvPllFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_InitAudioPll) refers to fsl_pmu.o(.text.PMU_StaticEnablePllLdo) for PMU_StaticEnablePllLdo
    fsl_clock.o(.text.CLOCK_InitAudioPll) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.text.CLOCK_InitAudioPll) refers to fsl_clock.o(.text.ANATOP_PllConfigure) for ANATOP_PllConfigure
    fsl_clock.o(.text.CLOCK_InitAudioPll) refers to fsl_common_arm.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_clock.o(.ARM.exidx.text.CLOCK_InitAudioPll) refers to fsl_clock.o(.text.CLOCK_InitAudioPll) for [Anonymous Symbol]
    fsl_clock.o(.text.ANATOP_PllConfigure) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.text.ANATOP_PllConfigure) refers to fsl_anatop_ai.o(.text.ANATOP_AI_WriteWithMaskShift) for ANATOP_AI_WriteWithMaskShift
    fsl_clock.o(.text.ANATOP_PllConfigure) refers to fsl_common_arm.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_clock.o(.ARM.exidx.text.ANATOP_PllConfigure) refers to fsl_clock.o(.text.ANATOP_PllConfigure) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_DeinitAudioPll) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitAudioPll) refers to fsl_clock.o(.text.CLOCK_DeinitAudioPll) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GPC_SetAudioPllOutputFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.9
    fsl_clock.o(.text.CLOCK_GPC_SetAudioPllOutputFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_GPC_SetAudioPllOutputFreq) refers to fsl_clock.o(.text.CLOCK_GPC_SetAudioPllOutputFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_CalcArmPllFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.9
    fsl_clock.o(.text.CLOCK_CalcArmPllFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_CalcArmPllFreq) refers to fsl_clock.o(.text.CLOCK_CalcArmPllFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_InitArmPllWithFreq) refers to fsl_clock.o(.text.CLOCK_InitArmPll) for CLOCK_InitArmPll
    fsl_clock.o(.text.CLOCK_InitArmPllWithFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.10
    fsl_clock.o(.text.CLOCK_InitArmPllWithFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_InitArmPllWithFreq) refers to fsl_clock.o(.text.CLOCK_InitArmPllWithFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_InitVideoPllWithFreq) refers to fsl_clock.o(.text.CLOCK_InitVideoPll) for CLOCK_InitVideoPll
    fsl_clock.o(.text.CLOCK_InitVideoPllWithFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.11
    fsl_clock.o(.text.CLOCK_InitVideoPllWithFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_InitVideoPllWithFreq) refers to fsl_clock.o(.text.CLOCK_InitVideoPllWithFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_InitVideoPll) refers to fsl_pmu.o(.text.PMU_StaticEnablePllLdo) for PMU_StaticEnablePllLdo
    fsl_clock.o(.text.CLOCK_InitVideoPll) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.text.CLOCK_InitVideoPll) refers to fsl_clock.o(.text.ANATOP_PllConfigure) for ANATOP_PllConfigure
    fsl_clock.o(.text.CLOCK_InitVideoPll) refers to fsl_common_arm.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_clock.o(.ARM.exidx.text.CLOCK_InitVideoPll) refers to fsl_clock.o(.text.CLOCK_InitVideoPll) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_DeinitVideoPll) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitVideoPll) refers to fsl_clock.o(.text.CLOCK_DeinitVideoPll) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GPC_SetVideoPllOutputFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.9
    fsl_clock.o(.text.CLOCK_GPC_SetVideoPllOutputFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_GPC_SetVideoPllOutputFreq) refers to fsl_clock.o(.text.CLOCK_GPC_SetVideoPllOutputFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_InitSysPll1) refers to fsl_pmu.o(.text.PMU_StaticEnablePllLdo) for PMU_StaticEnablePllLdo
    fsl_clock.o(.text.CLOCK_InitSysPll1) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.text.CLOCK_InitSysPll1) refers to fsl_clock.o(.text.ANATOP_PllConfigure) for ANATOP_PllConfigure
    fsl_clock.o(.text.CLOCK_InitSysPll1) refers to fsl_common_arm.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_clock.o(.ARM.exidx.text.CLOCK_InitSysPll1) refers to fsl_clock.o(.text.CLOCK_InitSysPll1) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_DeinitSysPll1) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitSysPll1) refers to fsl_clock.o(.text.CLOCK_DeinitSysPll1) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GPC_SetSysPll1OutputFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.9
    fsl_clock.o(.text.CLOCK_GPC_SetSysPll1OutputFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_GPC_SetSysPll1OutputFreq) refers to fsl_clock.o(.text.CLOCK_GPC_SetSysPll1OutputFreq) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_EnableOsc24M) refers to fsl_clock.o(.text.CLOCK_OSC_EnableOsc24M) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_SetOsc24MWorkMode) refers to fsl_clock.o(.text.CLOCK_OSC_SetOsc24MWorkMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_SetOsc16MConfig) refers to fsl_clock.o(.text.CLOCK_OSC_SetOsc16MConfig) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MRefClkDiv) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MRefClkDiv) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_SetOscRc400MRefClkDiv) refers to fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MRefClkDiv) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MFastClkCount) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MFastClkCount) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_SetOscRc400MFastClkCount) refers to fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MFastClkCount) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MHysteresisValue) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MHysteresisValue) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_SetOscRc400MHysteresisValue) refers to fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MHysteresisValue) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_OSC_BypassOscRc400MTuneLogic) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_BypassOscRc400MTuneLogic) refers to fsl_clock.o(.text.CLOCK_OSC_BypassOscRc400MTuneLogic) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_OSC_EnableOscRc400MTuneLogic) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_EnableOscRc400MTuneLogic) refers to fsl_clock.o(.text.CLOCK_OSC_EnableOscRc400MTuneLogic) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_OSC_FreezeOscRc400MTuneValue) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_FreezeOscRc400MTuneValue) refers to fsl_clock.o(.text.CLOCK_OSC_FreezeOscRc400MTuneValue) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MTuneValue) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MTuneValue) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_SetOscRc400MTuneValue) refers to fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MTuneValue) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_OSC_Set1MHzOutputBehavior) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_clock.o(.text.CLOCK_OSC_Set1MHzOutputBehavior) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_Set1MHzOutputBehavior) refers to fsl_clock.o(.text.CLOCK_OSC_Set1MHzOutputBehavior) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_OSC_SetLocked1MHzCount) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_clock.o(.text.CLOCK_OSC_SetLocked1MHzCount) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_SetLocked1MHzCount) refers to fsl_clock.o(.text.CLOCK_OSC_SetLocked1MHzCount) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_OSC_CheckLocked1MHzErrorFlag) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_CheckLocked1MHzErrorFlag) refers to fsl_clock.o(.text.CLOCK_OSC_CheckLocked1MHzErrorFlag) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_OSC_ClearLocked1MHzErrorFlag) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_ClearLocked1MHzErrorFlag) refers to fsl_clock.o(.text.CLOCK_OSC_ClearLocked1MHzErrorFlag) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_OSC_GetCurrentOscRc400MFastClockCount) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_GetCurrentOscRc400MFastClockCount) refers to fsl_clock.o(.text.CLOCK_OSC_GetCurrentOscRc400MFastClockCount) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_OSC_GetCurrentOscRc400MTuneValue) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_GetCurrentOscRc400MTuneValue) refers to fsl_clock.o(.text.CLOCK_OSC_GetCurrentOscRc400MTuneValue) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetPllFreq) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_clock.o(.text.CLOCK_GetPllFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.12
    fsl_clock.o(.text.CLOCK_GetPllFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetPllFreq) refers to fsl_clock.o(.text.CLOCK_GetPllFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.rodata.s_clockSourceName) for s_clockSourceName
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.12
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetGroupConfig) refers to fsl_clock.o(.rodata.str1.1) for .L.str.1
    fsl_clock.o(.text.CLOCK_SetGroupConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetGroupConfig) refers to fsl_clock.o(.text.CLOCK_SetGroupConfig) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_OSC_TrimOscRc400M) refers to fsl_common_arm.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_TrimOscRc400M) refers to fsl_clock.o(.text.CLOCK_OSC_TrimOscRc400M) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_EnableOscRc400M) refers to fsl_clock.o(.text.CLOCK_OSC_EnableOscRc400M) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetFreqFromObs) refers to fsl_clock.o(.text.CLOCK_GetFreqFromObs) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbhs0Clock) refers to fsl_clock.o(.text.CLOCK_EnableUsbhs0Clock) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbhs0PhyPllClock) refers to fsl_clock.o(.text.CLOCK_EnableUsbhs0PhyPllClock) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_DisableUsbhs0PhyPllClock) refers to fsl_clock.o(.text.CLOCK_DisableUsbhs0PhyPllClock) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbhs1Clock) refers to fsl_clock.o(.text.CLOCK_EnableUsbhs1Clock) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbhs1PhyPllClock) refers to fsl_clock.o(.text.CLOCK_EnableUsbhs1PhyPllClock) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_DisableUsbhs1PhyPllClock) refers to fsl_clock.o(.text.CLOCK_DisableUsbhs1PhyPllClock) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSCPLL_ControlBySetPointMode) refers to fsl_clock.o(.text.CLOCK_OSCPLL_ControlBySetPointMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSCPLL_ControlByCpuLowPowerMode) refers to fsl_clock.o(.text.CLOCK_OSCPLL_ControlByCpuLowPowerMode) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_ROOT_ControlBySetPointMode) refers to fsl_clock.o(.rodata.str1.1) for .L.str.9
    fsl_clock.o(.text.CLOCK_ROOT_ControlBySetPointMode) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_ROOT_ControlBySetPointMode) refers to fsl_clock.o(.text.CLOCK_ROOT_ControlBySetPointMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_LPCG_ControlBySetPointMode) refers to fsl_clock.o(.text.CLOCK_LPCG_ControlBySetPointMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_LPCG_ControlByCpuLowPowerMode) refers to fsl_clock.o(.text.CLOCK_LPCG_ControlByCpuLowPowerMode) for [Anonymous Symbol]
    fsl_common.o(.text.SDK_Malloc) refers to malloc2.o(i.__malloc$2region) for malloc
    fsl_common.o(.ARM.exidx.text.SDK_Malloc) refers to fsl_common.o(.text.SDK_Malloc) for [Anonymous Symbol]
    fsl_common.o(.text.SDK_Free) refers to malloc2.o(i.__free$2region) for free
    fsl_common.o(.ARM.exidx.text.SDK_Free) refers to fsl_common.o(.text.SDK_Free) for [Anonymous Symbol]
    fsl_common_arm.o(.text.MSDK_EnableCpuCycleCounter) refers to fsl_common_arm.o(.rodata.str1.1) for .L.str.1
    fsl_common_arm.o(.text.MSDK_EnableCpuCycleCounter) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_common_arm.o(.ARM.exidx.text.MSDK_EnableCpuCycleCounter) refers to fsl_common_arm.o(.text.MSDK_EnableCpuCycleCounter) for [Anonymous Symbol]
    fsl_common_arm.o(.ARM.exidx.text.MSDK_GetCpuCycleCount) refers to fsl_common_arm.o(.text.MSDK_GetCpuCycleCount) for [Anonymous Symbol]
    fsl_common_arm.o(.text.SDK_DelayAtLeastUs) refers to uldiv.o(.text) for __aeabi_uldivmod
    fsl_common_arm.o(.text.SDK_DelayAtLeastUs) refers to fsl_common_arm.o(.rodata.str1.1) for .L.str.1
    fsl_common_arm.o(.text.SDK_DelayAtLeastUs) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_common_arm.o(.ARM.exidx.text.SDK_DelayAtLeastUs) refers to fsl_common_arm.o(.text.SDK_DelayAtLeastUs) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_GetInstance) refers to fsl_lpuart.o(.rodata.s_lpuartBases) for s_lpuartBases
    fsl_lpuart.o(.text.LPUART_GetInstance) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str
    fsl_lpuart.o(.text.LPUART_GetInstance) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_GetInstance) refers to fsl_lpuart.o(.text.LPUART_GetInstance) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferGetRxRingBufferLength) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.2
    fsl_lpuart.o(.text.LPUART_TransferGetRxRingBufferLength) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferGetRxRingBufferLength) refers to fsl_lpuart.o(.text.LPUART_TransferGetRxRingBufferLength) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_Init) refers to fsl_lpuart.o(.rodata.s_lpuartBases) for s_lpuartBases
    fsl_lpuart.o(.text.LPUART_Init) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str
    fsl_lpuart.o(.text.LPUART_Init) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.text.LPUART_Init) refers to fsl_lpuart.o(.rodata.s_lpuartClock) for s_lpuartClock
    fsl_lpuart.o(.ARM.exidx.text.LPUART_Init) refers to fsl_lpuart.o(.text.LPUART_Init) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_Deinit) refers to fsl_lpuart.o(.rodata.s_lpuartBases) for s_lpuartBases
    fsl_lpuart.o(.text.LPUART_Deinit) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str
    fsl_lpuart.o(.text.LPUART_Deinit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.text.LPUART_Deinit) refers to fsl_lpuart.o(.rodata.s_lpuartClock) for s_lpuartClock
    fsl_lpuart.o(.ARM.exidx.text.LPUART_Deinit) refers to fsl_lpuart.o(.text.LPUART_Deinit) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_GetDefaultConfig) refers to memset.o(.text) for memset
    fsl_lpuart.o(.text.LPUART_GetDefaultConfig) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.3
    fsl_lpuart.o(.text.LPUART_GetDefaultConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_GetDefaultConfig) refers to fsl_lpuart.o(.text.LPUART_GetDefaultConfig) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_SetBaudRate) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.1
    fsl_lpuart.o(.text.LPUART_SetBaudRate) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_SetBaudRate) refers to fsl_lpuart.o(.text.LPUART_SetBaudRate) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_Enable9bitMode) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.8
    fsl_lpuart.o(.text.LPUART_Enable9bitMode) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_Enable9bitMode) refers to fsl_lpuart.o(.text.LPUART_Enable9bitMode) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_SendAddress) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.8
    fsl_lpuart.o(.text.LPUART_SendAddress) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_SendAddress) refers to fsl_lpuart.o(.text.LPUART_SendAddress) for [Anonymous Symbol]
    fsl_lpuart.o(.ARM.exidx.text.LPUART_EnableInterrupts) refers to fsl_lpuart.o(.text.LPUART_EnableInterrupts) for [Anonymous Symbol]
    fsl_lpuart.o(.ARM.exidx.text.LPUART_DisableInterrupts) refers to fsl_lpuart.o(.text.LPUART_DisableInterrupts) for [Anonymous Symbol]
    fsl_lpuart.o(.ARM.exidx.text.LPUART_GetEnabledInterrupts) refers to fsl_lpuart.o(.text.LPUART_GetEnabledInterrupts) for [Anonymous Symbol]
    fsl_lpuart.o(.ARM.exidx.text.LPUART_GetStatusFlags) refers to fsl_lpuart.o(.text.LPUART_GetStatusFlags) for [Anonymous Symbol]
    fsl_lpuart.o(.ARM.exidx.text.LPUART_ClearStatusFlags) refers to fsl_lpuart.o(.text.LPUART_ClearStatusFlags) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_WriteBlocking) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.9
    fsl_lpuart.o(.text.LPUART_WriteBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_WriteBlocking) refers to fsl_lpuart.o(.text.LPUART_WriteBlocking) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_ReadBlocking) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.9
    fsl_lpuart.o(.text.LPUART_ReadBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_ReadBlocking) refers to fsl_lpuart.o(.text.LPUART_ReadBlocking) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferCreateHandle) refers to memset.o(.text) for memset
    fsl_lpuart.o(.text.LPUART_TransferCreateHandle) refers to fsl_lpuart.o(.rodata.s_lpuartBases) for s_lpuartBases
    fsl_lpuart.o(.text.LPUART_TransferCreateHandle) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str
    fsl_lpuart.o(.text.LPUART_TransferCreateHandle) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.text.LPUART_TransferCreateHandle) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.text.LPUART_TransferCreateHandle) refers to fsl_lpuart.o(.text.LPUART_TransferHandleIRQ) for LPUART_TransferHandleIRQ
    fsl_lpuart.o(.text.LPUART_TransferCreateHandle) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART_TransferCreateHandle) refers to fsl_lpuart.o(.rodata.s_lpuartIRQ) for s_lpuartIRQ
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferCreateHandle) refers to fsl_lpuart.o(.text.LPUART_TransferCreateHandle) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferHandleIRQ) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.9
    fsl_lpuart.o(.text.LPUART_TransferHandleIRQ) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferHandleIRQ) refers to fsl_lpuart.o(.text.LPUART_TransferHandleIRQ) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferStartRingBuffer) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.2
    fsl_lpuart.o(.text.LPUART_TransferStartRingBuffer) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferStartRingBuffer) refers to fsl_lpuart.o(.text.LPUART_TransferStartRingBuffer) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferStopRingBuffer) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.2
    fsl_lpuart.o(.text.LPUART_TransferStopRingBuffer) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferStopRingBuffer) refers to fsl_lpuart.o(.text.LPUART_TransferStopRingBuffer) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferSendNonBlocking) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.2
    fsl_lpuart.o(.text.LPUART_TransferSendNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferSendNonBlocking) refers to fsl_lpuart.o(.text.LPUART_TransferSendNonBlocking) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferAbortSend) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.2
    fsl_lpuart.o(.text.LPUART_TransferAbortSend) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferAbortSend) refers to fsl_lpuart.o(.text.LPUART_TransferAbortSend) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferGetSendCount) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.2
    fsl_lpuart.o(.text.LPUART_TransferGetSendCount) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferGetSendCount) refers to fsl_lpuart.o(.text.LPUART_TransferGetSendCount) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferReceiveNonBlocking) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.2
    fsl_lpuart.o(.text.LPUART_TransferReceiveNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferReceiveNonBlocking) refers to fsl_lpuart.o(.text.LPUART_TransferReceiveNonBlocking) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferAbortReceive) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.2
    fsl_lpuart.o(.text.LPUART_TransferAbortReceive) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferAbortReceive) refers to fsl_lpuart.o(.text.LPUART_TransferAbortReceive) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferGetReceiveCount) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.2
    fsl_lpuart.o(.text.LPUART_TransferGetReceiveCount) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferGetReceiveCount) refers to fsl_lpuart.o(.text.LPUART_TransferGetReceiveCount) for [Anonymous Symbol]
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferHandleErrorIRQ) refers to fsl_lpuart.o(.text.LPUART_TransferHandleErrorIRQ) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART1_DriverIRQHandler) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART1_DriverIRQHandler) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.ARM.exidx.text.LPUART1_DriverIRQHandler) refers to fsl_lpuart.o(.text.LPUART1_DriverIRQHandler) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART2_DriverIRQHandler) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART2_DriverIRQHandler) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.ARM.exidx.text.LPUART2_DriverIRQHandler) refers to fsl_lpuart.o(.text.LPUART2_DriverIRQHandler) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART3_DriverIRQHandler) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART3_DriverIRQHandler) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.ARM.exidx.text.LPUART3_DriverIRQHandler) refers to fsl_lpuart.o(.text.LPUART3_DriverIRQHandler) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART4_DriverIRQHandler) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART4_DriverIRQHandler) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.ARM.exidx.text.LPUART4_DriverIRQHandler) refers to fsl_lpuart.o(.text.LPUART4_DriverIRQHandler) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART5_DriverIRQHandler) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART5_DriverIRQHandler) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.ARM.exidx.text.LPUART5_DriverIRQHandler) refers to fsl_lpuart.o(.text.LPUART5_DriverIRQHandler) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART6_DriverIRQHandler) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART6_DriverIRQHandler) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.ARM.exidx.text.LPUART6_DriverIRQHandler) refers to fsl_lpuart.o(.text.LPUART6_DriverIRQHandler) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART7_DriverIRQHandler) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART7_DriverIRQHandler) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.ARM.exidx.text.LPUART7_DriverIRQHandler) refers to fsl_lpuart.o(.text.LPUART7_DriverIRQHandler) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART8_DriverIRQHandler) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART8_DriverIRQHandler) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.ARM.exidx.text.LPUART8_DriverIRQHandler) refers to fsl_lpuart.o(.text.LPUART8_DriverIRQHandler) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART9_DriverIRQHandler) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART9_DriverIRQHandler) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.ARM.exidx.text.LPUART9_DriverIRQHandler) refers to fsl_lpuart.o(.text.LPUART9_DriverIRQHandler) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART10_DriverIRQHandler) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART10_DriverIRQHandler) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.ARM.exidx.text.LPUART10_DriverIRQHandler) refers to fsl_lpuart.o(.text.LPUART10_DriverIRQHandler) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART11_DriverIRQHandler) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART11_DriverIRQHandler) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.ARM.exidx.text.LPUART11_DriverIRQHandler) refers to fsl_lpuart.o(.text.LPUART11_DriverIRQHandler) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART12_DriverIRQHandler) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART12_DriverIRQHandler) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.ARM.exidx.text.LPUART12_DriverIRQHandler) refers to fsl_lpuart.o(.text.LPUART12_DriverIRQHandler) for [Anonymous Symbol]
    fsl_lpuart.o(.data.s_lpuartIsr) refers to startup_mimxrt1176_cm7.o(.text) for DefaultISR
    fsl_gpio.o(.text.GPIO_PinInit) refers to fsl_gpio.o(.rodata.str1.1) for .L.str.1
    fsl_gpio.o(.text.GPIO_PinInit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_gpio.o(.ARM.exidx.text.GPIO_PinInit) refers to fsl_gpio.o(.text.GPIO_PinInit) for [Anonymous Symbol]
    fsl_gpio.o(.text.GPIO_PinWrite) refers to fsl_gpio.o(.rodata.str1.1) for .L.str
    fsl_gpio.o(.text.GPIO_PinWrite) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_gpio.o(.ARM.exidx.text.GPIO_PinWrite) refers to fsl_gpio.o(.text.GPIO_PinWrite) for [Anonymous Symbol]
    fsl_gpio.o(.ARM.exidx.text.GPIO_PinSetInterruptConfig) refers to fsl_gpio.o(.text.GPIO_PinSetInterruptConfig) for [Anonymous Symbol]
    fsl_pmu.o(.ARM.exidx.text.PMU_SetPllLdoControlMode) refers to fsl_pmu.o(.text.PMU_SetPllLdoControlMode) for [Anonymous Symbol]
    fsl_pmu.o(.ARM.exidx.text.PMU_SwitchPllLdoToGPCMode) refers to fsl_pmu.o(.text.PMU_SwitchPllLdoToGPCMode) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_StaticEnablePllLdo) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_pmu.o(.text.PMU_StaticEnablePllLdo) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_pmu.o(.text.PMU_StaticEnablePllLdo) refers to fsl_common_arm.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_pmu.o(.ARM.exidx.text.PMU_StaticEnablePllLdo) refers to fsl_pmu.o(.text.PMU_StaticEnablePllLdo) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_StaticDisablePllLdo) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_pmu.o(.ARM.exidx.text.PMU_StaticDisablePllLdo) refers to fsl_pmu.o(.text.PMU_StaticDisablePllLdo) for [Anonymous Symbol]
    fsl_pmu.o(.ARM.exidx.text.PMU_SetLpsrAnaLdoControlMode) refers to fsl_pmu.o(.text.PMU_SetLpsrAnaLdoControlMode) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_StaticEnableLpsrAnaLdoBypassMode) refers to fsl_common_arm.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_pmu.o(.ARM.exidx.text.PMU_StaticEnableLpsrAnaLdoBypassMode) refers to fsl_pmu.o(.text.PMU_StaticEnableLpsrAnaLdoBypassMode) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_StaticGetLpsrAnaLdoDefaultConfig) refers to memset.o(.text) for memset
    fsl_pmu.o(.text.PMU_StaticGetLpsrAnaLdoDefaultConfig) refers to fsl_pmu.o(.rodata.str1.1) for .L.str
    fsl_pmu.o(.text.PMU_StaticGetLpsrAnaLdoDefaultConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.ARM.exidx.text.PMU_StaticGetLpsrAnaLdoDefaultConfig) refers to fsl_pmu.o(.text.PMU_StaticGetLpsrAnaLdoDefaultConfig) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_StaticLpsrAnaLdoInit) refers to fsl_pmu.o(.rodata.str1.1) for .L.str
    fsl_pmu.o(.text.PMU_StaticLpsrAnaLdoInit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.ARM.exidx.text.PMU_StaticLpsrAnaLdoInit) refers to fsl_pmu.o(.text.PMU_StaticLpsrAnaLdoInit) for [Anonymous Symbol]
    fsl_pmu.o(.ARM.exidx.text.PMU_StaticLpsrAnaLdoDeinit) refers to fsl_pmu.o(.text.PMU_StaticLpsrAnaLdoDeinit) for [Anonymous Symbol]
    fsl_pmu.o(.ARM.exidx.text.PMU_SetLpsrDigLdoControlMode) refers to fsl_pmu.o(.text.PMU_SetLpsrDigLdoControlMode) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_StaticEnableLpsrDigLdoBypassMode) refers to fsl_common_arm.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_pmu.o(.ARM.exidx.text.PMU_StaticEnableLpsrDigLdoBypassMode) refers to fsl_pmu.o(.text.PMU_StaticEnableLpsrDigLdoBypassMode) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_StaticGetLpsrDigLdoDefaultConfig) refers to memset.o(.text) for memset
    fsl_pmu.o(.text.PMU_StaticGetLpsrDigLdoDefaultConfig) refers to fsl_pmu.o(.rodata.str1.1) for .L.str
    fsl_pmu.o(.text.PMU_StaticGetLpsrDigLdoDefaultConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.ARM.exidx.text.PMU_StaticGetLpsrDigLdoDefaultConfig) refers to fsl_pmu.o(.text.PMU_StaticGetLpsrDigLdoDefaultConfig) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_StaticLpsrDigLdoInit) refers to fsl_common_arm.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_pmu.o(.text.PMU_StaticLpsrDigLdoInit) refers to fsl_pmu.o(.rodata.str1.1) for .L.str
    fsl_pmu.o(.text.PMU_StaticLpsrDigLdoInit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.ARM.exidx.text.PMU_StaticLpsrDigLdoInit) refers to fsl_pmu.o(.text.PMU_StaticLpsrDigLdoInit) for [Anonymous Symbol]
    fsl_pmu.o(.ARM.exidx.text.PMU_StaticLpsrDigLdoDeinit) refers to fsl_pmu.o(.text.PMU_StaticLpsrDigLdoDeinit) for [Anonymous Symbol]
    fsl_pmu.o(.ARM.exidx.text.PMU_GPCSetLpsrDigLdoTargetVoltage) refers to fsl_pmu.o(.text.PMU_GPCSetLpsrDigLdoTargetVoltage) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_GetSnvsDigLdoDefaultConfig) refers to memset.o(.text) for memset
    fsl_pmu.o(.text.PMU_GetSnvsDigLdoDefaultConfig) refers to fsl_pmu.o(.rodata.str1.1) for .L.str
    fsl_pmu.o(.text.PMU_GetSnvsDigLdoDefaultConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.ARM.exidx.text.PMU_GetSnvsDigLdoDefaultConfig) refers to fsl_pmu.o(.text.PMU_GetSnvsDigLdoDefaultConfig) for [Anonymous Symbol]
    fsl_pmu.o(.ARM.exidx.text.PMU_SnvsDigLdoInit) refers to fsl_pmu.o(.text.PMU_SnvsDigLdoInit) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_GPCEnableLdo) refers to fsl_pmu.o(.rodata.str1.1) for .L.str.2
    fsl_pmu.o(.text.PMU_GPCEnableLdo) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.ARM.exidx.text.PMU_GPCEnableLdo) refers to fsl_pmu.o(.text.PMU_GPCEnableLdo) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_GPCSetLdoOperateMode) refers to fsl_pmu.o(.rodata.cst16) for .L__const.PMU_GPCSetLdoOperateMode.ldoLpModeRegArray
    fsl_pmu.o(.text.PMU_GPCSetLdoOperateMode) refers to fsl_pmu.o(.rodata.str1.1) for .L.str.3
    fsl_pmu.o(.text.PMU_GPCSetLdoOperateMode) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.ARM.exidx.text.PMU_GPCSetLdoOperateMode) refers to fsl_pmu.o(.text.PMU_GPCSetLdoOperateMode) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_GPCEnableLdoTrackingMode) refers to fsl_pmu.o(.rodata.str1.1) for .L.str.4
    fsl_pmu.o(.text.PMU_GPCEnableLdoTrackingMode) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.ARM.exidx.text.PMU_GPCEnableLdoTrackingMode) refers to fsl_pmu.o(.text.PMU_GPCEnableLdoTrackingMode) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_GPCEnableLdoBypassMode) refers to fsl_pmu.o(.rodata.str1.1) for .L.str.4
    fsl_pmu.o(.text.PMU_GPCEnableLdoBypassMode) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.ARM.exidx.text.PMU_GPCEnableLdoBypassMode) refers to fsl_pmu.o(.text.PMU_GPCEnableLdoBypassMode) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_GPCEnableLdoStandbyMode) refers to fsl_pmu.o(.rodata.str1.1) for .L.str.2
    fsl_pmu.o(.text.PMU_GPCEnableLdoStandbyMode) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.ARM.exidx.text.PMU_GPCEnableLdoStandbyMode) refers to fsl_pmu.o(.text.PMU_GPCEnableLdoStandbyMode) for [Anonymous Symbol]
    fsl_pmu.o(.ARM.exidx.text.PMU_SetBandgapControlMode) refers to fsl_pmu.o(.text.PMU_SetBandgapControlMode) for [Anonymous Symbol]
    fsl_pmu.o(.ARM.exidx.text.PMU_SwitchBandgapToGPCMode) refers to fsl_pmu.o(.text.PMU_SwitchBandgapToGPCMode) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_DisableBandgapSelfBiasAfterPowerUp) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_pmu.o(.text.PMU_DisableBandgapSelfBiasAfterPowerUp) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_pmu.o(.ARM.exidx.text.PMU_DisableBandgapSelfBiasAfterPowerUp) refers to fsl_pmu.o(.text.PMU_DisableBandgapSelfBiasAfterPowerUp) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_EnableBandgapSelfBiasBeforePowerDown) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_pmu.o(.text.PMU_EnableBandgapSelfBiasBeforePowerDown) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_pmu.o(.ARM.exidx.text.PMU_EnableBandgapSelfBiasBeforePowerDown) refers to fsl_pmu.o(.text.PMU_EnableBandgapSelfBiasBeforePowerDown) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_StaticBandgapInit) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_pmu.o(.text.PMU_StaticBandgapInit) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_pmu.o(.text.PMU_StaticBandgapInit) refers to fsl_pmu.o(.rodata.str1.1) for .L.str
    fsl_pmu.o(.text.PMU_StaticBandgapInit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.ARM.exidx.text.PMU_StaticBandgapInit) refers to fsl_pmu.o(.text.PMU_StaticBandgapInit) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_WellBiasInit) refers to fsl_pmu.o(.rodata.str1.1) for .L.str
    fsl_pmu.o(.text.PMU_WellBiasInit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.ARM.exidx.text.PMU_WellBiasInit) refers to fsl_pmu.o(.text.PMU_WellBiasInit) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_GetWellBiasDefaultConfig) refers to memset.o(.text) for memset
    fsl_pmu.o(.text.PMU_GetWellBiasDefaultConfig) refers to fsl_pmu.o(.rodata.str1.1) for .L.str
    fsl_pmu.o(.text.PMU_GetWellBiasDefaultConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.ARM.exidx.text.PMU_GetWellBiasDefaultConfig) refers to fsl_pmu.o(.text.PMU_GetWellBiasDefaultConfig) for [Anonymous Symbol]
    fsl_pmu.o(.ARM.exidx.text.PMU_SetBodyBiasControlMode) refers to fsl_pmu.o(.text.PMU_SetBodyBiasControlMode) for [Anonymous Symbol]
    fsl_pmu.o(.ARM.exidx.text.PMU_EnableBodyBias) refers to fsl_pmu.o(.text.PMU_EnableBodyBias) for [Anonymous Symbol]
    fsl_pmu.o(.ARM.exidx.text.PMU_GPCEnableBodyBias) refers to fsl_pmu.o(.text.PMU_GPCEnableBodyBias) for [Anonymous Symbol]
    fsl_pmu.o(.ARM.exidx.text.PMU_GPCEnableBodyBiasStandbyMode) refers to fsl_pmu.o(.text.PMU_GPCEnableBodyBiasStandbyMode) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_GPCGetBodyBiasDefaultConfig) refers to fsl_pmu.o(.rodata.str1.1) for .L.str
    fsl_pmu.o(.text.PMU_GPCGetBodyBiasDefaultConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.ARM.exidx.text.PMU_GPCGetBodyBiasDefaultConfig) refers to fsl_pmu.o(.text.PMU_GPCGetBodyBiasDefaultConfig) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_GPCSetBodyBiasConfig) refers to fsl_pmu.o(.rodata.str1.1) for .L.str
    fsl_pmu.o(.text.PMU_GPCSetBodyBiasConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.ARM.exidx.text.PMU_GPCSetBodyBiasConfig) refers to fsl_pmu.o(.text.PMU_GPCSetBodyBiasConfig) for [Anonymous Symbol]
    fsl_dcdc.o(.text.DCDC_Init) refers to fsl_dcdc.o(.rodata.str1.1) for .L.str.4
    fsl_dcdc.o(.text.DCDC_Init) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dcdc.o(.ARM.exidx.text.DCDC_Init) refers to fsl_dcdc.o(.text.DCDC_Init) for [Anonymous Symbol]
    fsl_dcdc.o(.text.DCDC_Deinit) refers to fsl_dcdc.o(.rodata.str1.1) for .L.str.4
    fsl_dcdc.o(.text.DCDC_Deinit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dcdc.o(.ARM.exidx.text.DCDC_Deinit) refers to fsl_dcdc.o(.text.DCDC_Deinit) for [Anonymous Symbol]
    fsl_dcdc.o(.text.DCDC_GetDefaultConfig) refers to memset.o(.text) for memset
    fsl_dcdc.o(.text.DCDC_GetDefaultConfig) refers to fsl_dcdc.o(.rodata.str1.1) for .L.str
    fsl_dcdc.o(.text.DCDC_GetDefaultConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dcdc.o(.ARM.exidx.text.DCDC_GetDefaultConfig) refers to fsl_dcdc.o(.text.DCDC_GetDefaultConfig) for [Anonymous Symbol]
    fsl_dcdc.o(.text.DCDC_GetDefaultDetectionConfig) refers to memset.o(.text) for memset
    fsl_dcdc.o(.text.DCDC_GetDefaultDetectionConfig) refers to fsl_dcdc.o(.rodata.str1.1) for .L.str
    fsl_dcdc.o(.text.DCDC_GetDefaultDetectionConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dcdc.o(.ARM.exidx.text.DCDC_GetDefaultDetectionConfig) refers to fsl_dcdc.o(.text.DCDC_GetDefaultDetectionConfig) for [Anonymous Symbol]
    fsl_dcdc.o(.text.DCDC_SetDetectionConfig) refers to fsl_dcdc.o(.rodata.str1.1) for .L.str
    fsl_dcdc.o(.text.DCDC_SetDetectionConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dcdc.o(.ARM.exidx.text.DCDC_SetDetectionConfig) refers to fsl_dcdc.o(.text.DCDC_SetDetectionConfig) for [Anonymous Symbol]
    fsl_dcdc.o(.text.DCDC_SetClockSource) refers to fsl_dcdc.o(.rodata.str1.1) for .L.str.1
    fsl_dcdc.o(.text.DCDC_SetClockSource) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dcdc.o(.ARM.exidx.text.DCDC_SetClockSource) refers to fsl_dcdc.o(.text.DCDC_SetClockSource) for [Anonymous Symbol]
    fsl_dcdc.o(.text.DCDC_GetDefaultLowPowerConfig) refers to memset.o(.text) for memset
    fsl_dcdc.o(.text.DCDC_GetDefaultLowPowerConfig) refers to fsl_dcdc.o(.rodata.str1.1) for .L.str
    fsl_dcdc.o(.text.DCDC_GetDefaultLowPowerConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dcdc.o(.ARM.exidx.text.DCDC_GetDefaultLowPowerConfig) refers to fsl_dcdc.o(.text.DCDC_GetDefaultLowPowerConfig) for [Anonymous Symbol]
    fsl_dcdc.o(.text.DCDC_SetLowPowerConfig) refers to fsl_dcdc.o(.rodata.str1.1) for .L.str
    fsl_dcdc.o(.text.DCDC_SetLowPowerConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dcdc.o(.ARM.exidx.text.DCDC_SetLowPowerConfig) refers to fsl_dcdc.o(.text.DCDC_SetLowPowerConfig) for [Anonymous Symbol]
    fsl_dcdc.o(.text.DCDC_GetDefaultLoopControlConfig) refers to memset.o(.text) for memset
    fsl_dcdc.o(.text.DCDC_GetDefaultLoopControlConfig) refers to fsl_dcdc.o(.rodata.str1.1) for .L.str
    fsl_dcdc.o(.text.DCDC_GetDefaultLoopControlConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dcdc.o(.ARM.exidx.text.DCDC_GetDefaultLoopControlConfig) refers to fsl_dcdc.o(.text.DCDC_GetDefaultLoopControlConfig) for [Anonymous Symbol]
    fsl_dcdc.o(.text.DCDC_SetLoopControlConfig) refers to fsl_dcdc.o(.rodata.str1.1) for .L.str
    fsl_dcdc.o(.text.DCDC_SetLoopControlConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dcdc.o(.ARM.exidx.text.DCDC_SetLoopControlConfig) refers to fsl_dcdc.o(.text.DCDC_SetLoopControlConfig) for [Anonymous Symbol]
    fsl_dcdc.o(.text.DCDC_SetMinPowerConfig) refers to fsl_dcdc.o(.rodata.str1.1) for .L.str
    fsl_dcdc.o(.text.DCDC_SetMinPowerConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dcdc.o(.ARM.exidx.text.DCDC_SetMinPowerConfig) refers to fsl_dcdc.o(.text.DCDC_SetMinPowerConfig) for [Anonymous Symbol]
    fsl_dcdc.o(.text.DCDC_SetInternalRegulatorConfig) refers to fsl_dcdc.o(.rodata.str1.1) for .L.str
    fsl_dcdc.o(.text.DCDC_SetInternalRegulatorConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dcdc.o(.ARM.exidx.text.DCDC_SetInternalRegulatorConfig) refers to fsl_dcdc.o(.text.DCDC_SetInternalRegulatorConfig) for [Anonymous Symbol]
    fsl_dcdc.o(.text.DCDC_SetPointInit) refers to fsl_dcdc.o(.rodata.str1.1) for .L.str.5
    fsl_dcdc.o(.text.DCDC_SetPointInit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dcdc.o(.ARM.exidx.text.DCDC_SetPointInit) refers to fsl_dcdc.o(.text.DCDC_SetPointInit) for [Anonymous Symbol]
    fsl_dcdc.o(.ARM.exidx.text.DCDC_BootIntoDCM) refers to fsl_dcdc.o(.text.DCDC_BootIntoDCM) for [Anonymous Symbol]
    fsl_dcdc.o(.ARM.exidx.text.DCDC_BootIntoCCM) refers to fsl_dcdc.o(.text.DCDC_BootIntoCCM) for [Anonymous Symbol]
    fsl_cache.o(.ARM.exidx.text.L1CACHE_InvalidateICacheByRange) refers to fsl_cache.o(.text.L1CACHE_InvalidateICacheByRange) for [Anonymous Symbol]
    fsl_cache.o(.ARM.exidx.text.ICACHE_InvalidateByRange) refers to fsl_cache.o(.text.ICACHE_InvalidateByRange) for [Anonymous Symbol]
    fsl_cache.o(.ARM.exidx.text.DCACHE_InvalidateByRange) refers to fsl_cache.o(.text.DCACHE_InvalidateByRange) for [Anonymous Symbol]
    fsl_cache.o(.ARM.exidx.text.DCACHE_CleanByRange) refers to fsl_cache.o(.text.DCACHE_CleanByRange) for [Anonymous Symbol]
    fsl_cache.o(.ARM.exidx.text.DCACHE_CleanInvalidateByRange) refers to fsl_cache.o(.text.DCACHE_CleanInvalidateByRange) for [Anonymous Symbol]
    fsl_anatop_ai.o(.ARM.exidx.text.ANATOP_AI_Access) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Access) for [Anonymous Symbol]
    fsl_anatop_ai.o(.text.ANATOP_AI_Write) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Access) for ANATOP_AI_Access
    fsl_anatop_ai.o(.ARM.exidx.text.ANATOP_AI_Write) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for [Anonymous Symbol]
    fsl_anatop_ai.o(.text.ANATOP_AI_Read) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Access) for ANATOP_AI_Access
    fsl_anatop_ai.o(.ARM.exidx.text.ANATOP_AI_Read) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for [Anonymous Symbol]
    fsl_anatop_ai.o(.text.ANATOP_AI_WriteWithMaskShift) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Access) for ANATOP_AI_Access
    fsl_anatop_ai.o(.ARM.exidx.text.ANATOP_AI_WriteWithMaskShift) refers to fsl_anatop_ai.o(.text.ANATOP_AI_WriteWithMaskShift) for [Anonymous Symbol]
    fsl_gpt.o(.text.GPT_Init) refers to fsl_gpt.o(.rodata.s_gptBases) for s_gptBases
    fsl_gpt.o(.text.GPT_Init) refers to fsl_gpt.o(.rodata.str1.1) for .L.str.3
    fsl_gpt.o(.text.GPT_Init) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_gpt.o(.text.GPT_Init) refers to fsl_gpt.o(.rodata.s_gptClocks) for s_gptClocks
    fsl_gpt.o(.ARM.exidx.text.GPT_Init) refers to fsl_gpt.o(.text.GPT_Init) for [Anonymous Symbol]
    fsl_gpt.o(.text.GPT_Deinit) refers to fsl_gpt.o(.rodata.s_gptBases) for s_gptBases
    fsl_gpt.o(.text.GPT_Deinit) refers to fsl_gpt.o(.rodata.str1.1) for .L.str.3
    fsl_gpt.o(.text.GPT_Deinit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_gpt.o(.text.GPT_Deinit) refers to fsl_gpt.o(.rodata.s_gptClocks) for s_gptClocks
    fsl_gpt.o(.ARM.exidx.text.GPT_Deinit) refers to fsl_gpt.o(.text.GPT_Deinit) for [Anonymous Symbol]
    fsl_gpt.o(.text.GPT_GetDefaultConfig) refers to memset.o(.text) for memset
    fsl_gpt.o(.text.GPT_GetDefaultConfig) refers to fsl_gpt.o(.rodata.str1.1) for .L.str.1
    fsl_gpt.o(.text.GPT_GetDefaultConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_gpt.o(.ARM.exidx.text.GPT_GetDefaultConfig) refers to fsl_gpt.o(.text.GPT_GetDefaultConfig) for [Anonymous Symbol]
    system_mimxrt1176_cm7.o(.text.SystemInit) refers to system_mimxrt1176_cm7.o(.text.SystemInitHook) for SystemInitHook
    system_mimxrt1176_cm7.o(.ARM.exidx.text.SystemInit) refers to system_mimxrt1176_cm7.o(.text.SystemInit) for [Anonymous Symbol]
    system_mimxrt1176_cm7.o(.ARM.exidx.text.SystemInitHook) refers to system_mimxrt1176_cm7.o(.text.SystemInitHook) for [Anonymous Symbol]
    system_mimxrt1176_cm7.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_mimxrt1176_cm7.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    fsl_adapter_lpuart.o(.text.HAL_UartInit) refers to fsl_lpuart.o(.text.LPUART_GetDefaultConfig) for LPUART_GetDefaultConfig
    fsl_adapter_lpuart.o(.text.HAL_UartInit) refers to fsl_adapter_lpuart.o(.rodata.s_LpuartAdapterBase) for s_LpuartAdapterBase
    fsl_adapter_lpuart.o(.text.HAL_UartInit) refers to fsl_lpuart.o(.text.LPUART_Init) for LPUART_Init
    fsl_adapter_lpuart.o(.text.HAL_UartInit) refers to fsl_adapter_lpuart.o(.rodata.str1.1) for .L.str
    fsl_adapter_lpuart.o(.text.HAL_UartInit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartInit) refers to fsl_adapter_lpuart.o(.text.HAL_UartInit) for [Anonymous Symbol]
    fsl_adapter_lpuart.o(.text.HAL_UartDeinit) refers to fsl_adapter_lpuart.o(.rodata.s_LpuartAdapterBase) for s_LpuartAdapterBase
    fsl_adapter_lpuart.o(.text.HAL_UartDeinit) refers to fsl_lpuart.o(.text.LPUART_Deinit) for LPUART_Deinit
    fsl_adapter_lpuart.o(.text.HAL_UartDeinit) refers to fsl_adapter_lpuart.o(.rodata.str1.1) for .L.str
    fsl_adapter_lpuart.o(.text.HAL_UartDeinit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartDeinit) refers to fsl_adapter_lpuart.o(.text.HAL_UartDeinit) for [Anonymous Symbol]
    fsl_adapter_lpuart.o(.text.HAL_UartReceiveBlocking) refers to fsl_adapter_lpuart.o(.rodata.s_LpuartAdapterBase) for s_LpuartAdapterBase
    fsl_adapter_lpuart.o(.text.HAL_UartReceiveBlocking) refers to fsl_lpuart.o(.text.LPUART_ReadBlocking) for LPUART_ReadBlocking
    fsl_adapter_lpuart.o(.text.HAL_UartReceiveBlocking) refers to fsl_adapter_lpuart.o(.rodata.str1.1) for .L.str
    fsl_adapter_lpuart.o(.text.HAL_UartReceiveBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartReceiveBlocking) refers to fsl_adapter_lpuart.o(.text.HAL_UartReceiveBlocking) for [Anonymous Symbol]
    fsl_adapter_lpuart.o(.text.HAL_UartSendBlocking) refers to fsl_adapter_lpuart.o(.rodata.s_LpuartAdapterBase) for s_LpuartAdapterBase
    fsl_adapter_lpuart.o(.text.HAL_UartSendBlocking) refers to fsl_lpuart.o(.text.LPUART_WriteBlocking) for LPUART_WriteBlocking
    fsl_adapter_lpuart.o(.text.HAL_UartSendBlocking) refers to fsl_adapter_lpuart.o(.rodata.str1.1) for .L.str
    fsl_adapter_lpuart.o(.text.HAL_UartSendBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartSendBlocking) refers to fsl_adapter_lpuart.o(.text.HAL_UartSendBlocking) for [Anonymous Symbol]
    fsl_adapter_lpuart.o(.text.HAL_UartEnterLowpower) refers to fsl_adapter_lpuart.o(.rodata.str1.1) for .L.str
    fsl_adapter_lpuart.o(.text.HAL_UartEnterLowpower) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartEnterLowpower) refers to fsl_adapter_lpuart.o(.text.HAL_UartEnterLowpower) for [Anonymous Symbol]
    fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartExitLowpower) refers to fsl_adapter_lpuart.o(.text.HAL_UartExitLowpower) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_Init) refers to fsl_component_generic_list.o(.text.LIST_Init) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetList) refers to fsl_component_generic_list.o(.text.LIST_GetList) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddTail) refers to fsl_component_generic_list.o(.text.LIST_AddTail) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddHead) refers to fsl_component_generic_list.o(.text.LIST_AddHead) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_RemoveHead) refers to fsl_component_generic_list.o(.text.LIST_RemoveHead) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetHead) refers to fsl_component_generic_list.o(.text.LIST_GetHead) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetNext) refers to fsl_component_generic_list.o(.text.LIST_GetNext) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetPrev) refers to fsl_component_generic_list.o(.text.LIST_GetPrev) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_RemoveElement) refers to fsl_component_generic_list.o(.text.LIST_RemoveElement) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddPrevElement) refers to fsl_component_generic_list.o(.text.LIST_AddPrevElement) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetSize) refers to fsl_component_generic_list.o(.text.LIST_GetSize) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetAvailableSize) refers to fsl_component_generic_list.o(.text.LIST_GetAvailableSize) for [Anonymous Symbol]
    startup_mimxrt1176_cm7.o(.text) refers to startup_mimxrt1176_cm7.o(.isr_vector) for __Vectors
    startup_mimxrt1176_cm7.o(.text) refers to system_mimxrt1176_cm7.o(.text.SystemInit) for SystemInit
    startup_mimxrt1176_cm7.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    startup_mimxrt1176_cm7.o(.text) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_mimxrt1176_cm7.o(.text) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_mimxrt1176_cm7.o(.text) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_lpuart.o(.text.LPUART1_DriverIRQHandler) for LPUART1_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_lpuart.o(.text.LPUART2_DriverIRQHandler) for LPUART2_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_lpuart.o(.text.LPUART3_DriverIRQHandler) for LPUART3_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_lpuart.o(.text.LPUART4_DriverIRQHandler) for LPUART4_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_lpuart.o(.text.LPUART5_DriverIRQHandler) for LPUART5_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_lpuart.o(.text.LPUART6_DriverIRQHandler) for LPUART6_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_lpuart.o(.text.LPUART7_DriverIRQHandler) for LPUART7_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_lpuart.o(.text.LPUART8_DriverIRQHandler) for LPUART8_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_lpuart.o(.text.LPUART9_DriverIRQHandler) for LPUART9_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_lpuart.o(.text.LPUART10_DriverIRQHandler) for LPUART10_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_lpuart.o(.text.LPUART11_DriverIRQHandler) for LPUART11_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_lpuart.o(.text.LPUART12_DriverIRQHandler) for LPUART12_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_flexcan.o(.text.CAN1_DriverIRQHandler) for CAN1_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_flexcan.o(.text.CAN2_DriverIRQHandler) for CAN2_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_flexcan.o(.text.CAN3_DriverIRQHandler) for CAN3_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.isr_vector) refers to startup_mimxrt1176_cm7.o(.text) for Reset_Handler
    startup_mimxrt1176_cm7.o(.isr_vector) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_mimxrt1176_cm7.o(.isr_vector) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_mimxrt1176_cm7.o(.isr_vector) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    startup_mimxrt1176_cm7.o(.isr_vector) refers to flexcan_interrupt_transfer.o(.text.GPT2_IRQHandler) for GPT2_IRQHandler
    fsl_flexspi_nor_boot.o(.boot_hdr.ivt) refers to startup_mimxrt1176_cm7.o(.text) for Reset_Handler
    fsl_flexspi_nor_boot.o(.boot_hdr.ivt) refers to fsl_flexspi_nor_boot.o(.boot_hdr.boot_data) for g_boot_data
    dcf.o(.text.start_node) refers to nmtmaster.o(.text.masterSendNMTstateChange) for masterSendNMTstateChange
    dcf.o(.ARM.exidx.text.start_node) refers to dcf.o(.text.start_node) for [Anonymous Symbol]
    dcf.o(.text.check_and_start_node) refers to dcf.o(.text.read_consise_dcf_next_entry) for read_consise_dcf_next_entry
    dcf.o(.text.check_and_start_node) refers to nmtmaster.o(.text.masterSendNMTstateChange) for masterSendNMTstateChange
    dcf.o(.ARM.exidx.text.check_and_start_node) refers to dcf.o(.text.check_and_start_node) for [Anonymous Symbol]
    dcf.o(.ARM.exidx.text.init_consise_dcf) refers to dcf.o(.text.init_consise_dcf) for [Anonymous Symbol]
    dcf.o(.text.read_consise_dcf_next_entry) refers to memcpy.o(.text) for memcpy
    dcf.o(.text.read_consise_dcf_next_entry) refers to dcf.o(.text.CheckSDOAndContinue) for CheckSDOAndContinue
    dcf.o(.text.read_consise_dcf_next_entry) refers to sdo.o(.text.readNetworkDictCallbackAI) for readNetworkDictCallbackAI
    dcf.o(.ARM.exidx.text.read_consise_dcf_next_entry) refers to dcf.o(.text.read_consise_dcf_next_entry) for [Anonymous Symbol]
    dcf.o(.text.start_and_seek_node) refers to nmtmaster.o(.text.masterSendNMTstateChange) for masterSendNMTstateChange
    dcf.o(.text.start_and_seek_node) refers to dcf.o(.text.check_and_start_node) for check_and_start_node
    dcf.o(.ARM.exidx.text.start_and_seek_node) refers to dcf.o(.text.start_and_seek_node) for [Anonymous Symbol]
    dcf.o(.text.get_next_DCF_data) refers to memcpy.o(.text) for memcpy
    dcf.o(.ARM.exidx.text.get_next_DCF_data) refers to dcf.o(.text.get_next_DCF_data) for [Anonymous Symbol]
    dcf.o(.text.SaveNode) refers to dcf.o(.text.CheckSDOAndContinue) for CheckSDOAndContinue
    dcf.o(.text.SaveNode) refers to sdo.o(.text.writeNetworkDictCallBackAI) for writeNetworkDictCallBackAI
    dcf.o(.ARM.exidx.text.SaveNode) refers to dcf.o(.text.SaveNode) for [Anonymous Symbol]
    dcf.o(.text.CheckSDOAndContinue) refers to sdo.o(.text.getReadResultNetworkDict) for getReadResultNetworkDict
    dcf.o(.text.CheckSDOAndContinue) refers to dcf.o(.text.read_consise_dcf_next_entry) for read_consise_dcf_next_entry
    dcf.o(.text.CheckSDOAndContinue) refers to nmtmaster.o(.text.masterSendNMTstateChange) for masterSendNMTstateChange
    dcf.o(.text.CheckSDOAndContinue) refers to dcf.o(.text.check_and_start_node) for check_and_start_node
    dcf.o(.text.CheckSDOAndContinue) refers to sdo.o(.text.getWriteResultNetworkDict) for getWriteResultNetworkDict
    dcf.o(.text.CheckSDOAndContinue) refers to dcf.o(.text.write_consise_dcf_next_entry) for write_consise_dcf_next_entry
    dcf.o(.text.CheckSDOAndContinue) refers to sdo.o(.text.resetClientSDOLineFromNodeId) for resetClientSDOLineFromNodeId
    dcf.o(.ARM.exidx.text.CheckSDOAndContinue) refers to dcf.o(.text.CheckSDOAndContinue) for [Anonymous Symbol]
    dcf.o(.text.write_consise_dcf_next_entry) refers to memcpy.o(.text) for memcpy
    dcf.o(.text.write_consise_dcf_next_entry) refers to dcf.o(.text.CheckSDOAndContinue) for CheckSDOAndContinue
    dcf.o(.text.write_consise_dcf_next_entry) refers to sdo.o(.text.writeNetworkDictCallBackAI) for writeNetworkDictCallBackAI
    dcf.o(.ARM.exidx.text.write_consise_dcf_next_entry) refers to dcf.o(.text.write_consise_dcf_next_entry) for [Anonymous Symbol]
    emcy.o(.ARM.exidx.text.OnNumberOfErrorsUpdate) refers to emcy.o(.text.OnNumberOfErrorsUpdate) for [Anonymous Symbol]
    emcy.o(.text.emergencyInit) refers to emcy.o(.text.OnNumberOfErrorsUpdate) for OnNumberOfErrorsUpdate
    emcy.o(.text.emergencyInit) refers to objacces.o(.text.RegisterSetODentryCallBack) for RegisterSetODentryCallBack
    emcy.o(.ARM.exidx.text.emergencyInit) refers to emcy.o(.text.emergencyInit) for [Anonymous Symbol]
    emcy.o(.ARM.exidx.text.emergencyStop) refers to emcy.o(.text.emergencyStop) for [Anonymous Symbol]
    emcy.o(.text.sendEMCY) refers to memcpy.o(.text) for memcpy
    emcy.o(.text.sendEMCY) refers to memset.o(.text) for memset
    emcy.o(.text.sendEMCY) refers to flexcan_interrupt_transfer.o(.text.canSend) for canSend
    emcy.o(.ARM.exidx.text.sendEMCY) refers to emcy.o(.text.sendEMCY) for [Anonymous Symbol]
    emcy.o(.text.EMCY_setError) refers to memset.o(.text) for memset
    emcy.o(.text.EMCY_setError) refers to flexcan_interrupt_transfer.o(.text.canSend) for canSend
    emcy.o(.ARM.exidx.text.EMCY_setError) refers to emcy.o(.text.EMCY_setError) for [Anonymous Symbol]
    emcy.o(.text.EMCY_errorRecovered) refers to memset.o(.text) for memset
    emcy.o(.text.EMCY_errorRecovered) refers to flexcan_interrupt_transfer.o(.text.canSend) for canSend
    emcy.o(.ARM.exidx.text.EMCY_errorRecovered) refers to emcy.o(.text.EMCY_errorRecovered) for [Anonymous Symbol]
    emcy.o(.ARM.exidx.text.proceedEMCY) refers to emcy.o(.text.proceedEMCY) for [Anonymous Symbol]
    emcy.o(.ARM.exidx.text._post_emcy) refers to emcy.o(.text._post_emcy) for [Anonymous Symbol]
    lifegrd.o(.ARM.exidx.text.getNodeState) refers to lifegrd.o(.text.getNodeState) for [Anonymous Symbol]
    lifegrd.o(.ARM.exidx.text.ConsumerHeartbeatAlarm) refers to lifegrd.o(.text.ConsumerHeartbeatAlarm) for [Anonymous Symbol]
    lifegrd.o(.text.proceedNODE_GUARD) refers to lifegrd.o(.text.ConsumerHeartbeatAlarm) for ConsumerHeartbeatAlarm
    lifegrd.o(.text.proceedNODE_GUARD) refers to timer.o(.text.DelAlarm) for DelAlarm
    lifegrd.o(.text.proceedNODE_GUARD) refers to timer.o(.text.SetAlarm) for SetAlarm
    lifegrd.o(.text.proceedNODE_GUARD) refers to flexcan_interrupt_transfer.o(.text.canSend) for canSend
    lifegrd.o(.ARM.exidx.text.proceedNODE_GUARD) refers to lifegrd.o(.text.proceedNODE_GUARD) for [Anonymous Symbol]
    lifegrd.o(.text.ProducerHeartbeatAlarm) refers to flexcan_interrupt_transfer.o(.text.canSend) for canSend
    lifegrd.o(.text.ProducerHeartbeatAlarm) refers to timer.o(.text.DelAlarm) for DelAlarm
    lifegrd.o(.ARM.exidx.text.ProducerHeartbeatAlarm) refers to lifegrd.o(.text.ProducerHeartbeatAlarm) for [Anonymous Symbol]
    lifegrd.o(.text.GuardTimeAlarm) refers to nmtmaster.o(.text.masterSendNMTnodeguard) for masterSendNMTnodeguard
    lifegrd.o(.text.GuardTimeAlarm) refers to timer.o(.text.DelAlarm) for DelAlarm
    lifegrd.o(.ARM.exidx.text.GuardTimeAlarm) refers to lifegrd.o(.text.GuardTimeAlarm) for [Anonymous Symbol]
    lifegrd.o(.text.OnNodeGuardUpdate) refers to timer.o(.text.DelAlarm) for DelAlarm
    lifegrd.o(.text.OnNodeGuardUpdate) refers to lifegrd.o(.text.nodeguardInit) for nodeguardInit
    lifegrd.o(.ARM.exidx.text.OnNodeGuardUpdate) refers to lifegrd.o(.text.OnNodeGuardUpdate) for [Anonymous Symbol]
    lifegrd.o(.text.nodeguardStop) refers to timer.o(.text.DelAlarm) for DelAlarm
    lifegrd.o(.ARM.exidx.text.nodeguardStop) refers to lifegrd.o(.text.nodeguardStop) for [Anonymous Symbol]
    lifegrd.o(.text.nodeguardInit) refers to lifegrd.o(.text.OnNodeGuardUpdate) for OnNodeGuardUpdate
    lifegrd.o(.text.nodeguardInit) refers to objacces.o(.text.RegisterSetODentryCallBack) for RegisterSetODentryCallBack
    lifegrd.o(.text.nodeguardInit) refers to lifegrd.o(.text.GuardTimeAlarm) for GuardTimeAlarm
    lifegrd.o(.text.nodeguardInit) refers to timer.o(.text.SetAlarm) for SetAlarm
    lifegrd.o(.ARM.exidx.text.nodeguardInit) refers to lifegrd.o(.text.nodeguardInit) for [Anonymous Symbol]
    lifegrd.o(.text.OnHeartbeatProducerUpdate) refers to timer.o(.text.DelAlarm) for DelAlarm
    lifegrd.o(.text.OnHeartbeatProducerUpdate) refers to lifegrd.o(.text.ProducerHeartbeatAlarm) for ProducerHeartbeatAlarm
    lifegrd.o(.text.OnHeartbeatProducerUpdate) refers to timer.o(.text.SetAlarm) for SetAlarm
    lifegrd.o(.ARM.exidx.text.OnHeartbeatProducerUpdate) refers to lifegrd.o(.text.OnHeartbeatProducerUpdate) for [Anonymous Symbol]
    lifegrd.o(.text.heartbeatInit) refers to lifegrd.o(.text.OnHeartbeatProducerUpdate) for OnHeartbeatProducerUpdate
    lifegrd.o(.text.heartbeatInit) refers to objacces.o(.text.RegisterSetODentryCallBack) for RegisterSetODentryCallBack
    lifegrd.o(.text.heartbeatInit) refers to lifegrd.o(.text.ConsumerHeartbeatAlarm) for ConsumerHeartbeatAlarm
    lifegrd.o(.text.heartbeatInit) refers to timer.o(.text.SetAlarm) for SetAlarm
    lifegrd.o(.text.heartbeatInit) refers to lifegrd.o(.text.ProducerHeartbeatAlarm) for ProducerHeartbeatAlarm
    lifegrd.o(.ARM.exidx.text.heartbeatInit) refers to lifegrd.o(.text.heartbeatInit) for [Anonymous Symbol]
    lifegrd.o(.text.heartbeatStop) refers to timer.o(.text.DelAlarm) for DelAlarm
    lifegrd.o(.ARM.exidx.text.heartbeatStop) refers to lifegrd.o(.text.heartbeatStop) for [Anonymous Symbol]
    lifegrd.o(.text.lifeGuardInit) refers to lifegrd.o(.text.heartbeatInit) for heartbeatInit
    lifegrd.o(.text.lifeGuardInit) refers to lifegrd.o(.text.nodeguardInit) for nodeguardInit
    lifegrd.o(.ARM.exidx.text.lifeGuardInit) refers to lifegrd.o(.text.lifeGuardInit) for [Anonymous Symbol]
    lifegrd.o(.text.lifeGuardStop) refers to timer.o(.text.DelAlarm) for DelAlarm
    lifegrd.o(.ARM.exidx.text.lifeGuardStop) refers to lifegrd.o(.text.lifeGuardStop) for [Anonymous Symbol]
    lifegrd.o(.ARM.exidx.text._heartbeatError) refers to lifegrd.o(.text._heartbeatError) for [Anonymous Symbol]
    lifegrd.o(.ARM.exidx.text._post_SlaveBootup) refers to lifegrd.o(.text._post_SlaveBootup) for [Anonymous Symbol]
    lifegrd.o(.ARM.exidx.text._post_SlaveStateChange) refers to lifegrd.o(.text._post_SlaveStateChange) for [Anonymous Symbol]
    lifegrd.o(.ARM.exidx.text._nodeguardError) refers to lifegrd.o(.text._nodeguardError) for [Anonymous Symbol]
    nmtmaster.o(.text.masterSendNMTstateChange) refers to flexcan_interrupt_transfer.o(.text.canSend) for canSend
    nmtmaster.o(.ARM.exidx.text.masterSendNMTstateChange) refers to nmtmaster.o(.text.masterSendNMTstateChange) for [Anonymous Symbol]
    nmtmaster.o(.text.masterSendNMTnodeguard) refers to flexcan_interrupt_transfer.o(.text.canSend) for canSend
    nmtmaster.o(.ARM.exidx.text.masterSendNMTnodeguard) refers to nmtmaster.o(.text.masterSendNMTnodeguard) for [Anonymous Symbol]
    nmtmaster.o(.text.masterRequestNodeState) refers to flexcan_interrupt_transfer.o(.text.canSend) for canSend
    nmtmaster.o(.ARM.exidx.text.masterRequestNodeState) refers to nmtmaster.o(.text.masterRequestNodeState) for [Anonymous Symbol]
    nmtslave.o(.text.proceedNMTstateChange) refers to states.o(.text.getNodeId) for getNodeId
    nmtslave.o(.text.proceedNMTstateChange) refers to states.o(.text.setNodeId) for setNodeId
    nmtslave.o(.text.proceedNMTstateChange) refers to states.o(.text.setState) for setState
    nmtslave.o(.ARM.exidx.text.proceedNMTstateChange) refers to nmtslave.o(.text.proceedNMTstateChange) for [Anonymous Symbol]
    nmtslave.o(.text.slaveSendBootUp) refers to flexcan_interrupt_transfer.o(.text.canSend) for canSend
    nmtslave.o(.ARM.exidx.text.slaveSendBootUp) refers to nmtslave.o(.text.slaveSendBootUp) for [Anonymous Symbol]
    objacces.o(.ARM.exidx.text.accessDictionaryError) refers to objacces.o(.text.accessDictionaryError) for [Anonymous Symbol]
    objacces.o(.text._getODentry) refers to memcpy.o(.text) for memcpy
    objacces.o(.ARM.exidx.text._getODentry) refers to objacces.o(.text._getODentry) for [Anonymous Symbol]
    objacces.o(.text._setODentry) refers to memcpy.o(.text) for memcpy
    objacces.o(.ARM.exidx.text._setODentry) refers to objacces.o(.text._setODentry) for [Anonymous Symbol]
    objacces.o(.ARM.exidx.text.RegisterSetODentryCallBack) refers to objacces.o(.text.RegisterSetODentryCallBack) for [Anonymous Symbol]
    objacces.o(.ARM.exidx.text._storeODSubIndex) refers to objacces.o(.text._storeODSubIndex) for [Anonymous Symbol]
    pdo.o(.text.buildPDO) refers to objacces.o(.text._getODentry) for _getODentry
    pdo.o(.ARM.exidx.text.buildPDO) refers to pdo.o(.text.buildPDO) for [Anonymous Symbol]
    pdo.o(.ARM.exidx.text.CopyBits) refers to pdo.o(.text.CopyBits) for [Anonymous Symbol]
    pdo.o(.text.sendPDOrequest) refers to flexcan_interrupt_transfer.o(.text.canSend) for canSend
    pdo.o(.ARM.exidx.text.sendPDOrequest) refers to pdo.o(.text.sendPDOrequest) for [Anonymous Symbol]
    pdo.o(.text.proceedPDO) refers to objacces.o(.text._setODentry) for _setODentry
    pdo.o(.text.proceedPDO) refers to timer.o(.text.DelAlarm) for DelAlarm
    pdo.o(.text.proceedPDO) refers to pdo.o(.text.sendOnePDOevent) for sendOnePDOevent
    pdo.o(.text.proceedPDO) refers to pdo.o(.text.buildPDO) for buildPDO
    pdo.o(.text.proceedPDO) refers to timer.o(.text.SetAlarm) for SetAlarm
    pdo.o(.text.proceedPDO) refers to flexcan_interrupt_transfer.o(.text.canSend) for canSend
    pdo.o(.ARM.exidx.text.proceedPDO) refers to pdo.o(.text.proceedPDO) for [Anonymous Symbol]
    pdo.o(.text.PDOEventTimerAlarm) refers to pdo.o(.text.sendOnePDOevent) for sendOnePDOevent
    pdo.o(.ARM.exidx.text.PDOEventTimerAlarm) refers to pdo.o(.text.PDOEventTimerAlarm) for [Anonymous Symbol]
    pdo.o(.text.sendPDOevent) refers to pdo.o(.text._sendPDOevent) for _sendPDOevent
    pdo.o(.ARM.exidx.text.sendPDOevent) refers to pdo.o(.text.sendPDOevent) for [Anonymous Symbol]
    pdo.o(.text._sendPDOevent) refers to memset.o(.text) for memset
    pdo.o(.text._sendPDOevent) refers to pdo.o(.text.buildPDO) for buildPDO
    pdo.o(.text._sendPDOevent) refers to flexcan_interrupt_transfer.o(.text.canSend) for canSend
    pdo.o(.text._sendPDOevent) refers to pdo.o(.text.sendOnePDOevent) for sendOnePDOevent
    pdo.o(.ARM.exidx.text._sendPDOevent) refers to pdo.o(.text._sendPDOevent) for [Anonymous Symbol]
    pdo.o(.text.sendOnePDOevent) refers to memset.o(.text) for memset
    pdo.o(.text.sendOnePDOevent) refers to pdo.o(.text.buildPDO) for buildPDO
    pdo.o(.text.sendOnePDOevent) refers to memcmp.o(.text) for memcmp
    pdo.o(.text.sendOnePDOevent) refers to timer.o(.text.DelAlarm) for DelAlarm
    pdo.o(.text.sendOnePDOevent) refers to pdo.o(.text.PDOEventTimerAlarm) for PDOEventTimerAlarm
    pdo.o(.text.sendOnePDOevent) refers to timer.o(.text.SetAlarm) for SetAlarm
    pdo.o(.text.sendOnePDOevent) refers to pdo.o(.text.PDOInhibitTimerAlarm) for PDOInhibitTimerAlarm
    pdo.o(.text.sendOnePDOevent) refers to flexcan_interrupt_transfer.o(.text.canSend) for canSend
    pdo.o(.ARM.exidx.text.sendOnePDOevent) refers to pdo.o(.text.sendOnePDOevent) for [Anonymous Symbol]
    pdo.o(.text.PDOInhibitTimerAlarm) refers to pdo.o(.text.sendOnePDOevent) for sendOnePDOevent
    pdo.o(.ARM.exidx.text.PDOInhibitTimerAlarm) refers to pdo.o(.text.PDOInhibitTimerAlarm) for [Anonymous Symbol]
    pdo.o(.ARM.exidx.text._RxPDO_EventTimers_Handler) refers to pdo.o(.text._RxPDO_EventTimers_Handler) for [Anonymous Symbol]
    pdo.o(.text.TPDO_Communication_Parameter_Callback) refers to timer.o(.text.DelAlarm) for DelAlarm
    pdo.o(.text.TPDO_Communication_Parameter_Callback) refers to pdo.o(.text.sendOnePDOevent) for sendOnePDOevent
    pdo.o(.ARM.exidx.text.TPDO_Communication_Parameter_Callback) refers to pdo.o(.text.TPDO_Communication_Parameter_Callback) for [Anonymous Symbol]
    pdo.o(.text.PDOInit) refers to pdo.o(.text.TPDO_Communication_Parameter_Callback) for TPDO_Communication_Parameter_Callback
    pdo.o(.text.PDOInit) refers to pdo.o(.text._sendPDOevent) for _sendPDOevent
    pdo.o(.ARM.exidx.text.PDOInit) refers to pdo.o(.text.PDOInit) for [Anonymous Symbol]
    pdo.o(.text.PDOStop) refers to timer.o(.text.DelAlarm) for DelAlarm
    pdo.o(.ARM.exidx.text.PDOStop) refers to pdo.o(.text.PDOStop) for [Anonymous Symbol]
    pdo.o(.ARM.exidx.text.PDOEnable) refers to pdo.o(.text.PDOEnable) for [Anonymous Symbol]
    pdo.o(.ARM.exidx.text.PDODisable) refers to pdo.o(.text.PDODisable) for [Anonymous Symbol]
    sdo.o(.text.SDOTimeoutAlarm) refers to sdo.o(.text.sendSDOabort) for sendSDOabort
    sdo.o(.text.SDOTimeoutAlarm) refers to timer.o(.text.DelAlarm) for DelAlarm
    sdo.o(.ARM.exidx.text.SDOTimeoutAlarm) refers to sdo.o(.text.SDOTimeoutAlarm) for [Anonymous Symbol]
    sdo.o(.text.sendSDOabort) refers to flexcan_interrupt_transfer.o(.text.canSend) for canSend
    sdo.o(.ARM.exidx.text.sendSDOabort) refers to sdo.o(.text.sendSDOabort) for [Anonymous Symbol]
    sdo.o(.text.resetSDOline) refers to timer.o(.text.DelAlarm) for DelAlarm
    sdo.o(.ARM.exidx.text.resetSDOline) refers to sdo.o(.text.resetSDOline) for [Anonymous Symbol]
    sdo.o(.text.resetSDO) refers to timer.o(.text.DelAlarm) for DelAlarm
    sdo.o(.ARM.exidx.text.resetSDO) refers to sdo.o(.text.resetSDO) for [Anonymous Symbol]
    sdo.o(.text.SDOlineToObjdict) refers to objacces.o(.text._setODentry) for _setODentry
    sdo.o(.ARM.exidx.text.SDOlineToObjdict) refers to sdo.o(.text.SDOlineToObjdict) for [Anonymous Symbol]
    sdo.o(.text.objdictToSDOline) refers to objacces.o(.text._getODentry) for _getODentry
    sdo.o(.ARM.exidx.text.objdictToSDOline) refers to sdo.o(.text.objdictToSDOline) for [Anonymous Symbol]
    sdo.o(.ARM.exidx.text.lineToSDO) refers to sdo.o(.text.lineToSDO) for [Anonymous Symbol]
    sdo.o(.ARM.exidx.text.SDOtoLine) refers to sdo.o(.text.SDOtoLine) for [Anonymous Symbol]
    sdo.o(.text.failedSDO) refers to timer.o(.text.DelAlarm) for DelAlarm
    sdo.o(.text.failedSDO) refers to sdo.o(.text.sendSDOabort) for sendSDOabort
    sdo.o(.ARM.exidx.text.failedSDO) refers to sdo.o(.text.failedSDO) for [Anonymous Symbol]
    sdo.o(.ARM.exidx.text.getSDOlineOnUse) refers to sdo.o(.text.getSDOlineOnUse) for [Anonymous Symbol]
    sdo.o(.text.initSDOline) refers to sdo.o(.text.SDOTimeoutAlarm) for SDOTimeoutAlarm
    sdo.o(.text.initSDOline) refers to timer.o(.text.SetAlarm) for SetAlarm
    sdo.o(.text.initSDOline) refers to timer.o(.text.DelAlarm) for DelAlarm
    sdo.o(.ARM.exidx.text.initSDOline) refers to sdo.o(.text.initSDOline) for [Anonymous Symbol]
    sdo.o(.ARM.exidx.text.getSDOfreeLine) refers to sdo.o(.text.getSDOfreeLine) for [Anonymous Symbol]
    sdo.o(.ARM.exidx.text.getSDOlineToClose) refers to sdo.o(.text.getSDOlineToClose) for [Anonymous Symbol]
    sdo.o(.text.closeSDOtransfer) refers to timer.o(.text.DelAlarm) for DelAlarm
    sdo.o(.ARM.exidx.text.closeSDOtransfer) refers to sdo.o(.text.closeSDOtransfer) for [Anonymous Symbol]
    sdo.o(.ARM.exidx.text.GetSDOClientFromNodeId) refers to sdo.o(.text.GetSDOClientFromNodeId) for [Anonymous Symbol]
    sdo.o(.ARM.exidx.text.getSDOlineRestBytes) refers to sdo.o(.text.getSDOlineRestBytes) for [Anonymous Symbol]
    sdo.o(.ARM.exidx.text.setSDOlineRestBytes) refers to sdo.o(.text.setSDOlineRestBytes) for [Anonymous Symbol]
    sdo.o(.text.sendSDO) refers to flexcan_interrupt_transfer.o(.text.canSend) for canSend
    sdo.o(.ARM.exidx.text.sendSDO) refers to sdo.o(.text.sendSDO) for [Anonymous Symbol]
    sdo.o(.text.proceedSDO) refers to timer.o(.text.DelAlarm) for DelAlarm
    sdo.o(.text.proceedSDO) refers to sdo.o(.text.SDOTimeoutAlarm) for SDOTimeoutAlarm
    sdo.o(.text.proceedSDO) refers to timer.o(.text.SetAlarm) for SetAlarm
    sdo.o(.text.proceedSDO) refers to sdo.o(.text.sendSDO) for sendSDO
    sdo.o(.text.proceedSDO) refers to sdo.o(.text.SDOlineToObjdict) for SDOlineToObjdict
    sdo.o(.text.proceedSDO) refers to sdo.o(.text.resetSDOline) for resetSDOline
    sdo.o(.text.proceedSDO) refers to sdo.o(.text.initSDOline) for initSDOline
    sdo.o(.text.proceedSDO) refers to sdo.o(.text.objdictToSDOline) for objdictToSDOline
    sdo.o(.text.proceedSDO) refers to sdo.o(.text.failedSDO) for failedSDO
    sdo.o(.text.proceedSDO) refers to sdo.o(.text.lineToSDO) for lineToSDO
    sdo.o(.text.proceedSDO) refers to memcpy.o(.text) for memcpy
    sdo.o(.ARM.exidx.text.proceedSDO) refers to sdo.o(.text.proceedSDO) for [Anonymous Symbol]
    sdo.o(.text.resetClientSDOLineFromNodeId) refers to timer.o(.text.DelAlarm) for DelAlarm
    sdo.o(.ARM.exidx.text.resetClientSDOLineFromNodeId) refers to sdo.o(.text.resetClientSDOLineFromNodeId) for [Anonymous Symbol]
    sdo.o(.text._writeNetworkDict) refers to sdo.o(.text.SDOTimeoutAlarm) for SDOTimeoutAlarm
    sdo.o(.text._writeNetworkDict) refers to timer.o(.text.SetAlarm) for SetAlarm
    sdo.o(.text._writeNetworkDict) refers to flexcan_interrupt_transfer.o(.text.canSend) for canSend
    sdo.o(.text._writeNetworkDict) refers to timer.o(.text.DelAlarm) for DelAlarm
    sdo.o(.ARM.exidx.text._writeNetworkDict) refers to sdo.o(.text._writeNetworkDict) for [Anonymous Symbol]
    sdo.o(.text.writeNetworkDict) refers to sdo.o(.text._writeNetworkDict) for _writeNetworkDict
    sdo.o(.ARM.exidx.text.writeNetworkDict) refers to sdo.o(.text.writeNetworkDict) for [Anonymous Symbol]
    sdo.o(.text.writeNetworkDictCallBack) refers to sdo.o(.text._writeNetworkDict) for _writeNetworkDict
    sdo.o(.ARM.exidx.text.writeNetworkDictCallBack) refers to sdo.o(.text.writeNetworkDictCallBack) for [Anonymous Symbol]
    sdo.o(.text.writeNetworkDictCallBackAI) refers to sdo.o(.text._writeNetworkDict) for _writeNetworkDict
    sdo.o(.ARM.exidx.text.writeNetworkDictCallBackAI) refers to sdo.o(.text.writeNetworkDictCallBackAI) for [Anonymous Symbol]
    sdo.o(.text._readNetworkDict) refers to sdo.o(.text.SDOTimeoutAlarm) for SDOTimeoutAlarm
    sdo.o(.text._readNetworkDict) refers to timer.o(.text.SetAlarm) for SetAlarm
    sdo.o(.text._readNetworkDict) refers to flexcan_interrupt_transfer.o(.text.canSend) for canSend
    sdo.o(.text._readNetworkDict) refers to timer.o(.text.DelAlarm) for DelAlarm
    sdo.o(.ARM.exidx.text._readNetworkDict) refers to sdo.o(.text._readNetworkDict) for [Anonymous Symbol]
    sdo.o(.text.readNetworkDict) refers to sdo.o(.text._readNetworkDict) for _readNetworkDict
    sdo.o(.ARM.exidx.text.readNetworkDict) refers to sdo.o(.text.readNetworkDict) for [Anonymous Symbol]
    sdo.o(.text.readNetworkDictCallback) refers to sdo.o(.text._readNetworkDict) for _readNetworkDict
    sdo.o(.ARM.exidx.text.readNetworkDictCallback) refers to sdo.o(.text.readNetworkDictCallback) for [Anonymous Symbol]
    sdo.o(.text.readNetworkDictCallbackAI) refers to sdo.o(.text._readNetworkDict) for _readNetworkDict
    sdo.o(.ARM.exidx.text.readNetworkDictCallbackAI) refers to sdo.o(.text.readNetworkDictCallbackAI) for [Anonymous Symbol]
    sdo.o(.text.getReadResultNetworkDict) refers to timer.o(.text.DelAlarm) for DelAlarm
    sdo.o(.ARM.exidx.text.getReadResultNetworkDict) refers to sdo.o(.text.getReadResultNetworkDict) for [Anonymous Symbol]
    sdo.o(.text.getWriteResultNetworkDict) refers to timer.o(.text.DelAlarm) for DelAlarm
    sdo.o(.ARM.exidx.text.getWriteResultNetworkDict) refers to sdo.o(.text.getWriteResultNetworkDict) for [Anonymous Symbol]
    states.o(.ARM.exidx.text.getState) refers to states.o(.text.getState) for [Anonymous Symbol]
    states.o(.text.canDispatch) refers to pdo.o(.text.proceedPDO) for proceedPDO
    states.o(.text.canDispatch) refers to sdo.o(.text.proceedSDO) for proceedSDO
    states.o(.text.canDispatch) refers to lifegrd.o(.text.proceedNODE_GUARD) for proceedNODE_GUARD
    states.o(.text.canDispatch) refers to nmtslave.o(.text.proceedNMTstateChange) for proceedNMTstateChange
    states.o(.text.canDispatch) refers to sync.o(.text.proceedSYNC) for proceedSYNC
    states.o(.text.canDispatch) refers to emcy.o(.text.proceedEMCY) for proceedEMCY
    states.o(.ARM.exidx.text.canDispatch) refers to states.o(.text.canDispatch) for [Anonymous Symbol]
    states.o(.text.switchCommunicationState) refers to sdo.o(.text.resetSDO) for resetSDO
    states.o(.text.switchCommunicationState) refers to sync.o(.text.stopSYNC) for stopSYNC
    states.o(.text.switchCommunicationState) refers to sync.o(.text.startSYNC) for startSYNC
    states.o(.text.switchCommunicationState) refers to lifegrd.o(.text.lifeGuardStop) for lifeGuardStop
    states.o(.text.switchCommunicationState) refers to lifegrd.o(.text.lifeGuardInit) for lifeGuardInit
    states.o(.text.switchCommunicationState) refers to emcy.o(.text.emergencyStop) for emergencyStop
    states.o(.text.switchCommunicationState) refers to emcy.o(.text.emergencyInit) for emergencyInit
    states.o(.text.switchCommunicationState) refers to pdo.o(.text.PDOStop) for PDOStop
    states.o(.text.switchCommunicationState) refers to pdo.o(.text.PDOInit) for PDOInit
    states.o(.text.switchCommunicationState) refers to nmtslave.o(.text.slaveSendBootUp) for slaveSendBootUp
    states.o(.ARM.exidx.text.switchCommunicationState) refers to states.o(.text.switchCommunicationState) for [Anonymous Symbol]
    states.o(.text.setState) refers to states.o(.rodata..L__const.setState.newCommunicationState.3) for .L__const.setState.newCommunicationState.3
    states.o(.text.setState) refers to states.o(.rodata..L__const.setState.newCommunicationState.1) for .L__const.setState.newCommunicationState.1
    states.o(.text.setState) refers to states.o(.rodata..L__const.setState.newCommunicationState) for .L__const.setState.newCommunicationState
    states.o(.text.setState) refers to states.o(.text.switchCommunicationState) for switchCommunicationState
    states.o(.text.setState) refers to states.o(.rodata..L__const.setState.newCommunicationState.2) for .L__const.setState.newCommunicationState.2
    states.o(.ARM.exidx.text.setState) refers to states.o(.text.setState) for [Anonymous Symbol]
    states.o(.ARM.exidx.text.getNodeId) refers to states.o(.text.getNodeId) for [Anonymous Symbol]
    states.o(.ARM.exidx.text.setNodeId) refers to states.o(.text.setNodeId) for [Anonymous Symbol]
    states.o(.ARM.exidx.text._initialisation) refers to states.o(.text._initialisation) for [Anonymous Symbol]
    states.o(.text._preOperational) refers to nmtmaster.o(.text.masterSendNMTstateChange) for masterSendNMTstateChange
    states.o(.ARM.exidx.text._preOperational) refers to states.o(.text._preOperational) for [Anonymous Symbol]
    states.o(.ARM.exidx.text._operational) refers to states.o(.text._operational) for [Anonymous Symbol]
    states.o(.ARM.exidx.text._stopped) refers to states.o(.text._stopped) for [Anonymous Symbol]
    sync.o(.text.SyncAlarm) refers to flexcan_interrupt_transfer.o(.text.canSend) for canSend
    sync.o(.text.SyncAlarm) refers to pdo.o(.text._sendPDOevent) for _sendPDOevent
    sync.o(.ARM.exidx.text.SyncAlarm) refers to sync.o(.text.SyncAlarm) for [Anonymous Symbol]
    sync.o(.text.sendSYNC) refers to flexcan_interrupt_transfer.o(.text.canSend) for canSend
    sync.o(.text.sendSYNC) refers to pdo.o(.text._sendPDOevent) for _sendPDOevent
    sync.o(.ARM.exidx.text.sendSYNC) refers to sync.o(.text.sendSYNC) for [Anonymous Symbol]
    sync.o(.text.OnCOB_ID_SyncUpdate) refers to sync.o(.text.startSYNC) for startSYNC
    sync.o(.ARM.exidx.text.OnCOB_ID_SyncUpdate) refers to sync.o(.text.OnCOB_ID_SyncUpdate) for [Anonymous Symbol]
    sync.o(.text.startSYNC) refers to objacces.o(.text.RegisterSetODentryCallBack) for RegisterSetODentryCallBack
    sync.o(.text.startSYNC) refers to timer.o(.text.DelAlarm) for DelAlarm
    sync.o(.text.startSYNC) refers to sync.o(.text.OnCOB_ID_SyncUpdate) for OnCOB_ID_SyncUpdate
    sync.o(.text.startSYNC) refers to sync.o(.text.SyncAlarm) for SyncAlarm
    sync.o(.text.startSYNC) refers to timer.o(.text.SetAlarm) for SetAlarm
    sync.o(.ARM.exidx.text.startSYNC) refers to sync.o(.text.startSYNC) for [Anonymous Symbol]
    sync.o(.text.stopSYNC) refers to objacces.o(.text.RegisterSetODentryCallBack) for RegisterSetODentryCallBack
    sync.o(.text.stopSYNC) refers to timer.o(.text.DelAlarm) for DelAlarm
    sync.o(.ARM.exidx.text.stopSYNC) refers to sync.o(.text.stopSYNC) for [Anonymous Symbol]
    sync.o(.text.sendSYNCMessage) refers to flexcan_interrupt_transfer.o(.text.canSend) for canSend
    sync.o(.ARM.exidx.text.sendSYNCMessage) refers to sync.o(.text.sendSYNCMessage) for [Anonymous Symbol]
    sync.o(.text.proceedSYNC) refers to pdo.o(.text._sendPDOevent) for _sendPDOevent
    sync.o(.ARM.exidx.text.proceedSYNC) refers to sync.o(.text.proceedSYNC) for [Anonymous Symbol]
    sync.o(.ARM.exidx.text._post_sync) refers to sync.o(.text._post_sync) for [Anonymous Symbol]
    sync.o(.ARM.exidx.text._post_TPDO) refers to sync.o(.text._post_TPDO) for [Anonymous Symbol]
    timer.o(.text.SetAlarm) refers to timer.o(.data.last_timer_raw) for last_timer_raw
    timer.o(.text.SetAlarm) refers to timer.o(.bss.timers) for timers
    timer.o(.text.SetAlarm) refers to flexcan_interrupt_transfer.o(.text.getElapsedTime) for getElapsedTime
    timer.o(.text.SetAlarm) refers to timer.o(.data.total_sleep_time) for total_sleep_time
    timer.o(.text.SetAlarm) refers to flexcan_interrupt_transfer.o(.text.setTimer) for setTimer
    timer.o(.ARM.exidx.text.SetAlarm) refers to timer.o(.text.SetAlarm) for [Anonymous Symbol]
    timer.o(.text.DelAlarm) refers to timer.o(.data.last_timer_raw) for last_timer_raw
    timer.o(.text.DelAlarm) refers to timer.o(.bss.timers) for timers
    timer.o(.ARM.exidx.text.DelAlarm) refers to timer.o(.text.DelAlarm) for [Anonymous Symbol]
    timer.o(.text.TimeDispatch) refers to flexcan_interrupt_transfer.o(.text.getElapsedTime) for getElapsedTime
    timer.o(.text.TimeDispatch) refers to timer.o(.data.last_timer_raw) for last_timer_raw
    timer.o(.text.TimeDispatch) refers to timer.o(.data.total_sleep_time) for total_sleep_time
    timer.o(.text.TimeDispatch) refers to timer.o(.bss.timers) for timers
    timer.o(.text.TimeDispatch) refers to flexcan_interrupt_transfer.o(.text.setTimer) for setTimer
    timer.o(.ARM.exidx.text.TimeDispatch) refers to timer.o(.text.TimeDispatch) for [Anonymous Symbol]
    slave.o(.ARM.exidx.text.Slave_valueRangeTest) refers to slave.o(.text.Slave_valueRangeTest) for [Anonymous Symbol]
    slave.o(.text.Slave_scanIndexOD) refers to slave.o(.rodata.Slave_objdict) for Slave_objdict
    slave.o(.ARM.exidx.text.Slave_scanIndexOD) refers to slave.o(.text.Slave_scanIndexOD) for [Anonymous Symbol]
    slave.o(.data.Slave_Index1000) refers to slave.o(.bss.Slave_obj1000) for Slave_obj1000
    slave.o(.data.Slave_Index1001) refers to slave.o(.bss.Slave_obj1001) for Slave_obj1001
    slave.o(.data.Slave_Index1003) refers to slave.o(.bss.Slave_highestSubIndex_obj1003) for Slave_highestSubIndex_obj1003
    slave.o(.data.Slave_Index1003) refers to slave.o(.bss.Slave_obj1003) for Slave_obj1003
    slave.o(.data.Slave_Index1017) refers to slave.o(.data.Slave_obj1017) for Slave_obj1017
    slave.o(.data.Slave_Index1018) refers to slave.o(.data.Slave_highestSubIndex_obj1018) for Slave_highestSubIndex_obj1018
    slave.o(.data.Slave_Index1018) refers to slave.o(.bss.Slave_obj1018_Vendor_ID) for Slave_obj1018_Vendor_ID
    slave.o(.data.Slave_Index1018) refers to slave.o(.bss.Slave_obj1018_Product_Code) for Slave_obj1018_Product_Code
    slave.o(.data.Slave_Index1018) refers to slave.o(.bss.Slave_obj1018_Revision_Number) for Slave_obj1018_Revision_Number
    slave.o(.data.Slave_Index1018) refers to slave.o(.bss.Slave_obj1018_Serial_Number) for Slave_obj1018_Serial_Number
    slave.o(.data.Slave_Index1200) refers to slave.o(.data.Slave_highestSubIndex_obj1200) for Slave_highestSubIndex_obj1200
    slave.o(.data.Slave_Index1200) refers to slave.o(.data.Slave_obj1200_COB_ID_Client_to_Server_Receive_SDO) for Slave_obj1200_COB_ID_Client_to_Server_Receive_SDO
    slave.o(.data.Slave_Index1200) refers to slave.o(.data.Slave_obj1200_COB_ID_Server_to_Client_Transmit_SDO) for Slave_obj1200_COB_ID_Server_to_Client_Transmit_SDO
    slave.o(.data.Slave_Index1400) refers to slave.o(.data.Slave_highestSubIndex_obj1400) for Slave_highestSubIndex_obj1400
    slave.o(.data.Slave_Index1400) refers to slave.o(.data.Slave_obj1400_COB_ID_used_by_PDO) for Slave_obj1400_COB_ID_used_by_PDO
    slave.o(.data.Slave_Index1400) refers to slave.o(.bss.Slave_obj1400_Transmission_Type) for Slave_obj1400_Transmission_Type
    slave.o(.data.Slave_Index1400) refers to slave.o(.bss.Slave_obj1400_Inhibit_Time) for Slave_obj1400_Inhibit_Time
    slave.o(.data.Slave_Index1400) refers to slave.o(.bss.Slave_obj1400_Compatibility_Entry) for Slave_obj1400_Compatibility_Entry
    slave.o(.data.Slave_Index1400) refers to slave.o(.bss.Slave_obj1400_Event_Timer) for Slave_obj1400_Event_Timer
    slave.o(.data.Slave_Index1400) refers to slave.o(.bss.Slave_obj1400_SYNC_start_value) for Slave_obj1400_SYNC_start_value
    slave.o(.data.Slave_Index1401) refers to slave.o(.data.Slave_highestSubIndex_obj1401) for Slave_highestSubIndex_obj1401
    slave.o(.data.Slave_Index1401) refers to slave.o(.data.Slave_obj1401_COB_ID_used_by_PDO) for Slave_obj1401_COB_ID_used_by_PDO
    slave.o(.data.Slave_Index1401) refers to slave.o(.bss.Slave_obj1401_Transmission_Type) for Slave_obj1401_Transmission_Type
    slave.o(.data.Slave_Index1401) refers to slave.o(.bss.Slave_obj1401_Inhibit_Time) for Slave_obj1401_Inhibit_Time
    slave.o(.data.Slave_Index1401) refers to slave.o(.bss.Slave_obj1401_Compatibility_Entry) for Slave_obj1401_Compatibility_Entry
    slave.o(.data.Slave_Index1401) refers to slave.o(.bss.Slave_obj1401_Event_Timer) for Slave_obj1401_Event_Timer
    slave.o(.data.Slave_Index1401) refers to slave.o(.bss.Slave_obj1401_SYNC_start_value) for Slave_obj1401_SYNC_start_value
    slave.o(.data.Slave_Index1402) refers to slave.o(.data.Slave_highestSubIndex_obj1402) for Slave_highestSubIndex_obj1402
    slave.o(.data.Slave_Index1402) refers to slave.o(.data.Slave_obj1402_COB_ID_used_by_PDO) for Slave_obj1402_COB_ID_used_by_PDO
    slave.o(.data.Slave_Index1402) refers to slave.o(.bss.Slave_obj1402_Transmission_Type) for Slave_obj1402_Transmission_Type
    slave.o(.data.Slave_Index1402) refers to slave.o(.bss.Slave_obj1402_Inhibit_Time) for Slave_obj1402_Inhibit_Time
    slave.o(.data.Slave_Index1402) refers to slave.o(.bss.Slave_obj1402_Compatibility_Entry) for Slave_obj1402_Compatibility_Entry
    slave.o(.data.Slave_Index1402) refers to slave.o(.bss.Slave_obj1402_Event_Timer) for Slave_obj1402_Event_Timer
    slave.o(.data.Slave_Index1402) refers to slave.o(.bss.Slave_obj1402_SYNC_start_value) for Slave_obj1402_SYNC_start_value
    slave.o(.data.Slave_Index1403) refers to slave.o(.data.Slave_highestSubIndex_obj1403) for Slave_highestSubIndex_obj1403
    slave.o(.data.Slave_Index1403) refers to slave.o(.data.Slave_obj1403_COB_ID_used_by_PDO) for Slave_obj1403_COB_ID_used_by_PDO
    slave.o(.data.Slave_Index1403) refers to slave.o(.bss.Slave_obj1403_Transmission_Type) for Slave_obj1403_Transmission_Type
    slave.o(.data.Slave_Index1403) refers to slave.o(.bss.Slave_obj1403_Inhibit_Time) for Slave_obj1403_Inhibit_Time
    slave.o(.data.Slave_Index1403) refers to slave.o(.bss.Slave_obj1403_Compatibility_Entry) for Slave_obj1403_Compatibility_Entry
    slave.o(.data.Slave_Index1403) refers to slave.o(.bss.Slave_obj1403_Event_Timer) for Slave_obj1403_Event_Timer
    slave.o(.data.Slave_Index1403) refers to slave.o(.bss.Slave_obj1403_SYNC_start_value) for Slave_obj1403_SYNC_start_value
    slave.o(.data.Slave_Index1600) refers to slave.o(.data.Slave_highestSubIndex_obj1600) for Slave_highestSubIndex_obj1600
    slave.o(.data.Slave_Index1600) refers to slave.o(.bss.Slave_obj1600) for Slave_obj1600
    slave.o(.data.Slave_Index1601) refers to slave.o(.data.Slave_highestSubIndex_obj1601) for Slave_highestSubIndex_obj1601
    slave.o(.data.Slave_Index1601) refers to slave.o(.bss.Slave_obj1601) for Slave_obj1601
    slave.o(.data.Slave_Index1602) refers to slave.o(.data.Slave_highestSubIndex_obj1602) for Slave_highestSubIndex_obj1602
    slave.o(.data.Slave_Index1602) refers to slave.o(.bss.Slave_obj1602) for Slave_obj1602
    slave.o(.data.Slave_Index1603) refers to slave.o(.data.Slave_highestSubIndex_obj1603) for Slave_highestSubIndex_obj1603
    slave.o(.data.Slave_Index1603) refers to slave.o(.bss.Slave_obj1603) for Slave_obj1603
    slave.o(.data.Slave_Index1800) refers to slave.o(.data.Slave_highestSubIndex_obj1800) for Slave_highestSubIndex_obj1800
    slave.o(.data.Slave_Index1800) refers to slave.o(.data.Slave_obj1800_COB_ID_used_by_PDO) for Slave_obj1800_COB_ID_used_by_PDO
    slave.o(.data.Slave_Index1800) refers to slave.o(.data.Slave_obj1800_Transmission_Type) for Slave_obj1800_Transmission_Type
    slave.o(.data.Slave_Index1800) refers to slave.o(.data.Slave_obj1800_Inhibit_Time) for Slave_obj1800_Inhibit_Time
    slave.o(.data.Slave_Index1800) refers to slave.o(.bss.Slave_obj1800_Compatibility_Entry) for Slave_obj1800_Compatibility_Entry
    slave.o(.data.Slave_Index1800) refers to slave.o(.data.Slave_obj1800_Event_Timer) for Slave_obj1800_Event_Timer
    slave.o(.data.Slave_Index1800) refers to slave.o(.bss.Slave_obj1800_SYNC_start_value) for Slave_obj1800_SYNC_start_value
    slave.o(.data.Slave_Index1801) refers to slave.o(.data.Slave_highestSubIndex_obj1801) for Slave_highestSubIndex_obj1801
    slave.o(.data.Slave_Index1801) refers to slave.o(.data.Slave_obj1801_COB_ID_used_by_PDO) for Slave_obj1801_COB_ID_used_by_PDO
    slave.o(.data.Slave_Index1801) refers to slave.o(.bss.Slave_obj1801_Transmission_Type) for Slave_obj1801_Transmission_Type
    slave.o(.data.Slave_Index1801) refers to slave.o(.bss.Slave_obj1801_Inhibit_Time) for Slave_obj1801_Inhibit_Time
    slave.o(.data.Slave_Index1801) refers to slave.o(.bss.Slave_obj1801_Compatibility_Entry) for Slave_obj1801_Compatibility_Entry
    slave.o(.data.Slave_Index1801) refers to slave.o(.bss.Slave_obj1801_Event_Timer) for Slave_obj1801_Event_Timer
    slave.o(.data.Slave_Index1801) refers to slave.o(.bss.Slave_obj1801_SYNC_start_value) for Slave_obj1801_SYNC_start_value
    slave.o(.data.Slave_Index1802) refers to slave.o(.data.Slave_highestSubIndex_obj1802) for Slave_highestSubIndex_obj1802
    slave.o(.data.Slave_Index1802) refers to slave.o(.data.Slave_obj1802_COB_ID_used_by_PDO) for Slave_obj1802_COB_ID_used_by_PDO
    slave.o(.data.Slave_Index1802) refers to slave.o(.bss.Slave_obj1802_Transmission_Type) for Slave_obj1802_Transmission_Type
    slave.o(.data.Slave_Index1802) refers to slave.o(.bss.Slave_obj1802_Inhibit_Time) for Slave_obj1802_Inhibit_Time
    slave.o(.data.Slave_Index1802) refers to slave.o(.bss.Slave_obj1802_Compatibility_Entry) for Slave_obj1802_Compatibility_Entry
    slave.o(.data.Slave_Index1802) refers to slave.o(.bss.Slave_obj1802_Event_Timer) for Slave_obj1802_Event_Timer
    slave.o(.data.Slave_Index1802) refers to slave.o(.bss.Slave_obj1802_SYNC_start_value) for Slave_obj1802_SYNC_start_value
    slave.o(.data.Slave_Index1803) refers to slave.o(.data.Slave_highestSubIndex_obj1803) for Slave_highestSubIndex_obj1803
    slave.o(.data.Slave_Index1803) refers to slave.o(.data.Slave_obj1803_COB_ID_used_by_PDO) for Slave_obj1803_COB_ID_used_by_PDO
    slave.o(.data.Slave_Index1803) refers to slave.o(.bss.Slave_obj1803_Transmission_Type) for Slave_obj1803_Transmission_Type
    slave.o(.data.Slave_Index1803) refers to slave.o(.bss.Slave_obj1803_Inhibit_Time) for Slave_obj1803_Inhibit_Time
    slave.o(.data.Slave_Index1803) refers to slave.o(.bss.Slave_obj1803_Compatibility_Entry) for Slave_obj1803_Compatibility_Entry
    slave.o(.data.Slave_Index1803) refers to slave.o(.bss.Slave_obj1803_Event_Timer) for Slave_obj1803_Event_Timer
    slave.o(.data.Slave_Index1803) refers to slave.o(.bss.Slave_obj1803_SYNC_start_value) for Slave_obj1803_SYNC_start_value
    slave.o(.data.Slave_Index1A00) refers to slave.o(.data.Slave_highestSubIndex_obj1A00) for Slave_highestSubIndex_obj1A00
    slave.o(.data.Slave_Index1A00) refers to slave.o(.data.Slave_obj1A00) for Slave_obj1A00
    slave.o(.data.Slave_Index1A01) refers to slave.o(.data.Slave_highestSubIndex_obj1A01) for Slave_highestSubIndex_obj1A01
    slave.o(.data.Slave_Index1A01) refers to slave.o(.bss.Slave_obj1A01) for Slave_obj1A01
    slave.o(.data.Slave_Index1A02) refers to slave.o(.data.Slave_highestSubIndex_obj1A02) for Slave_highestSubIndex_obj1A02
    slave.o(.data.Slave_Index1A02) refers to slave.o(.bss.Slave_obj1A02) for Slave_obj1A02
    slave.o(.data.Slave_Index1A03) refers to slave.o(.data.Slave_highestSubIndex_obj1A03) for Slave_highestSubIndex_obj1A03
    slave.o(.data.Slave_Index1A03) refers to slave.o(.bss.Slave_obj1A03) for Slave_obj1A03
    slave.o(.data.Slave_Index2000) refers to slave.o(.data.ZONE_ONE) for ZONE_ONE
    slave.o(.data.Slave_Index2001) refers to slave.o(.data.ZONE_TWO) for ZONE_TWO
    slave.o(.data.Slave_Index2002) refers to slave.o(.data.ZONE_THREE) for ZONE_THREE
    slave.o(.rodata.Slave_objdict) refers to slave.o(.data.Slave_Index1000) for Slave_Index1000
    slave.o(.rodata.Slave_objdict) refers to slave.o(.data.Slave_Index1001) for Slave_Index1001
    slave.o(.rodata.Slave_objdict) refers to slave.o(.data.Slave_Index1017) for Slave_Index1017
    slave.o(.rodata.Slave_objdict) refers to slave.o(.data.Slave_Index1018) for Slave_Index1018
    slave.o(.rodata.Slave_objdict) refers to slave.o(.data.Slave_Index1200) for Slave_Index1200
    slave.o(.rodata.Slave_objdict) refers to slave.o(.data.Slave_Index1400) for Slave_Index1400
    slave.o(.rodata.Slave_objdict) refers to slave.o(.data.Slave_Index1401) for Slave_Index1401
    slave.o(.rodata.Slave_objdict) refers to slave.o(.data.Slave_Index1402) for Slave_Index1402
    slave.o(.rodata.Slave_objdict) refers to slave.o(.data.Slave_Index1403) for Slave_Index1403
    slave.o(.rodata.Slave_objdict) refers to slave.o(.data.Slave_Index1600) for Slave_Index1600
    slave.o(.rodata.Slave_objdict) refers to slave.o(.data.Slave_Index1601) for Slave_Index1601
    slave.o(.rodata.Slave_objdict) refers to slave.o(.data.Slave_Index1602) for Slave_Index1602
    slave.o(.rodata.Slave_objdict) refers to slave.o(.data.Slave_Index1603) for Slave_Index1603
    slave.o(.rodata.Slave_objdict) refers to slave.o(.data.Slave_Index1800) for Slave_Index1800
    slave.o(.rodata.Slave_objdict) refers to slave.o(.data.Slave_Index1801) for Slave_Index1801
    slave.o(.rodata.Slave_objdict) refers to slave.o(.data.Slave_Index1802) for Slave_Index1802
    slave.o(.rodata.Slave_objdict) refers to slave.o(.data.Slave_Index1803) for Slave_Index1803
    slave.o(.rodata.Slave_objdict) refers to slave.o(.data.Slave_Index1A00) for Slave_Index1A00
    slave.o(.rodata.Slave_objdict) refers to slave.o(.data.Slave_Index1A01) for Slave_Index1A01
    slave.o(.rodata.Slave_objdict) refers to slave.o(.data.Slave_Index1A02) for Slave_Index1A02
    slave.o(.rodata.Slave_objdict) refers to slave.o(.data.Slave_Index1A03) for Slave_Index1A03
    slave.o(.rodata.Slave_objdict) refers to slave.o(.data.Slave_Index2000) for Slave_Index2000
    slave.o(.rodata.Slave_objdict) refers to slave.o(.data.Slave_Index2001) for Slave_Index2001
    slave.o(.rodata.Slave_objdict) refers to slave.o(.data.Slave_Index2002) for Slave_Index2002
    slave.o(.data.Slave_Data) refers to slave.o(.bss.Slave_bDeviceNodeId) for Slave_bDeviceNodeId
    slave.o(.data.Slave_Data) refers to slave.o(.rodata.Slave_objdict) for Slave_objdict
    slave.o(.data.Slave_Data) refers to slave.o(.data.Slave_PDO_status) for Slave_PDO_status
    slave.o(.data.Slave_Data) refers to pdo.o(.text._RxPDO_EventTimers_Handler) for _RxPDO_EventTimers_Handler
    slave.o(.data.Slave_Data) refers to slave.o(.rodata.Slave_firstIndex) for Slave_firstIndex
    slave.o(.data.Slave_Data) refers to slave.o(.rodata.Slave_lastIndex) for Slave_lastIndex
    slave.o(.data.Slave_Data) refers to slave.o(.rodata.Slave_ObjdictSize) for Slave_ObjdictSize
    slave.o(.data.Slave_Data) refers to slave.o(.rodata.Slave_iam_a_slave) for Slave_iam_a_slave
    slave.o(.data.Slave_Data) refers to slave.o(.text.Slave_valueRangeTest) for Slave_valueRangeTest
    slave.o(.data.Slave_Data) refers to states.o(.text._initialisation) for _initialisation
    slave.o(.data.Slave_Data) refers to states.o(.text._preOperational) for _preOperational
    slave.o(.data.Slave_Data) refers to states.o(.text._operational) for _operational
    slave.o(.data.Slave_Data) refers to states.o(.text._stopped) for _stopped
    slave.o(.data.Slave_Data) refers to slave.o(.bss.Slave_highestSubIndex_obj1016) for Slave_highestSubIndex_obj1016
    slave.o(.data.Slave_Data) refers to slave.o(.bss.Slave_obj1016) for Slave_obj1016
    slave.o(.data.Slave_Data) refers to slave.o(.bss.Slave_heartBeatTimers) for Slave_heartBeatTimers
    slave.o(.data.Slave_Data) refers to slave.o(.data.Slave_obj1017) for Slave_obj1017
    slave.o(.data.Slave_Data) refers to lifegrd.o(.text._heartbeatError) for _heartbeatError
    slave.o(.data.Slave_Data) refers to lifegrd.o(.text._nodeguardError) for _nodeguardError
    slave.o(.data.Slave_Data) refers to slave.o(.bss.Slave_obj100C) for Slave_obj100C
    slave.o(.data.Slave_Data) refers to slave.o(.bss.Slave_obj100D) for Slave_obj100D
    slave.o(.data.Slave_Data) refers to slave.o(.bss.Slave_obj1005) for Slave_obj1005
    slave.o(.data.Slave_Data) refers to slave.o(.bss.Slave_obj1006) for Slave_obj1006
    slave.o(.data.Slave_Data) refers to sync.o(.text._post_sync) for _post_sync
    slave.o(.data.Slave_Data) refers to sync.o(.text._post_TPDO) for _post_TPDO
    slave.o(.data.Slave_Data) refers to lifegrd.o(.text._post_SlaveBootup) for _post_SlaveBootup
    slave.o(.data.Slave_Data) refers to lifegrd.o(.text._post_SlaveStateChange) for _post_SlaveStateChange
    slave.o(.data.Slave_Data) refers to slave.o(.text.Slave_scanIndexOD) for Slave_scanIndexOD
    slave.o(.data.Slave_Data) refers to objacces.o(.text._storeODSubIndex) for _storeODSubIndex
    slave.o(.data.Slave_Data) refers to slave.o(.bss.Slave_highestSubIndex_obj1003) for Slave_highestSubIndex_obj1003
    slave.o(.data.Slave_Data) refers to slave.o(.bss.Slave_obj1003) for Slave_obj1003
    slave.o(.data.Slave_Data) refers to slave.o(.bss.Slave_obj1001) for Slave_obj1001
    slave.o(.data.Slave_Data) refers to slave.o(.data.Slave_obj1014) for Slave_obj1014
    slave.o(.data.Slave_Data) refers to emcy.o(.text._post_emcy) for _post_emcy
    event_groups.o(.text.xEventGroupCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    event_groups.o(.text.xEventGroupCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    event_groups.o(.ARM.exidx.text.xEventGroupCreate) refers to event_groups.o(.text.xEventGroupCreate) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSync) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.ARM.exidx.text.xEventGroupSetBits) refers to event_groups.o(.text.xEventGroupSetBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupWaitBits) refers to event_groups.o(.text.xEventGroupWaitBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupClearBits) refers to event_groups.o(.text.xEventGroupClearBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBitsFromISR) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for vEventGroupClearBitsCallback
    event_groups.o(.text.xEventGroupClearBitsFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for xTimerPendFunctionCallFromISR
    event_groups.o(.ARM.exidx.text.xEventGroupClearBitsFromISR) refers to event_groups.o(.text.xEventGroupClearBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupClearBitsCallback) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.vEventGroupClearBitsCallback) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.vEventGroupDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    event_groups.o(.ARM.exidx.text.vEventGroupDelete) refers to event_groups.o(.text.vEventGroupDelete) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBitsFromISR) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for vEventGroupSetBitsCallback
    event_groups.o(.text.xEventGroupSetBitsFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for xTimerPendFunctionCallFromISR
    event_groups.o(.ARM.exidx.text.xEventGroupSetBitsFromISR) refers to event_groups.o(.text.xEventGroupSetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber) refers to event_groups.o(.text.uxEventGroupGetNumber) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.vEventGroupSetNumber) refers to event_groups.o(.text.vEventGroupSetNumber) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericCreate) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueCreateMutex) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueCreateMutex) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueCreateMutex) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to memcpy.o(.text) for memcpy
    queue.o(.text.prvCopyDataToQueue) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to memcpy.o(.text) for memcpy
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to memcpy.o(.text) for memcpy
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueReceiveFromISR) refers to memcpy.o(.text) for memcpy
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueuePeekFromISR) refers to memcpy.o(.text) for memcpy
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to queue.o(.bss.xQueueRegistry) for xQueueRegistry
    queue.o(.text.vQueueDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.text.vQueueUnregisterQueue) refers to queue.o(.bss.xQueueRegistry) for xQueueRegistry
    queue.o(.ARM.exidx.text.vQueueUnregisterQueue) refers to queue.o(.text.vQueueUnregisterQueue) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueAddToRegistry) refers to queue.o(.bss.xQueueRegistry) for xQueueRegistry
    queue.o(.ARM.exidx.text.vQueueAddToRegistry) refers to queue.o(.text.vQueueAddToRegistry) for [Anonymous Symbol]
    queue.o(.text.pcQueueGetName) refers to queue.o(.bss.xQueueRegistry) for xQueueRegistry
    queue.o(.ARM.exidx.text.pcQueueGetName) refers to queue.o(.text.pcQueueGetName) for [Anonymous Symbol]
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.vQueueWaitForMessageRestricted) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    stream_buffer.o(.text.xStreamBufferGenericCreate) refers to memset.o(.text) for memset
    stream_buffer.o(.ARM.exidx.text.xStreamBufferGenericCreate) refers to stream_buffer.o(.text.xStreamBufferGenericCreate) for [Anonymous Symbol]
    stream_buffer.o(.text.vStreamBufferDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    stream_buffer.o(.text.vStreamBufferDelete) refers to memset.o(.text) for memset
    stream_buffer.o(.ARM.exidx.text.vStreamBufferDelete) refers to stream_buffer.o(.text.vStreamBufferDelete) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.text.xStreamBufferReset) refers to memset.o(.text) for memset
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReset) refers to stream_buffer.o(.text.xStreamBufferReset) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSetTriggerLevel) refers to stream_buffer.o(.text.xStreamBufferSetTriggerLevel) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSpacesAvailable) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferBytesAvailable) refers to stream_buffer.o(.text.xStreamBufferBytesAvailable) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.vTaskSetTimeOutState) for vTaskSetTimeOutState
    stream_buffer.o(.text.xStreamBufferSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for xTaskGenericNotifyStateClear
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    stream_buffer.o(.text.xStreamBufferSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    stream_buffer.o(.text.xStreamBufferSend) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for prvWriteMessageToBuffer
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSend) refers to stream_buffer.o(.text.xStreamBufferSend) for [Anonymous Symbol]
    stream_buffer.o(.text.prvWriteMessageToBuffer) refers to memcpy.o(.text) for memcpy
    stream_buffer.o(.ARM.exidx.text.prvWriteMessageToBuffer) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for prvWriteMessageToBuffer
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.xStreamBufferSendFromISR) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for xTaskGenericNotifyStateClear
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    stream_buffer.o(.text.xStreamBufferReceive) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for prvReadMessageFromBuffer
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceive) refers to stream_buffer.o(.text.xStreamBufferReceive) for [Anonymous Symbol]
    stream_buffer.o(.text.prvReadMessageFromBuffer) refers to memcpy.o(.text) for memcpy
    stream_buffer.o(.ARM.exidx.text.prvReadMessageFromBuffer) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) refers to memcpy.o(.text) for memcpy
    stream_buffer.o(.ARM.exidx.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for prvReadMessageFromBuffer
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.xStreamBufferReceiveFromISR) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferIsEmpty) refers to stream_buffer.o(.text.xStreamBufferIsEmpty) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferIsFull) refers to stream_buffer.o(.text.xStreamBufferIsFull) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSendCompletedFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSendCompletedFromISR) refers to stream_buffer.o(.text.xStreamBufferSendCompletedFromISR) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveCompletedFromISR) refers to stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.uxStreamBufferGetStreamBufferNumber) refers to stream_buffer.o(.text.uxStreamBufferGetStreamBufferNumber) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.vStreamBufferSetStreamBufferNumber) refers to stream_buffer.o(.text.vStreamBufferSetStreamBufferNumber) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.ucStreamBufferGetStreamBufferType) refers to stream_buffer.o(.text.ucStreamBufferGetStreamBufferType) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to memset.o(.text) for memset
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.text.xTaskCreate) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.xTaskCreate) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.text.xTaskCreate) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskCreate) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskDelayUntil) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskDelayUntil) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelay) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.vTaskDelay) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    tasks.o(.text.vTaskStartScheduler) refers to timers.o(.text.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.uxTopUsedPriority) for uxTopUsedPriority
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvIdleTask) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvIdleTask) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvIdleTask) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvIdleTask) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetThreadLocalStoragePointer) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskSetThreadLocalStoragePointer) refers to tasks.o(.text.vTaskSetThreadLocalStoragePointer) for [Anonymous Symbol]
    tasks.o(.text.pvTaskGetThreadLocalStoragePointer) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskGetThreadLocalStoragePointer) refers to tasks.o(.text.pvTaskGetThreadLocalStoragePointer) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGetInfo) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.vTaskGetInfo) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.ulTaskGenericNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.text.vTaskGenericNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.text.ulTaskGenericNotifyValueClear) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvTimerTask) for prvTimerTask
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.text.xTimerCreateTimerTask) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    timers.o(.ARM.exidx.text.xTimerCreateTimerTask) refers to timers.o(.text.xTimerCreateTimerTask) for [Anonymous Symbol]
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList1) for xActiveTimerList1
    timers.o(.text.prvCheckForValidListAndQueue) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList2) for xActiveTimerList2
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    timers.o(.text.prvCheckForValidListAndQueue) refers to queue.o(.text.vQueueAddToRegistry) for vQueueAddToRegistry
    timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue) refers to timers.o(.text.prvCheckForValidListAndQueue) for [Anonymous Symbol]
    timers.o(.text.prvTimerTask) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvTimerTask) refers to timers.o(.bss.prvSampleTimeNow.xLastTime) for prvSampleTimeNow.xLastTime
    timers.o(.text.prvTimerTask) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvTimerTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvTimerTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(.text.prvTimerTask) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvTimerTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    timers.o(.text.prvTimerTask) refers to queue.o(.text.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(.text.prvTimerTask) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.text.prvTimerTask) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    timers.o(.text.prvTimerTask) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvTimerTask) refers to heap_4.o(.text.vPortFree) for vPortFree
    timers.o(.ARM.exidx.text.prvTimerTask) refers to timers.o(.text.prvTimerTask) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    timers.o(.text.xTimerCreate) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.xTimerCreate) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    timers.o(.ARM.exidx.text.xTimerCreate) refers to timers.o(.text.xTimerCreate) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommand) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerGenericCommand) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.ARM.exidx.text.xTimerGenericCommand) refers to timers.o(.text.xTimerGenericCommand) for [Anonymous Symbol]
    timers.o(.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetPeriod) refers to timers.o(.text.xTimerGetPeriod) for [Anonymous Symbol]
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetReloadMode) refers to timers.o(.text.vTimerSetReloadMode) for [Anonymous Symbol]
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.text.uxTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.uxTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.uxTimerGetReloadMode) refers to timers.o(.text.uxTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetExpiryTime) refers to timers.o(.text.xTimerGetExpiryTime) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.pcTimerGetName) refers to timers.o(.text.pcTimerGetName) for [Anonymous Symbol]
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerIsTimerActive) refers to timers.o(.text.xTimerIsTimerActive) for [Anonymous Symbol]
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.pvTimerGetTimerID) refers to timers.o(.text.pvTimerGetTimerID) for [Anonymous Symbol]
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetTimerID) refers to timers.o(.text.vTimerSetTimerID) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCall) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCall) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.ARM.exidx.text.xTimerPendFunctionCall) refers to timers.o(.text.xTimerPendFunctionCall) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.uxTimerGetTimerNumber) refers to timers.o(.text.uxTimerGetTimerNumber) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.vTimerSetTimerNumber) refers to timers.o(.text.vTimerSetTimerNumber) for [Anonymous Symbol]
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvProcessExpiredTimer) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvProcessExpiredTimer) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.ARM.exidx.text.prvProcessExpiredTimer) refers to timers.o(.text.prvProcessExpiredTimer) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.text.prvTaskExitError) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortEnableVFP) for vPortEnableVFP
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_mimxrt1176_cm7.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEnableVFP) refers to port.o(.text.vPortEnableVFP) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.text.vPortEndScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.SysTick_Handler) refers to port.o(.text.SysTick_Handler) for [Anonymous Symbol]
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.ARM.exidx.text.vPortValidateInterruptPriority) refers to port.o(.text.vPortValidateInterruptPriority) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.ucHeap) for ucHeap
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.pvPortMalloc) refers to heap_4.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.vPortFree) refers to heap_4.o(.text.vPortFree) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetFreeHeapSize) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_4.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_4.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_4.o(.text.pvPortCalloc) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    heap_4.o(.text.pvPortCalloc) refers to memset.o(.text) for memset
    heap_4.o(.ARM.exidx.text.pvPortCalloc) refers to heap_4.o(.text.pvPortCalloc) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    heap_4.o(.ARM.exidx.text.vPortGetHeapStats) refers to heap_4.o(.text.vPortGetHeapStats) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry4.o(.ARM.Collect$$$$00000003) for _main_stk
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    malloc2.o(i.__free$2region) refers to mvars.o(.data) for __microlib_freelist
    malloc2.o(i.__malloc$2region) refers to mvars.o(.data) for __microlib_freelist_initialised
    malloc2.o(i.__malloc$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocr2.o(i.__free$realloc$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocr2.o(i.__malloc$realloc$2region) refers to mallocr2.o(i.internal_alloc) for internal_alloc
    mallocr2.o(i.__malloc$realloc$2region) refers to mvars.o(.data) for __microlib_freelist_initialised
    mallocr2.o(i.__malloc$realloc$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocr2.o(i.__realloc$2region) refers to mallocr2.o(i.__free$realloc$2region) for __free$realloc$2region
    mallocr2.o(i.__realloc$2region) refers to mallocr2.o(i.internal_alloc) for internal_alloc
    mallocr2.o(i.__realloc$2region) refers to mallocr2.o(i.__malloc$realloc$2region) for __malloc$realloc$2region
    mallocr2.o(i.__realloc$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocr2.o(i.internal_alloc) refers to memcpy.o(.text) for __aeabi_memcpy
    mallocr2.o(i.internal_alloc) refers to mvars.o(.data) for __microlib_freelist
    malloca2.o(i.__aligned_malloc$2region) refers to mvars.o(.data) for __microlib_freelist_initialised
    malloca2.o(i.__aligned_malloc$2region) refers to mvars.o(.data) for __microlib_freelist
    malloca2.o(i.__free$memalign$2region) refers to mvars.o(.data) for __microlib_freelist
    malloca2.o(i.__malloc$memalign$2region) refers to malloca2.o(i.__aligned_malloc$2region) for __aligned_malloc$2region
    mallocra2.o(i.__aligned_malloc$realloc$2region) refers to mallocra2.o(i.internal_alloc) for internal_alloc
    mallocra2.o(i.__aligned_malloc$realloc$2region) refers to mvars.o(.data) for __microlib_freelist_initialised
    mallocra2.o(i.__aligned_malloc$realloc$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocra2.o(i.__free$realloc$memalign$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocra2.o(i.__malloc$realloc$memalign$2region) refers to mallocra2.o(i.__aligned_malloc$realloc$2region) for __aligned_malloc$realloc$2region
    mallocra2.o(i.__realloc$memalign$2region) refers to mallocra2.o(i.__free$realloc$memalign$2region) for __free$realloc$memalign$2region
    mallocra2.o(i.__realloc$memalign$2region) refers to mallocra2.o(i.internal_alloc) for internal_alloc
    mallocra2.o(i.__realloc$memalign$2region) refers to mallocra2.o(i.__malloc$realloc$memalign$2region) for __malloc$realloc$memalign$2region
    mallocra2.o(i.__realloc$memalign$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocra2.o(i.internal_alloc) refers to memcpy.o(.text) for __aeabi_memcpy
    mallocra2.o(i.internal_alloc) refers to mvars.o(.data) for __microlib_freelist
    errno.o(i.__aeabi_errno_addr) refers to errno.o(.data) for .data
    errno.o(i.__read_errno) refers to errno.o(.data) for .data
    errno.o(i.__set_errno) refers to errno.o(.data) for .data
    strtoul.o(.text) refers to errno.o(i.__aeabi_errno_addr) for __aeabi_errno_addr
    strtoul.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    strtoul.o(.text) refers to _strtoul.o(.text) for _strtoul
    entry4.o(.ARM.Collect$$$$00000003) refers to entry4.o(.ARM.Collect$$$$00002714) for __lit__00000000
    entry4.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to flexcan_interrupt_transfer.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to flexcan_interrupt_transfer.o(.text.main) for main
    ctype_o.o(.text) refers to ctype_o.o(.constdata) for .constdata
    ctype_o.o(.constdata) refers to ctype_o.o(.constdata) for __ctype_table
    isalnum_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isalpha_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isblank_o.o(.text) refers to ctype_o.o(.constdata) for __ctype_table
    iscntrl_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isdigit_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isgraph_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    islower_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isprint_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    ispunct_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isspace_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isupper_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isxdigit_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    _strtoul.o(.text) refers to _chval.o(.text) for _chval
    _strtoul.o(.text) refers to errno.o(i.__aeabi_errno_addr) for __aeabi_errno_addr
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload


==============================================================================

Removing Unused input sections from the image.

    Removing flexcan_interrupt_transfer.o(.text), (0 bytes).
    Removing flexcan_interrupt_transfer.o(.text.canChangeBaudRate_driver), (4 bytes).
    Removing flexcan_interrupt_transfer.o(.ARM.exidx.text.canChangeBaudRate_driver), (8 bytes).
    Removing flexcan_interrupt_transfer.o(.ARM.exidx.text.setTimer), (8 bytes).
    Removing flexcan_interrupt_transfer.o(.ARM.exidx.text.getElapsedTime), (8 bytes).
    Removing flexcan_interrupt_transfer.o(.ARM.exidx.text.canSend), (8 bytes).
    Removing flexcan_interrupt_transfer.o(.ARM.exidx.text.GPT2_IRQHandler), (8 bytes).
    Removing flexcan_interrupt_transfer.o(.ARM.exidx.text.main), (8 bytes).
    Removing flexcan_interrupt_transfer.o(.ARM.exidx.text.AppTaskCreate), (8 bytes).
    Removing flexcan_interrupt_transfer.o(.ARM.exidx.text.flexcan_callback), (8 bytes).
    Removing flexcan_interrupt_transfer.o(.ARM.exidx.text.CANopenRx_Task), (8 bytes).
    Removing flexcan_interrupt_transfer.o(.bss.t), (1 bytes).
    Removing flexcan_interrupt_transfer.o(.bss.gptIsrFlag), (1 bytes).
    Removing flexcan_interrupt_transfer.o(.bss.i), (4 bytes).
    Removing flexcan_interrupt_transfer.o(.bss.last_counter_val), (4 bytes).
    Removing flexcan_interrupt_transfer.o(.bss.elapsed_time), (4 bytes).
    Removing flexcan_interrupt_transfer.o(.bss.node_type), (1 bytes).
    Removing flexcan_interrupt_transfer.o(.bss.nodeID), (1 bytes).
    Removing flexcan_interrupt_transfer.o(.ARM.use_no_argv), (4 bytes).
    Removing pin_mux.o(.text), (0 bytes).
    Removing pin_mux.o(.text.BOARD_InitBootPins), (102 bytes).
    Removing pin_mux.o(.ARM.exidx.text.BOARD_InitBootPins), (8 bytes).
    Removing pin_mux.o(.ARM.exidx.text.BOARD_InitPins), (8 bytes).
    Removing board.o(.text), (0 bytes).
    Removing board.o(.text.BOARD_DebugConsoleSrcFreq), (74 bytes).
    Removing board.o(.ARM.exidx.text.BOARD_DebugConsoleSrcFreq), (8 bytes).
    Removing board.o(.ARM.exidx.text.BOARD_InitDebugConsole), (8 bytes).
    Removing board.o(.ARM.exidx.text.BOARD_ConfigMPU), (8 bytes).
    Removing board.o(.text.BOARD_SD_Pin_Config), (2 bytes).
    Removing board.o(.ARM.exidx.text.BOARD_SD_Pin_Config), (8 bytes).
    Removing board.o(.text.BOARD_MMC_Pin_Config), (2 bytes).
    Removing board.o(.ARM.exidx.text.BOARD_MMC_Pin_Config), (8 bytes).
    Removing clock_config.o(.text), (0 bytes).
    Removing clock_config.o(.text.BOARD_InitBootClocks), (4 bytes).
    Removing clock_config.o(.ARM.exidx.text.BOARD_InitBootClocks), (8 bytes).
    Removing clock_config.o(.ARM.exidx.text.BOARD_BootClockRUN), (8 bytes).
    Removing clock_config.o(.text.BOARD_BootClockRUN_800M), (1570 bytes).
    Removing clock_config.o(.ARM.exidx.text.BOARD_BootClockRUN_800M), (8 bytes).
    Removing clock_config.o(.rodata.armPllConfig_BOARD_BootClockRUN_800M), (8 bytes).
    Removing clock_config.o(.rodata.sysPll2Config_BOARD_BootClockRUN_800M), (12 bytes).
    Removing clock_config.o(.rodata.videoPllConfig_BOARD_BootClockRUN_800M), (20 bytes).
    Removing dcd.o(.text), (0 bytes).
    Removing dcd.o(.rodata.dcd_data), (1 bytes).
    Removing fsl_str.o(.text), (0 bytes).
    Removing fsl_str.o(.text.StrFormatPrintf), (724 bytes).
    Removing fsl_str.o(.ARM.exidx.text.StrFormatPrintf), (8 bytes).
    Removing fsl_str.o(.text.StrFormatScanf), (746 bytes).
    Removing fsl_str.o(.ARM.exidx.text.StrFormatScanf), (8 bytes).
    Removing fsl_debug_console.o(.text), (0 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Init), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_Deinit), (28 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Deinit), (8 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Printf), (8 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Vprintf), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_Putchar), (44 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Putchar), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_Scanf), (166 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Scanf), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_Getchar), (50 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Getchar), (8 bytes).
    Removing fsl_assert.o(.text), (0 bytes).
    Removing fsl_assert.o(.ARM.exidx.text.__aeabi_assert), (8 bytes).
    Removing fsl_flexcan.o(.text), (0 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_GetInstance), (52 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_GetInstance), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_EnterFreezeMode), (24 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_EnterFreezeMode), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_ExitFreezeMode), (36 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_ExitFreezeMode), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_SetBitRate), (182 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetBitRate), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_CalculateImprovedTimingValues), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_SetTimingConfig), (180 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetTimingConfig), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_SetFDBitRate), (178 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetFDBitRate), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_FDCalculateImprovedTimingValues), (564 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_FDCalculateImprovedTimingValues), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_SetFDTimingConfig), (168 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetFDTimingConfig), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_Init), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_Reset), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_FDInit), (652 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_FDInit), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_Deinit), (124 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_Deinit), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_GetDefaultConfig), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetRxMbGlobalMask), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_SetRxFifoGlobalMask), (60 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetRxFifoGlobalMask), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_SetRxIndividualMask), (140 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetRxIndividualMask), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetTxMbConfig), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_CalculateImprovedNominalTimingValues), (312 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_CalculateImprovedNominalTimingValues), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetFDTxMbConfig), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetRxMbConfig), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_SetFDRxMbConfig), (324 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetFDRxMbConfig), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_SetRxFifoConfig), (640 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetRxFifoConfig), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_EnableRxFifoDMA), (116 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_EnableRxFifoDMA), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_GetMemoryErrorReportStatus), (188 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_GetMemoryErrorReportStatus), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_WriteTxMb), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_WriteFDTxMb), (378 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_WriteFDTxMb), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_ReadRxMb), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_ReadFDRxMb), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_ReadRxFifo), (100 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_ReadRxFifo), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_TransferSendBlocking), (78 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferSendBlocking), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_TransferReceiveBlocking), (60 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferReceiveBlocking), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_TransferFDSendBlocking), (186 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferFDSendBlocking), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_TransferFDReceiveBlocking), (60 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferFDReceiveBlocking), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_TransferReceiveFifoBlocking), (120 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferReceiveFifoBlocking), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferCreateHandle), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferHandleIRQ), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferSendNonBlocking), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferReceiveNonBlocking), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_TransferFDSendNonBlocking), (240 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferFDSendNonBlocking), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_TransferFDReceiveNonBlocking), (216 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferFDReceiveNonBlocking), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_TransferReceiveFifoNonBlocking), (124 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferReceiveFifoNonBlocking), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_TransferGetReceiveFifoCount), (48 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferGetReceiveFifoCount), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferAbortSend), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferFDAbortSend), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferFDAbortReceive), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferAbortReceive), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_TransferAbortReceiveFifo), (62 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferAbortReceiveFifo), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_GetTimeStamp), (38 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_GetTimeStamp), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.CAN1_DriverIRQHandler), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.CAN2_DriverIRQHandler), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.CAN3_DriverIRQHandler), (8 bytes).
    Removing fsl_clock.o(.text), (0 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_InitArmPll), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_DeinitArmPll), (22 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitArmPll), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_CalcPllSpreadSpectrum), (72 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_CalcPllSpreadSpectrum), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_InitSysPll2), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_DeinitSysPll2), (48 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitSysPll2), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_IsSysPll2PfdEnabled), (26 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_IsSysPll2PfdEnabled), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_InitPfd), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_DeinitPfd), (58 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitPfd), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetPfdFreq), (224 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetPfdFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_InitSysPll3), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_DeinitSysPll3), (40 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitSysPll3), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_IsSysPll3PfdEnabled), (26 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_IsSysPll3PfdEnabled), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetPllBypass), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_InitAudioPllWithFreq), (384 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_InitAudioPllWithFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_CalcAvPllFreq), (366 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_CalcAvPllFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_InitAudioPll), (216 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_InitAudioPll), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.ANATOP_PllConfigure), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitAudioPll), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GPC_SetAudioPllOutputFreq), (78 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GPC_SetAudioPllOutputFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_CalcArmPllFreq), (192 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_CalcArmPllFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_InitArmPllWithFreq), (184 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_InitArmPllWithFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_InitVideoPllWithFreq), (384 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_InitVideoPllWithFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_InitVideoPll), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_DeinitVideoPll), (78 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitVideoPll), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GPC_SetVideoPllOutputFreq), (78 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GPC_SetVideoPllOutputFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_InitSysPll1), (198 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_InitSysPll1), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitSysPll1), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GPC_SetSysPll1OutputFreq), (80 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GPC_SetSysPll1OutputFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_EnableOsc24M), (32 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_EnableOsc24M), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_SetOsc24MWorkMode), (18 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_SetOsc24MWorkMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_SetOsc16MConfig), (38 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_SetOsc16MConfig), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MRefClkDiv), (30 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_SetOscRc400MRefClkDiv), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MFastClkCount), (28 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_SetOscRc400MFastClkCount), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MHysteresisValue), (42 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_SetOscRc400MHysteresisValue), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_BypassOscRc400MTuneLogic), (20 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_BypassOscRc400MTuneLogic), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_EnableOscRc400MTuneLogic), (20 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_EnableOscRc400MTuneLogic), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_FreezeOscRc400MTuneValue), (20 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_FreezeOscRc400MTuneValue), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MTuneValue), (32 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_SetOscRc400MTuneValue), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_Set1MHzOutputBehavior), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_SetLocked1MHzCount), (52 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_SetLocked1MHzCount), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_CheckLocked1MHzErrorFlag), (16 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_CheckLocked1MHzErrorFlag), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_ClearLocked1MHzErrorFlag), (10 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_ClearLocked1MHzErrorFlag), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_GetCurrentOscRc400MFastClockCount), (14 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_GetCurrentOscRc400MFastClockCount), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_GetCurrentOscRc400MTuneValue), (14 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_GetCurrentOscRc400MTuneValue), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetPllFreq), (296 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetPllFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetGroupConfig), (92 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetGroupConfig), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_TrimOscRc400M), (64 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_TrimOscRc400M), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_EnableOscRc400M), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetFreqFromObs), (92 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetFreqFromObs), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_EnableUsbhs0Clock), (4 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbhs0Clock), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_EnableUsbhs0PhyPllClock), (242 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbhs0PhyPllClock), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_DisableUsbhs0PhyPllClock), (22 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_DisableUsbhs0PhyPllClock), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_EnableUsbhs1Clock), (4 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbhs1Clock), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_EnableUsbhs1PhyPllClock), (242 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbhs1PhyPllClock), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_DisableUsbhs1PhyPllClock), (22 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_DisableUsbhs1PhyPllClock), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSCPLL_ControlBySetPointMode), (36 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSCPLL_ControlBySetPointMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSCPLL_ControlByCpuLowPowerMode), (80 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSCPLL_ControlByCpuLowPowerMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_ROOT_ControlBySetPointMode), (120 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_ROOT_ControlBySetPointMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_LPCG_ControlBySetPointMode), (50 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_LPCG_ControlBySetPointMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_LPCG_ControlByCpuLowPowerMode), (92 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_LPCG_ControlByCpuLowPowerMode), (8 bytes).
    Removing fsl_common.o(.text), (0 bytes).
    Removing fsl_common.o(.text.SDK_Malloc), (72 bytes).
    Removing fsl_common.o(.ARM.exidx.text.SDK_Malloc), (8 bytes).
    Removing fsl_common.o(.text.SDK_Free), (24 bytes).
    Removing fsl_common.o(.ARM.exidx.text.SDK_Free), (8 bytes).
    Removing fsl_common_arm.o(.text), (0 bytes).
    Removing fsl_common_arm.o(.text.MSDK_EnableCpuCycleCounter), (136 bytes).
    Removing fsl_common_arm.o(.ARM.exidx.text.MSDK_EnableCpuCycleCounter), (8 bytes).
    Removing fsl_common_arm.o(.text.MSDK_GetCpuCycleCount), (12 bytes).
    Removing fsl_common_arm.o(.ARM.exidx.text.MSDK_GetCpuCycleCount), (8 bytes).
    Removing fsl_common_arm.o(.ARM.exidx.text.SDK_DelayAtLeastUs), (8 bytes).
    Removing fsl_lpuart.o(.text), (0 bytes).
    Removing fsl_lpuart.o(.text.LPUART_GetInstance), (50 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_GetInstance), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferGetRxRingBufferLength), (38 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferGetRxRingBufferLength), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_Init), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_Deinit), (128 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_Deinit), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_GetDefaultConfig), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_SetBaudRate), (228 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_SetBaudRate), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_Enable9bitMode), (64 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_Enable9bitMode), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_SendAddress), (48 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_SendAddress), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_EnableInterrupts), (44 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_EnableInterrupts), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_DisableInterrupts), (52 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_DisableInterrupts), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_GetEnabledInterrupts), (44 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_GetEnabledInterrupts), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_GetStatusFlags), (24 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_GetStatusFlags), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_ClearStatusFlags), (60 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_ClearStatusFlags), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_WriteBlocking), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_ReadBlocking), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferCreateHandle), (214 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferCreateHandle), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferHandleIRQ), (900 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferHandleIRQ), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferStartRingBuffer), (96 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferStartRingBuffer), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferStopRingBuffer), (64 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferStopRingBuffer), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferSendNonBlocking), (184 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferSendNonBlocking), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferAbortSend), (54 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferAbortSend), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferGetSendCount), (84 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferGetSendCount), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferReceiveNonBlocking), (416 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferReceiveNonBlocking), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferAbortReceive), (60 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferAbortReceive), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferGetReceiveCount), (76 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferGetReceiveCount), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferHandleErrorIRQ), (2 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferHandleErrorIRQ), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART1_DriverIRQHandler), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART2_DriverIRQHandler), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART3_DriverIRQHandler), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART4_DriverIRQHandler), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART5_DriverIRQHandler), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART6_DriverIRQHandler), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART7_DriverIRQHandler), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART8_DriverIRQHandler), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART9_DriverIRQHandler), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART10_DriverIRQHandler), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART11_DriverIRQHandler), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART12_DriverIRQHandler), (8 bytes).
    Removing fsl_lpuart.o(.rodata.s_lpuartIRQ), (26 bytes).
    Removing fsl_gpio.o(.text), (0 bytes).
    Removing fsl_gpio.o(.text.GPIO_PinInit), (424 bytes).
    Removing fsl_gpio.o(.ARM.exidx.text.GPIO_PinInit), (8 bytes).
    Removing fsl_gpio.o(.text.GPIO_PinWrite), (44 bytes).
    Removing fsl_gpio.o(.ARM.exidx.text.GPIO_PinWrite), (8 bytes).
    Removing fsl_gpio.o(.text.GPIO_PinSetInterruptConfig), (132 bytes).
    Removing fsl_gpio.o(.ARM.exidx.text.GPIO_PinSetInterruptConfig), (8 bytes).
    Removing fsl_gpio.o(.rodata.str1.1), (69 bytes).
    Removing fsl_pmu.o(.text), (0 bytes).
    Removing fsl_pmu.o(.text.PMU_SetPllLdoControlMode), (20 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_SetPllLdoControlMode), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_SwitchPllLdoToGPCMode), (18 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_SwitchPllLdoToGPCMode), (8 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_StaticEnablePllLdo), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_StaticDisablePllLdo), (10 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_StaticDisablePllLdo), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_SetLpsrAnaLdoControlMode), (20 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_SetLpsrAnaLdoControlMode), (8 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_StaticEnableLpsrAnaLdoBypassMode), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_StaticGetLpsrAnaLdoDefaultConfig), (54 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_StaticGetLpsrAnaLdoDefaultConfig), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_StaticLpsrAnaLdoInit), (108 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_StaticLpsrAnaLdoInit), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_StaticLpsrAnaLdoDeinit), (14 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_StaticLpsrAnaLdoDeinit), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_SetLpsrDigLdoControlMode), (20 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_SetLpsrDigLdoControlMode), (8 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_StaticEnableLpsrDigLdoBypassMode), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_StaticGetLpsrDigLdoDefaultConfig), (48 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_StaticGetLpsrDigLdoDefaultConfig), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_StaticLpsrDigLdoInit), (100 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_StaticLpsrDigLdoInit), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_StaticLpsrDigLdoDeinit), (30 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_StaticLpsrDigLdoDeinit), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_GPCSetLpsrDigLdoTargetVoltage), (104 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_GPCSetLpsrDigLdoTargetVoltage), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_GetSnvsDigLdoDefaultConfig), (48 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_GetSnvsDigLdoDefaultConfig), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_SnvsDigLdoInit), (22 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_SnvsDigLdoInit), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_GPCEnableLdo), (60 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_GPCEnableLdo), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_GPCSetLdoOperateMode), (82 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_GPCSetLdoOperateMode), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_GPCEnableLdoTrackingMode), (80 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_GPCEnableLdoTrackingMode), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_GPCEnableLdoBypassMode), (80 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_GPCEnableLdoBypassMode), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_GPCEnableLdoStandbyMode), (56 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_GPCEnableLdoStandbyMode), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_SetBandgapControlMode), (20 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_SetBandgapControlMode), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_SwitchBandgapToGPCMode), (18 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_SwitchBandgapToGPCMode), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_DisableBandgapSelfBiasAfterPowerUp), (40 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_DisableBandgapSelfBiasAfterPowerUp), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_EnableBandgapSelfBiasBeforePowerDown), (26 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_EnableBandgapSelfBiasBeforePowerDown), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_StaticBandgapInit), (94 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_StaticBandgapInit), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_WellBiasInit), (78 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_WellBiasInit), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_GetWellBiasDefaultConfig), (46 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_GetWellBiasDefaultConfig), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_SetBodyBiasControlMode), (80 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_SetBodyBiasControlMode), (8 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_EnableBodyBias), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_GPCEnableBodyBias), (24 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_GPCEnableBodyBias), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_GPCEnableBodyBiasStandbyMode), (24 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_GPCEnableBodyBiasStandbyMode), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_GPCGetBodyBiasDefaultConfig), (40 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_GPCGetBodyBiasDefaultConfig), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_GPCSetBodyBiasConfig), (108 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_GPCSetBodyBiasConfig), (8 bytes).
    Removing fsl_pmu.o(.rodata.str1.1), (139 bytes).
    Removing fsl_pmu.o(.rodata.cst16), (16 bytes).
    Removing fsl_dcdc.o(.text), (0 bytes).
    Removing fsl_dcdc.o(.text.DCDC_Init), (134 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_Init), (8 bytes).
    Removing fsl_dcdc.o(.text.DCDC_Deinit), (98 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_Deinit), (8 bytes).
    Removing fsl_dcdc.o(.text.DCDC_GetDefaultConfig), (42 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_GetDefaultConfig), (8 bytes).
    Removing fsl_dcdc.o(.text.DCDC_GetDefaultDetectionConfig), (58 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_GetDefaultDetectionConfig), (8 bytes).
    Removing fsl_dcdc.o(.text.DCDC_SetDetectionConfig), (122 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_SetDetectionConfig), (8 bytes).
    Removing fsl_dcdc.o(.text.DCDC_SetClockSource), (72 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_SetClockSource), (8 bytes).
    Removing fsl_dcdc.o(.text.DCDC_GetDefaultLowPowerConfig), (44 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_GetDefaultLowPowerConfig), (8 bytes).
    Removing fsl_dcdc.o(.text.DCDC_SetLowPowerConfig), (46 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_SetLowPowerConfig), (8 bytes).
    Removing fsl_dcdc.o(.text.DCDC_GetDefaultLoopControlConfig), (56 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_GetDefaultLoopControlConfig), (8 bytes).
    Removing fsl_dcdc.o(.text.DCDC_SetLoopControlConfig), (150 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_SetLoopControlConfig), (8 bytes).
    Removing fsl_dcdc.o(.text.DCDC_SetMinPowerConfig), (46 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_SetMinPowerConfig), (8 bytes).
    Removing fsl_dcdc.o(.text.DCDC_SetInternalRegulatorConfig), (42 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_SetInternalRegulatorConfig), (8 bytes).
    Removing fsl_dcdc.o(.text.DCDC_SetPointInit), (576 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_SetPointInit), (8 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_BootIntoDCM), (8 bytes).
    Removing fsl_dcdc.o(.text.DCDC_BootIntoCCM), (28 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_BootIntoCCM), (8 bytes).
    Removing fsl_dcdc.o(.rodata.str1.1), (126 bytes).
    Removing fsl_cache.o(.text), (0 bytes).
    Removing fsl_cache.o(.text.L1CACHE_InvalidateICacheByRange), (50 bytes).
    Removing fsl_cache.o(.ARM.exidx.text.L1CACHE_InvalidateICacheByRange), (8 bytes).
    Removing fsl_cache.o(.text.ICACHE_InvalidateByRange), (50 bytes).
    Removing fsl_cache.o(.ARM.exidx.text.ICACHE_InvalidateByRange), (8 bytes).
    Removing fsl_cache.o(.text.DCACHE_InvalidateByRange), (46 bytes).
    Removing fsl_cache.o(.ARM.exidx.text.DCACHE_InvalidateByRange), (8 bytes).
    Removing fsl_cache.o(.text.DCACHE_CleanByRange), (46 bytes).
    Removing fsl_cache.o(.ARM.exidx.text.DCACHE_CleanByRange), (8 bytes).
    Removing fsl_cache.o(.text.DCACHE_CleanInvalidateByRange), (46 bytes).
    Removing fsl_cache.o(.ARM.exidx.text.DCACHE_CleanInvalidateByRange), (8 bytes).
    Removing fsl_anatop_ai.o(.text), (0 bytes).
    Removing fsl_anatop_ai.o(.ARM.exidx.text.ANATOP_AI_Access), (8 bytes).
    Removing fsl_anatop_ai.o(.ARM.exidx.text.ANATOP_AI_Write), (8 bytes).
    Removing fsl_anatop_ai.o(.ARM.exidx.text.ANATOP_AI_Read), (8 bytes).
    Removing fsl_anatop_ai.o(.ARM.exidx.text.ANATOP_AI_WriteWithMaskShift), (8 bytes).
    Removing fsl_gpt.o(.text), (0 bytes).
    Removing fsl_gpt.o(.ARM.exidx.text.GPT_Init), (8 bytes).
    Removing fsl_gpt.o(.text.GPT_Deinit), (100 bytes).
    Removing fsl_gpt.o(.ARM.exidx.text.GPT_Deinit), (8 bytes).
    Removing fsl_gpt.o(.ARM.exidx.text.GPT_GetDefaultConfig), (8 bytes).
    Removing system_mimxrt1176_cm7.o(.text), (0 bytes).
    Removing system_mimxrt1176_cm7.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_mimxrt1176_cm7.o(.ARM.exidx.text.SystemInitHook), (8 bytes).
    Removing system_mimxrt1176_cm7.o(.text.SystemCoreClockUpdate), (2 bytes).
    Removing system_mimxrt1176_cm7.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing fsl_adapter_lpuart.o(.text), (0 bytes).
    Removing fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartInit), (8 bytes).
    Removing fsl_adapter_lpuart.o(.text.HAL_UartDeinit), (50 bytes).
    Removing fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartDeinit), (8 bytes).
    Removing fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartReceiveBlocking), (8 bytes).
    Removing fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartSendBlocking), (8 bytes).
    Removing fsl_adapter_lpuart.o(.text.HAL_UartEnterLowpower), (32 bytes).
    Removing fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartEnterLowpower), (8 bytes).
    Removing fsl_adapter_lpuart.o(.text.HAL_UartExitLowpower), (4 bytes).
    Removing fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartExitLowpower), (8 bytes).
    Removing fsl_component_generic_list.o(.text), (0 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_Init), (12 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_Init), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetList), (4 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetList), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_AddTail), (66 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddTail), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_AddHead), (60 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddHead), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_RemoveHead), (56 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_RemoveHead), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetHead), (4 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetHead), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetNext), (4 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetNext), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetPrev), (4 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetPrev), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_RemoveElement), (80 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_RemoveElement), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_AddPrevElement), (106 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddPrevElement), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetSize), (4 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetSize), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetAvailableSize), (8 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetAvailableSize), (8 bytes).
    Removing fsl_flexspi_nor_boot.o(.text), (0 bytes).
    Removing evkmimxrt1170_flexspi_nor_config.o(.text), (0 bytes).
    Removing dcf.o(.text), (0 bytes).
    Removing dcf.o(.text.start_node), (22 bytes).
    Removing dcf.o(.ARM.exidx.text.start_node), (8 bytes).
    Removing dcf.o(.text.check_and_start_node), (150 bytes).
    Removing dcf.o(.ARM.exidx.text.check_and_start_node), (8 bytes).
    Removing dcf.o(.text.init_consise_dcf), (74 bytes).
    Removing dcf.o(.ARM.exidx.text.init_consise_dcf), (8 bytes).
    Removing dcf.o(.text.read_consise_dcf_next_entry), (168 bytes).
    Removing dcf.o(.ARM.exidx.text.read_consise_dcf_next_entry), (8 bytes).
    Removing dcf.o(.text.start_and_seek_node), (66 bytes).
    Removing dcf.o(.ARM.exidx.text.start_and_seek_node), (8 bytes).
    Removing dcf.o(.text.get_next_DCF_data), (132 bytes).
    Removing dcf.o(.ARM.exidx.text.get_next_DCF_data), (8 bytes).
    Removing dcf.o(.text.SaveNode), (62 bytes).
    Removing dcf.o(.ARM.exidx.text.SaveNode), (8 bytes).
    Removing dcf.o(.text.CheckSDOAndContinue), (448 bytes).
    Removing dcf.o(.ARM.exidx.text.CheckSDOAndContinue), (8 bytes).
    Removing dcf.o(.text.write_consise_dcf_next_entry), (180 bytes).
    Removing dcf.o(.ARM.exidx.text.write_consise_dcf_next_entry), (8 bytes).
    Removing emcy.o(.text), (0 bytes).
    Removing emcy.o(.ARM.exidx.text.OnNumberOfErrorsUpdate), (8 bytes).
    Removing emcy.o(.ARM.exidx.text.emergencyInit), (8 bytes).
    Removing emcy.o(.ARM.exidx.text.emergencyStop), (8 bytes).
    Removing emcy.o(.text.sendEMCY), (80 bytes).
    Removing emcy.o(.ARM.exidx.text.sendEMCY), (8 bytes).
    Removing emcy.o(.text.EMCY_setError), (332 bytes).
    Removing emcy.o(.ARM.exidx.text.EMCY_setError), (8 bytes).
    Removing emcy.o(.text.EMCY_errorRecovered), (172 bytes).
    Removing emcy.o(.ARM.exidx.text.EMCY_errorRecovered), (8 bytes).
    Removing emcy.o(.ARM.exidx.text.proceedEMCY), (8 bytes).
    Removing emcy.o(.ARM.exidx.text._post_emcy), (8 bytes).
    Removing lifegrd.o(.text), (0 bytes).
    Removing lifegrd.o(.text.getNodeState), (18 bytes).
    Removing lifegrd.o(.ARM.exidx.text.getNodeState), (8 bytes).
    Removing lifegrd.o(.ARM.exidx.text.ConsumerHeartbeatAlarm), (8 bytes).
    Removing lifegrd.o(.ARM.exidx.text.proceedNODE_GUARD), (8 bytes).
    Removing lifegrd.o(.ARM.exidx.text.ProducerHeartbeatAlarm), (8 bytes).
    Removing lifegrd.o(.ARM.exidx.text.GuardTimeAlarm), (8 bytes).
    Removing lifegrd.o(.ARM.exidx.text.OnNodeGuardUpdate), (8 bytes).
    Removing lifegrd.o(.text.nodeguardStop), (18 bytes).
    Removing lifegrd.o(.ARM.exidx.text.nodeguardStop), (8 bytes).
    Removing lifegrd.o(.ARM.exidx.text.nodeguardInit), (8 bytes).
    Removing lifegrd.o(.ARM.exidx.text.OnHeartbeatProducerUpdate), (8 bytes).
    Removing lifegrd.o(.ARM.exidx.text.heartbeatInit), (8 bytes).
    Removing lifegrd.o(.text.heartbeatStop), (62 bytes).
    Removing lifegrd.o(.ARM.exidx.text.heartbeatStop), (8 bytes).
    Removing lifegrd.o(.ARM.exidx.text.lifeGuardInit), (8 bytes).
    Removing lifegrd.o(.ARM.exidx.text.lifeGuardStop), (8 bytes).
    Removing lifegrd.o(.ARM.exidx.text._heartbeatError), (8 bytes).
    Removing lifegrd.o(.ARM.exidx.text._post_SlaveBootup), (8 bytes).
    Removing lifegrd.o(.ARM.exidx.text._post_SlaveStateChange), (8 bytes).
    Removing lifegrd.o(.ARM.exidx.text._nodeguardError), (8 bytes).
    Removing lss.o(.text), (0 bytes).
    Removing nmtmaster.o(.text), (0 bytes).
    Removing nmtmaster.o(.ARM.exidx.text.masterSendNMTstateChange), (8 bytes).
    Removing nmtmaster.o(.ARM.exidx.text.masterSendNMTnodeguard), (8 bytes).
    Removing nmtmaster.o(.text.masterRequestNodeState), (64 bytes).
    Removing nmtmaster.o(.ARM.exidx.text.masterRequestNodeState), (8 bytes).
    Removing nmtslave.o(.text), (0 bytes).
    Removing nmtslave.o(.ARM.exidx.text.proceedNMTstateChange), (8 bytes).
    Removing nmtslave.o(.ARM.exidx.text.slaveSendBootUp), (8 bytes).
    Removing objacces.o(.text), (0 bytes).
    Removing objacces.o(.text.accessDictionaryError), (4 bytes).
    Removing objacces.o(.ARM.exidx.text.accessDictionaryError), (8 bytes).
    Removing objacces.o(.ARM.exidx.text._getODentry), (8 bytes).
    Removing objacces.o(.ARM.exidx.text._setODentry), (8 bytes).
    Removing objacces.o(.ARM.exidx.text.RegisterSetODentryCallBack), (8 bytes).
    Removing objacces.o(.ARM.exidx.text._storeODSubIndex), (8 bytes).
    Removing pdo.o(.text), (0 bytes).
    Removing pdo.o(.ARM.exidx.text.buildPDO), (8 bytes).
    Removing pdo.o(.text.CopyBits), (160 bytes).
    Removing pdo.o(.ARM.exidx.text.CopyBits), (8 bytes).
    Removing pdo.o(.text.sendPDOrequest), (92 bytes).
    Removing pdo.o(.ARM.exidx.text.sendPDOrequest), (8 bytes).
    Removing pdo.o(.ARM.exidx.text.proceedPDO), (8 bytes).
    Removing pdo.o(.ARM.exidx.text.PDOEventTimerAlarm), (8 bytes).
    Removing pdo.o(.text.sendPDOevent), (6 bytes).
    Removing pdo.o(.ARM.exidx.text.sendPDOevent), (8 bytes).
    Removing pdo.o(.ARM.exidx.text._sendPDOevent), (8 bytes).
    Removing pdo.o(.ARM.exidx.text.sendOnePDOevent), (8 bytes).
    Removing pdo.o(.ARM.exidx.text.PDOInhibitTimerAlarm), (8 bytes).
    Removing pdo.o(.ARM.exidx.text._RxPDO_EventTimers_Handler), (8 bytes).
    Removing pdo.o(.ARM.exidx.text.TPDO_Communication_Parameter_Callback), (8 bytes).
    Removing pdo.o(.ARM.exidx.text.PDOInit), (8 bytes).
    Removing pdo.o(.ARM.exidx.text.PDOStop), (8 bytes).
    Removing pdo.o(.text.PDOEnable), (32 bytes).
    Removing pdo.o(.ARM.exidx.text.PDOEnable), (8 bytes).
    Removing pdo.o(.text.PDODisable), (32 bytes).
    Removing pdo.o(.ARM.exidx.text.PDODisable), (8 bytes).
    Removing sdo.o(.text), (0 bytes).
    Removing sdo.o(.ARM.exidx.text.SDOTimeoutAlarm), (8 bytes).
    Removing sdo.o(.ARM.exidx.text.sendSDOabort), (8 bytes).
    Removing sdo.o(.ARM.exidx.text.resetSDOline), (8 bytes).
    Removing sdo.o(.ARM.exidx.text.resetSDO), (8 bytes).
    Removing sdo.o(.ARM.exidx.text.SDOlineToObjdict), (8 bytes).
    Removing sdo.o(.ARM.exidx.text.objdictToSDOline), (8 bytes).
    Removing sdo.o(.ARM.exidx.text.lineToSDO), (8 bytes).
    Removing sdo.o(.text.SDOtoLine), (70 bytes).
    Removing sdo.o(.ARM.exidx.text.SDOtoLine), (8 bytes).
    Removing sdo.o(.ARM.exidx.text.failedSDO), (8 bytes).
    Removing sdo.o(.text.getSDOlineOnUse), (54 bytes).
    Removing sdo.o(.ARM.exidx.text.getSDOlineOnUse), (8 bytes).
    Removing sdo.o(.ARM.exidx.text.initSDOline), (8 bytes).
    Removing sdo.o(.text.getSDOfreeLine), (46 bytes).
    Removing sdo.o(.ARM.exidx.text.getSDOfreeLine), (8 bytes).
    Removing sdo.o(.text.getSDOlineToClose), (40 bytes).
    Removing sdo.o(.ARM.exidx.text.getSDOlineToClose), (8 bytes).
    Removing sdo.o(.text.closeSDOtransfer), (194 bytes).
    Removing sdo.o(.ARM.exidx.text.closeSDOtransfer), (8 bytes).
    Removing sdo.o(.text.GetSDOClientFromNodeId), (68 bytes).
    Removing sdo.o(.ARM.exidx.text.GetSDOClientFromNodeId), (8 bytes).
    Removing sdo.o(.text.getSDOlineRestBytes), (26 bytes).
    Removing sdo.o(.ARM.exidx.text.getSDOlineRestBytes), (8 bytes).
    Removing sdo.o(.text.setSDOlineRestBytes), (20 bytes).
    Removing sdo.o(.ARM.exidx.text.setSDOlineRestBytes), (8 bytes).
    Removing sdo.o(.ARM.exidx.text.sendSDO), (8 bytes).
    Removing sdo.o(.ARM.exidx.text.proceedSDO), (8 bytes).
    Removing sdo.o(.text.resetClientSDOLineFromNodeId), (186 bytes).
    Removing sdo.o(.ARM.exidx.text.resetClientSDOLineFromNodeId), (8 bytes).
    Removing sdo.o(.text._writeNetworkDict), (624 bytes).
    Removing sdo.o(.ARM.exidx.text._writeNetworkDict), (8 bytes).
    Removing sdo.o(.text.writeNetworkDict), (34 bytes).
    Removing sdo.o(.ARM.exidx.text.writeNetworkDict), (8 bytes).
    Removing sdo.o(.text.writeNetworkDictCallBack), (34 bytes).
    Removing sdo.o(.ARM.exidx.text.writeNetworkDictCallBack), (8 bytes).
    Removing sdo.o(.text.writeNetworkDictCallBackAI), (164 bytes).
    Removing sdo.o(.ARM.exidx.text.writeNetworkDictCallBackAI), (8 bytes).
    Removing sdo.o(.text._readNetworkDict), (548 bytes).
    Removing sdo.o(.ARM.exidx.text._readNetworkDict), (8 bytes).
    Removing sdo.o(.text.readNetworkDict), (28 bytes).
    Removing sdo.o(.ARM.exidx.text.readNetworkDict), (8 bytes).
    Removing sdo.o(.text.readNetworkDictCallback), (24 bytes).
    Removing sdo.o(.ARM.exidx.text.readNetworkDictCallback), (8 bytes).
    Removing sdo.o(.text.readNetworkDictCallbackAI), (140 bytes).
    Removing sdo.o(.ARM.exidx.text.readNetworkDictCallbackAI), (8 bytes).
    Removing sdo.o(.text.getReadResultNetworkDict), (288 bytes).
    Removing sdo.o(.ARM.exidx.text.getReadResultNetworkDict), (8 bytes).
    Removing sdo.o(.text.getWriteResultNetworkDict), (222 bytes).
    Removing sdo.o(.ARM.exidx.text.getWriteResultNetworkDict), (8 bytes).
    Removing states.o(.text), (0 bytes).
    Removing states.o(.text.getState), (6 bytes).
    Removing states.o(.ARM.exidx.text.getState), (8 bytes).
    Removing states.o(.ARM.exidx.text.canDispatch), (8 bytes).
    Removing states.o(.ARM.exidx.text.switchCommunicationState), (8 bytes).
    Removing states.o(.ARM.exidx.text.setState), (8 bytes).
    Removing states.o(.ARM.exidx.text.getNodeId), (8 bytes).
    Removing states.o(.ARM.exidx.text.setNodeId), (8 bytes).
    Removing states.o(.ARM.exidx.text._initialisation), (8 bytes).
    Removing states.o(.ARM.exidx.text._preOperational), (8 bytes).
    Removing states.o(.ARM.exidx.text._operational), (8 bytes).
    Removing states.o(.ARM.exidx.text._stopped), (8 bytes).
    Removing sync.o(.text), (0 bytes).
    Removing sync.o(.ARM.exidx.text.SyncAlarm), (8 bytes).
    Removing sync.o(.text.sendSYNC), (70 bytes).
    Removing sync.o(.ARM.exidx.text.sendSYNC), (8 bytes).
    Removing sync.o(.ARM.exidx.text.OnCOB_ID_SyncUpdate), (8 bytes).
    Removing sync.o(.ARM.exidx.text.startSYNC), (8 bytes).
    Removing sync.o(.ARM.exidx.text.stopSYNC), (8 bytes).
    Removing sync.o(.text.sendSYNCMessage), (34 bytes).
    Removing sync.o(.ARM.exidx.text.sendSYNCMessage), (8 bytes).
    Removing sync.o(.ARM.exidx.text.proceedSYNC), (8 bytes).
    Removing sync.o(.ARM.exidx.text._post_sync), (8 bytes).
    Removing sync.o(.ARM.exidx.text._post_TPDO), (8 bytes).
    Removing timer.o(.text), (0 bytes).
    Removing timer.o(.ARM.exidx.text.SetAlarm), (8 bytes).
    Removing timer.o(.ARM.exidx.text.DelAlarm), (8 bytes).
    Removing timer.o(.ARM.exidx.text.TimeDispatch), (8 bytes).
    Removing timer.o(.bss.tdcount), (4 bytes).
    Removing slave.o(.text), (0 bytes).
    Removing slave.o(.ARM.exidx.text.Slave_valueRangeTest), (8 bytes).
    Removing slave.o(.ARM.exidx.text.Slave_scanIndexOD), (8 bytes).
    Removing slave.o(.data.Slave_Index1003), (32 bytes).
    Removing croutine.o(.text), (0 bytes).
    Removing event_groups.o(.text), (0 bytes).
    Removing event_groups.o(.text.xEventGroupCreate), (34 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupCreate), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSync), (232 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSync), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSetBits), (178 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupWaitBits), (322 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupWaitBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBits), (80 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBitsFromISR), (20 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupClearBitsCallback), (78 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback), (8 bytes).
    Removing event_groups.o(.text.xEventGroupGetBitsFromISR), (32 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupDelete), (102 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupDelete), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetBitsCallback), (4 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSetBitsFromISR), (20 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.uxEventGroupGetNumber), (10 bytes).
    Removing event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetNumber), (4 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetNumber), (8 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.text.xQueueGenericReset), (192 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.text.xQueueCreateMutex), (116 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (70 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.text.xQueueGenericSend), (450 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (64 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.text.xQueueSemaphoreTake), (456 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (54 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.text.prvCopyDataToQueue), (122 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.text.xQueueGenericSendFromISR), (258 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveFromISR), (242 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (428 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (264 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (172 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (42 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (46 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (30 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.text.vQueueDelete), (66 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.vQueueUnregisterQueue), (64 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueUnregisterQueue), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (6 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (34 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (38 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueAddToRegistry), (8 bytes).
    Removing queue.o(.text.pcQueueGetName), (60 bytes).
    Removing queue.o(.ARM.exidx.text.pcQueueGetName), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted), (8 bytes).
    Removing stream_buffer.o(.text), (0 bytes).
    Removing stream_buffer.o(.text.xStreamBufferGenericCreate), (206 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferGenericCreate), (8 bytes).
    Removing stream_buffer.o(.text.vStreamBufferDelete), (42 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.vStreamBufferDelete), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReset), (136 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReset), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSetTriggerLevel), (46 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSetTriggerLevel), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSpacesAvailable), (62 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSpacesAvailable), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferBytesAvailable), (42 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferBytesAvailable), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSend), (398 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSend), (8 bytes).
    Removing stream_buffer.o(.text.prvWriteMessageToBuffer), (306 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvWriteMessageToBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSendFromISR), (202 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSendFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceive), (276 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceive), (8 bytes).
    Removing stream_buffer.o(.text.prvReadMessageFromBuffer), (234 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvReadMessageFromBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes), (172 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferNextMessageLengthBytes), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceiveFromISR), (170 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferIsEmpty), (38 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferIsEmpty), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferIsFull), (78 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferIsFull), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSendCompletedFromISR), (106 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSendCompletedFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR), (106 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveCompletedFromISR), (8 bytes).
    Removing stream_buffer.o(.text.uxStreamBufferGetStreamBufferNumber), (4 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.uxStreamBufferGetStreamBufferNumber), (8 bytes).
    Removing stream_buffer.o(.text.vStreamBufferSetStreamBufferNumber), (4 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.vStreamBufferSetStreamBufferNumber), (8 bytes).
    Removing stream_buffer.o(.text.ucStreamBufferGetStreamBufferType), (8 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.ucStreamBufferGetStreamBufferType), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.text.xTaskDelayUntil), (304 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.text.vTaskDelay), (200 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (160 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (30 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (52 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (252 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.text.vTaskSuspend), (406 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskResume), (186 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (234 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (36 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (18 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.text.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (42 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (1194 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (74 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (150 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (254 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (66 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (10 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetThreadLocalStoragePointer), (54 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetThreadLocalStoragePointer), (8 bytes).
    Removing tasks.o(.text.pvTaskGetThreadLocalStoragePointer), (28 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskGetThreadLocalStoragePointer), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (310 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.text.xTaskPriorityInherit), (198 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.text.xTaskPriorityDisinherit), (214 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.text.vTaskPriorityDisinheritAfterTimeout), (226 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (26 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.text.pvTaskIncrementMutexHeldCount), (24 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyTake), (154 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyWait), (200 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (390 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (434 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskGenericNotifyGiveFromISR), (328 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyStateClear), (72 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyValueClear), (44 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear), (8 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateTimerTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvTimerTask), (8 bytes).
    Removing timers.o(.text.xTimerCreate), (106 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreate), (8 bytes).
    Removing timers.o(.text.xTimerGenericCommand), (104 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommand), (8 bytes).
    Removing timers.o(.text.xTimerGetTimerDaemonTaskHandle), (38 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle), (8 bytes).
    Removing timers.o(.text.xTimerGetPeriod), (30 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetPeriod), (8 bytes).
    Removing timers.o(.text.vTimerSetReloadMode), (66 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetReloadMode), (50 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.uxTimerGetReloadMode), (50 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetExpiryTime), (30 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetExpiryTime), (8 bytes).
    Removing timers.o(.text.pcTimerGetName), (30 bytes).
    Removing timers.o(.ARM.exidx.text.pcTimerGetName), (8 bytes).
    Removing timers.o(.text.xTimerIsTimerActive), (50 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerIsTimerActive), (8 bytes).
    Removing timers.o(.text.pvTimerGetTimerID), (42 bytes).
    Removing timers.o(.ARM.exidx.text.pvTimerGetTimerID), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerID), (46 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerID), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCallFromISR), (44 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCall), (74 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCall), (8 bytes).
    Removing timers.o(.text.uxTimerGetTimerNumber), (4 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetTimerNumber), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerNumber), (4 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerNumber), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessExpiredTimer), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnableVFP), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (42 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing port.o(.text.vPortValidateInterruptPriority), (106 bytes).
    Removing port.o(.ARM.exidx.text.vPortValidateInterruptPriority), (8 bytes).
    Removing heap_4.o(.text), (0 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_4.o(.text.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.xPortGetMinimumEverFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.vPortInitialiseBlocks), (2 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_4.o(.text.pvPortCalloc), (42 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortCalloc), (8 bytes).
    Removing heap_4.o(.text.vPortGetHeapStats), (150 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortGetHeapStats), (8 bytes).

957 unused section(s) (total 46147 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/../cmprslib/zerorunl2.c          0x00000000   Number         0  __dczerorl2.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  ctype_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isalnum_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isalpha_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isblank_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  iscntrl_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isdigit_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isgraph_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  islower_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isprint_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  ispunct_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isspace_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isupper_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isxdigit_o.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/errno.c                 0x00000000   Number         0  errno.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry4.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  malloc2.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  mallocr2.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  malloca2.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  mallocra2.o ABSOLUTE
    ../clib/microlib/malloc/mvars.c          0x00000000   Number         0  mvars.o ABSOLUTE
    ../clib/microlib/string/memcmp.c         0x00000000   Number         0  memcmp.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpy.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyc.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memset.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/string/strlen.c         0x00000000   Number         0  strlen.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  strtoul.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  _strtoul.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  _chval.o ABSOLUTE
    Slave.c                                  0x00000000   Number         0  slave.o ABSOLUTE
    board.c                                  0x00000000   Number         0  board.o ABSOLUTE
    clock_config.c                           0x00000000   Number         0  clock_config.o ABSOLUTE
    croutine.c                               0x00000000   Number         0  croutine.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    dcd.c                                    0x00000000   Number         0  dcd.o ABSOLUTE
    dcf.c                                    0x00000000   Number         0  dcf.o ABSOLUTE
    emcy.c                                   0x00000000   Number         0  emcy.o ABSOLUTE
    event_groups.c                           0x00000000   Number         0  event_groups.o ABSOLUTE
    evkmimxrt1170_flexspi_nor_config.c       0x00000000   Number         0  evkmimxrt1170_flexspi_nor_config.o ABSOLUTE
    flexcan_interrupt_transfer.c             0x00000000   Number         0  flexcan_interrupt_transfer.o ABSOLUTE
    fsl_adapter_lpuart.c                     0x00000000   Number         0  fsl_adapter_lpuart.o ABSOLUTE
    fsl_anatop_ai.c                          0x00000000   Number         0  fsl_anatop_ai.o ABSOLUTE
    fsl_assert.c                             0x00000000   Number         0  fsl_assert.o ABSOLUTE
    fsl_cache.c                              0x00000000   Number         0  fsl_cache.o ABSOLUTE
    fsl_clock.c                              0x00000000   Number         0  fsl_clock.o ABSOLUTE
    fsl_common.c                             0x00000000   Number         0  fsl_common.o ABSOLUTE
    fsl_common_arm.c                         0x00000000   Number         0  fsl_common_arm.o ABSOLUTE
    fsl_component_generic_list.c             0x00000000   Number         0  fsl_component_generic_list.o ABSOLUTE
    fsl_dcdc.c                               0x00000000   Number         0  fsl_dcdc.o ABSOLUTE
    fsl_debug_console.c                      0x00000000   Number         0  fsl_debug_console.o ABSOLUTE
    fsl_flexcan.c                            0x00000000   Number         0  fsl_flexcan.o ABSOLUTE
    fsl_flexspi_nor_boot.c                   0x00000000   Number         0  fsl_flexspi_nor_boot.o ABSOLUTE
    fsl_gpio.c                               0x00000000   Number         0  fsl_gpio.o ABSOLUTE
    fsl_gpt.c                                0x00000000   Number         0  fsl_gpt.o ABSOLUTE
    fsl_lpuart.c                             0x00000000   Number         0  fsl_lpuart.o ABSOLUTE
    fsl_pmu.c                                0x00000000   Number         0  fsl_pmu.o ABSOLUTE
    fsl_str.c                                0x00000000   Number         0  fsl_str.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    heap_4.c                                 0x00000000   Number         0  heap_4.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    lifegrd.c                                0x00000000   Number         0  lifegrd.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    lss.c                                    0x00000000   Number         0  lss.o ABSOLUTE
    nmtMaster.c                              0x00000000   Number         0  nmtmaster.o ABSOLUTE
    nmtSlave.c                               0x00000000   Number         0  nmtslave.o ABSOLUTE
    objacces.c                               0x00000000   Number         0  objacces.o ABSOLUTE
    pdo.c                                    0x00000000   Number         0  pdo.o ABSOLUTE
    pin_mux.c                                0x00000000   Number         0  pin_mux.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    sdo.c                                    0x00000000   Number         0  sdo.o ABSOLUTE
    states.c                                 0x00000000   Number         0  states.o ABSOLUTE
    stream_buffer.c                          0x00000000   Number         0  stream_buffer.o ABSOLUTE
    sync.c                                   0x00000000   Number         0  sync.o ABSOLUTE
    system_MIMXRT1176_cm7.c                  0x00000000   Number         0  system_mimxrt1176_cm7.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    timer.c                                  0x00000000   Number         0  timer.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    s_flexcanIsr                             0x20000be0   Data           4  fsl_flexcan.o(.data.s_flexcanIsr)
    [Anonymous Symbol]                       0x20000be0   Section        0  fsl_flexcan.o(.data.s_flexcanIsr)
    uxCriticalNesting                        0x20000c1c   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x20000c1c   Section        0  port.o(.data.uxCriticalNesting)
    AppTaskCreate_Handle                     0x20000c20   Data           4  flexcan_interrupt_transfer.o(.bss.AppTaskCreate_Handle)
    [Anonymous Symbol]                       0x20000c20   Section        0  flexcan_interrupt_transfer.o(.bss.AppTaskCreate_Handle)
    CANopenRx_Task_Handle                    0x20000c24   Data           4  flexcan_interrupt_transfer.o(.bss.CANopenRx_Task_Handle)
    [Anonymous Symbol]                       0x20000c24   Section        0  flexcan_interrupt_transfer.o(.bss.CANopenRx_Task_Handle)
    prvSampleTimeNow.xLastTime               0x20001110   Data           4  timers.o(.bss.prvSampleTimeNow.xLastTime)
    [Anonymous Symbol]                       0x20001110   Section        0  timers.o(.bss.prvSampleTimeNow.xLastTime)
    __tagsym$$used.1                         0x20001114   Number         0  tasks.o(.bss.pxCurrentTCB)
    pxCurrentTimerList                       0x20001118   Data           4  timers.o(.bss.pxCurrentTimerList)
    [Anonymous Symbol]                       0x20001118   Section        0  timers.o(.bss.pxCurrentTimerList)
    pxDelayedTaskList                        0x2000111c   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x2000111c   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxEnd                                    0x20001120   Data           4  heap_4.o(.bss.pxEnd)
    [Anonymous Symbol]                       0x20001120   Section        0  heap_4.o(.bss.pxEnd)
    pxOverflowDelayedTaskList                0x20001124   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x20001124   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxOverflowTimerList                      0x20001128   Data           4  timers.o(.bss.pxOverflowTimerList)
    [Anonymous Symbol]                       0x20001128   Section        0  timers.o(.bss.pxOverflowTimerList)
    pxReadyTasksLists                        0x2000112c   Data         100  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x2000112c   Section        0  tasks.o(.bss.pxReadyTasksLists)
    s_debugConsole                           0x200011bc   Data          20  fsl_debug_console.o(.bss.s_debugConsole)
    [Anonymous Symbol]                       0x200011bc   Section        0  fsl_debug_console.o(.bss.s_debugConsole)
    s_flexcanHandle                          0x200011d0   Data          16  fsl_flexcan.o(.bss.s_flexcanHandle)
    [Anonymous Symbol]                       0x200011d0   Section        0  fsl_flexcan.o(.bss.s_flexcanHandle)
    ucHeap                                   0x200012e4   Data       10240  heap_4.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x200012e4   Section        0  heap_4.o(.bss.ucHeap)
    ucMaxSysCallPriority                     0x20003ae4   Data           1  port.o(.bss.ucMaxSysCallPriority)
    [Anonymous Symbol]                       0x20003ae4   Section        0  port.o(.bss.ucMaxSysCallPriority)
    ulMaxPRIGROUPValue                       0x20003ae8   Data           4  port.o(.bss.ulMaxPRIGROUPValue)
    [Anonymous Symbol]                       0x20003ae8   Section        0  port.o(.bss.ulMaxPRIGROUPValue)
    uxCurrentNumberOfTasks                   0x20003aec   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x20003aec   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x20003af0   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x20003af0   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x20003af4   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x20003af4   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x20003af8   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x20003af8   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x20003afc   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x20003afc   Section        0  tasks.o(.bss.uxTopReadyPriority)
    xActiveTimerList1                        0x20003b04   Data          20  timers.o(.bss.xActiveTimerList1)
    [Anonymous Symbol]                       0x20003b04   Section        0  timers.o(.bss.xActiveTimerList1)
    xActiveTimerList2                        0x20003b18   Data          20  timers.o(.bss.xActiveTimerList2)
    [Anonymous Symbol]                       0x20003b18   Section        0  timers.o(.bss.xActiveTimerList2)
    xDelayedTaskList1                        0x20003b2c   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x20003b2c   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x20003b40   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x20003b40   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xFreeBytesRemaining                      0x20003b54   Data           4  heap_4.o(.bss.xFreeBytesRemaining)
    [Anonymous Symbol]                       0x20003b54   Section        0  heap_4.o(.bss.xFreeBytesRemaining)
    xIdleTaskHandle                          0x20003b58   Data           4  tasks.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x20003b58   Section        0  tasks.o(.bss.xIdleTaskHandle)
    xMinimumEverFreeBytesRemaining           0x20003b5c   Data           4  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    [Anonymous Symbol]                       0x20003b5c   Section        0  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    xNextTaskUnblockTime                     0x20003b60   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x20003b60   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x20003b64   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x20003b64   Section        0  tasks.o(.bss.xNumOfOverflows)
    xNumberOfSuccessfulAllocations           0x20003b68   Data           4  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    [Anonymous Symbol]                       0x20003b68   Section        0  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    xNumberOfSuccessfulFrees                 0x20003b6c   Data           4  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    [Anonymous Symbol]                       0x20003b6c   Section        0  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    xPendedTicks                             0x20003b70   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x20003b70   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x20003b74   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x20003b74   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x20003bc8   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x20003bc8   Section        0  tasks.o(.bss.xSchedulerRunning)
    xStart                                   0x20003bcc   Data           8  heap_4.o(.bss.xStart)
    [Anonymous Symbol]                       0x20003bcc   Section        0  heap_4.o(.bss.xStart)
    xSuspendedTaskList                       0x20003bd4   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x20003bd4   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x20003be8   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x20003be8   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x20003bfc   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x20003bfc   Section        0  tasks.o(.bss.xTickCount)
    xTimerQueue                              0x20003c00   Data           4  timers.o(.bss.xTimerQueue)
    [Anonymous Symbol]                       0x20003c00   Section        0  timers.o(.bss.xTimerQueue)
    xTimerTaskHandle                         0x20003c04   Data           4  timers.o(.bss.xTimerTaskHandle)
    [Anonymous Symbol]                       0x20003c04   Section        0  timers.o(.bss.xTimerTaskHandle)
    xYieldPending                            0x20003c08   Data           4  tasks.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x20003c08   Section        0  tasks.o(.bss.xYieldPending)
    __tagsym$$used.0                         0x30000400   Number         0  evkmimxrt1170_flexspi_nor_config.o(.boot_hdr.conf)
    __tagsym$$used.1                         0x30001000   Number         0  fsl_flexspi_nor_boot.o(.boot_hdr.ivt)
    __tagsym$$used.0                         0x30001020   Number         0  fsl_flexspi_nor_boot.o(.boot_hdr.boot_data)
    .ARM.Collect$$$$00000000                 0x30002400   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000003                 0x30002400   Section        4  entry4.o(.ARM.Collect$$$$00000003)
    .ARM.Collect$$$$00000004                 0x30002404   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x30002408   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x30002408   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x30002408   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x30002410   Data           4  entry4.o(.ARM.Collect$$$$00002714)
    .ARM.Collect$$$$0000000D                 0x30002410   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x30002410   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002714                 0x30002410   Section        4  entry4.o(.ARM.Collect$$$$00002714)
    [Anonymous Symbol]                       0x30002414   Section        0  startup_mimxrt1176_cm7.o(.text)
    .text                                    0x300026e8   Section        0  uldiv.o(.text)
    .text                                    0x3000274a   Section        0  memcpy.o(.text)
    .text                                    0x30002772   Section        0  memset.o(.text)
    .text                                    0x30002784   Section        0  strlen.o(.text)
    .text                                    0x30002792   Section        0  memcmp.o(.text)
    .text                                    0x300027ac   Section        0  llshl.o(.text)
    .text                                    0x300027ca   Section        0  llushr.o(.text)
    .text                                    0x300027ec   Section       48  init.o(.text)
    .text                                    0x3000281c   Section        0  __dczerorl2.o(.text)
    [Anonymous Symbol]                       0x30002878   Section        0  fsl_anatop_ai.o(.text.ANATOP_AI_Access)
    [Anonymous Symbol]                       0x30002bc0   Section        0  fsl_anatop_ai.o(.text.ANATOP_AI_Read)
    [Anonymous Symbol]                       0x30002bd0   Section        0  fsl_anatop_ai.o(.text.ANATOP_AI_Write)
    [Anonymous Symbol]                       0x30002be0   Section        0  fsl_anatop_ai.o(.text.ANATOP_AI_WriteWithMaskShift)
    ANATOP_PllConfigure                      0x30002c11   Thumb Code   158  fsl_clock.o(.text.ANATOP_PllConfigure)
    [Anonymous Symbol]                       0x30002c10   Section        0  fsl_clock.o(.text.ANATOP_PllConfigure)
    AppTaskCreate                            0x30002cb1   Thumb Code    80  flexcan_interrupt_transfer.o(.text.AppTaskCreate)
    [Anonymous Symbol]                       0x30002cb0   Section        0  flexcan_interrupt_transfer.o(.text.AppTaskCreate)
    [Anonymous Symbol]                       0x30002d28   Section        0  clock_config.o(.text.BOARD_BootClockRUN)
    [Anonymous Symbol]                       0x30003350   Section        0  board.o(.text.BOARD_ConfigMPU)
    [Anonymous Symbol]                       0x30003688   Section        0  board.o(.text.BOARD_InitDebugConsole)
    [Anonymous Symbol]                       0x300036e8   Section        0  pin_mux.o(.text.BOARD_InitPins)
    [Anonymous Symbol]                       0x30003750   Section        0  fsl_flexcan.o(.text.CAN1_DriverIRQHandler)
    [Anonymous Symbol]                       0x300037a8   Section        0  fsl_flexcan.o(.text.CAN2_DriverIRQHandler)
    [Anonymous Symbol]                       0x30003800   Section        0  fsl_flexcan.o(.text.CAN3_DriverIRQHandler)
    CANopenRx_Task                           0x30003859   Thumb Code   296  flexcan_interrupt_transfer.o(.text.CANopenRx_Task)
    [Anonymous Symbol]                       0x30003858   Section        0  flexcan_interrupt_transfer.o(.text.CANopenRx_Task)
    [Anonymous Symbol]                       0x300039e8   Section        0  fsl_clock.o(.text.CLOCK_DeinitAudioPll)
    [Anonymous Symbol]                       0x30003a38   Section        0  fsl_clock.o(.text.CLOCK_DeinitSysPll1)
    [Anonymous Symbol]                       0x30003a98   Section        0  fsl_clock.o(.text.CLOCK_GetFreq)
    [Anonymous Symbol]                       0x30003d80   Section        0  fsl_clock.o(.text.CLOCK_InitArmPll)
    [Anonymous Symbol]                       0x30003e58   Section        0  fsl_clock.o(.text.CLOCK_InitPfd)
    [Anonymous Symbol]                       0x30003f70   Section        0  fsl_clock.o(.text.CLOCK_InitSysPll2)
    [Anonymous Symbol]                       0x30004070   Section        0  fsl_clock.o(.text.CLOCK_InitSysPll3)
    [Anonymous Symbol]                       0x30004100   Section        0  fsl_clock.o(.text.CLOCK_InitVideoPll)
    [Anonymous Symbol]                       0x300041d8   Section        0  fsl_clock.o(.text.CLOCK_OSC_EnableOscRc400M)
    [Anonymous Symbol]                       0x300041f8   Section        0  fsl_clock.o(.text.CLOCK_OSC_Set1MHzOutputBehavior)
    [Anonymous Symbol]                       0x30004228   Section        0  fsl_clock.o(.text.CLOCK_SetPllBypass)
    [Anonymous Symbol]                       0x300042c0   Section        0  lifegrd.o(.text.ConsumerHeartbeatAlarm)
    [Anonymous Symbol]                       0x300042e8   Section        0  fsl_dcdc.o(.text.DCDC_BootIntoDCM)
    [Anonymous Symbol]                       0x30004328   Section        0  fsl_debug_console.o(.text.DbgConsole_Init)
    [Anonymous Symbol]                       0x30004380   Section        0  fsl_debug_console.o(.text.DbgConsole_Printf)
    [Anonymous Symbol]                       0x300043a0   Section        0  fsl_debug_console.o(.text.DbgConsole_Vprintf)
    [Anonymous Symbol]                       0x300047c8   Section        0  timer.o(.text.DelAlarm)
    [Anonymous Symbol]                       0x30004800   Section        0  fsl_flexcan.o(.text.FLEXCAN_CalculateImprovedTimingValues)
    [Anonymous Symbol]                       0x30004948   Section        0  fsl_flexcan.o(.text.FLEXCAN_GetDefaultConfig)
    [Anonymous Symbol]                       0x300049c0   Section        0  fsl_flexcan.o(.text.FLEXCAN_Init)
    [Anonymous Symbol]                       0x30004ca0   Section        0  fsl_flexcan.o(.text.FLEXCAN_ReadFDRxMb)
    [Anonymous Symbol]                       0x30004e00   Section        0  fsl_flexcan.o(.text.FLEXCAN_ReadRxMb)
    FLEXCAN_Reset                            0x30004eb9   Thumb Code   196  fsl_flexcan.o(.text.FLEXCAN_Reset)
    [Anonymous Symbol]                       0x30004eb8   Section        0  fsl_flexcan.o(.text.FLEXCAN_Reset)
    [Anonymous Symbol]                       0x30004fa8   Section        0  fsl_flexcan.o(.text.FLEXCAN_SetFDTxMbConfig)
    [Anonymous Symbol]                       0x300050b8   Section        0  fsl_flexcan.o(.text.FLEXCAN_SetRxMbConfig)
    [Anonymous Symbol]                       0x30005170   Section        0  fsl_flexcan.o(.text.FLEXCAN_SetRxMbGlobalMask)
    [Anonymous Symbol]                       0x300051b0   Section        0  fsl_flexcan.o(.text.FLEXCAN_SetTxMbConfig)
    [Anonymous Symbol]                       0x30005220   Section        0  fsl_flexcan.o(.text.FLEXCAN_TransferAbortReceive)
    [Anonymous Symbol]                       0x300052c8   Section        0  fsl_flexcan.o(.text.FLEXCAN_TransferAbortSend)
    [Anonymous Symbol]                       0x300053d8   Section        0  fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle)
    [Anonymous Symbol]                       0x300054e8   Section        0  fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortReceive)
    [Anonymous Symbol]                       0x30005590   Section        0  fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortSend)
    [Anonymous Symbol]                       0x300056b8   Section        0  fsl_flexcan.o(.text.FLEXCAN_TransferHandleIRQ)
    [Anonymous Symbol]                       0x30005ab8   Section        0  fsl_flexcan.o(.text.FLEXCAN_TransferReceiveNonBlocking)
    [Anonymous Symbol]                       0x30005b90   Section        0  fsl_flexcan.o(.text.FLEXCAN_TransferSendNonBlocking)
    [Anonymous Symbol]                       0x30005c80   Section        0  fsl_flexcan.o(.text.FLEXCAN_WriteTxMb)
    [Anonymous Symbol]                       0x30005d70   Section        0  flexcan_interrupt_transfer.o(.text.GPT2_IRQHandler)
    [Anonymous Symbol]                       0x30005d88   Section        0  fsl_gpt.o(.text.GPT_GetDefaultConfig)
    [Anonymous Symbol]                       0x30005dd0   Section        0  fsl_gpt.o(.text.GPT_Init)
    [Anonymous Symbol]                       0x30005f60   Section        0  lifegrd.o(.text.GuardTimeAlarm)
    [Anonymous Symbol]                       0x30005fd0   Section        0  fsl_adapter_lpuart.o(.text.HAL_UartInit)
    [Anonymous Symbol]                       0x30006118   Section        0  fsl_adapter_lpuart.o(.text.HAL_UartReceiveBlocking)
    [Anonymous Symbol]                       0x30006188   Section        0  fsl_adapter_lpuart.o(.text.HAL_UartSendBlocking)
    [Anonymous Symbol]                       0x300061f0   Section        0  fsl_lpuart.o(.text.LPUART10_DriverIRQHandler)
    [Anonymous Symbol]                       0x30006218   Section        0  fsl_lpuart.o(.text.LPUART11_DriverIRQHandler)
    [Anonymous Symbol]                       0x30006240   Section        0  fsl_lpuart.o(.text.LPUART12_DriverIRQHandler)
    [Anonymous Symbol]                       0x30006268   Section        0  fsl_lpuart.o(.text.LPUART1_DriverIRQHandler)
    [Anonymous Symbol]                       0x30006290   Section        0  fsl_lpuart.o(.text.LPUART2_DriverIRQHandler)
    [Anonymous Symbol]                       0x300062b8   Section        0  fsl_lpuart.o(.text.LPUART3_DriverIRQHandler)
    [Anonymous Symbol]                       0x300062e0   Section        0  fsl_lpuart.o(.text.LPUART4_DriverIRQHandler)
    [Anonymous Symbol]                       0x30006308   Section        0  fsl_lpuart.o(.text.LPUART5_DriverIRQHandler)
    [Anonymous Symbol]                       0x30006330   Section        0  fsl_lpuart.o(.text.LPUART6_DriverIRQHandler)
    [Anonymous Symbol]                       0x30006358   Section        0  fsl_lpuart.o(.text.LPUART7_DriverIRQHandler)
    [Anonymous Symbol]                       0x30006380   Section        0  fsl_lpuart.o(.text.LPUART8_DriverIRQHandler)
    [Anonymous Symbol]                       0x300063a8   Section        0  fsl_lpuart.o(.text.LPUART9_DriverIRQHandler)
    [Anonymous Symbol]                       0x300063d0   Section        0  fsl_lpuart.o(.text.LPUART_GetDefaultConfig)
    [Anonymous Symbol]                       0x30006410   Section        0  fsl_lpuart.o(.text.LPUART_Init)
    [Anonymous Symbol]                       0x300066a0   Section        0  fsl_lpuart.o(.text.LPUART_ReadBlocking)
    [Anonymous Symbol]                       0x300067b8   Section        0  fsl_lpuart.o(.text.LPUART_WriteBlocking)
    [Anonymous Symbol]                       0x300067f0   Section        0  sync.o(.text.OnCOB_ID_SyncUpdate)
    [Anonymous Symbol]                       0x30006800   Section        0  lifegrd.o(.text.OnHeartbeatProducerUpdate)
    [Anonymous Symbol]                       0x30006840   Section        0  lifegrd.o(.text.OnNodeGuardUpdate)
    [Anonymous Symbol]                       0x30006860   Section        0  emcy.o(.text.OnNumberOfErrorsUpdate)
    [Anonymous Symbol]                       0x30006888   Section        0  pdo.o(.text.PDOEventTimerAlarm)
    [Anonymous Symbol]                       0x300068a8   Section        0  pdo.o(.text.PDOInhibitTimerAlarm)
    [Anonymous Symbol]                       0x300068d8   Section        0  pdo.o(.text.PDOInit)
    [Anonymous Symbol]                       0x30006940   Section        0  pdo.o(.text.PDOStop)
    [Anonymous Symbol]                       0x300069b0   Section        0  fsl_pmu.o(.text.PMU_EnableBodyBias)
    [Anonymous Symbol]                       0x30006a80   Section        0  fsl_pmu.o(.text.PMU_StaticEnableLpsrAnaLdoBypassMode)
    [Anonymous Symbol]                       0x30006b18   Section        0  fsl_pmu.o(.text.PMU_StaticEnableLpsrDigLdoBypassMode)
    [Anonymous Symbol]                       0x30006b88   Section        0  fsl_pmu.o(.text.PMU_StaticEnablePllLdo)
    [Anonymous Symbol]                       0x30006bd0   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x30006c30   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x30006c38   Section        0  lifegrd.o(.text.ProducerHeartbeatAlarm)
    [Anonymous Symbol]                       0x30006c88   Section        0  objacces.o(.text.RegisterSetODentryCallBack)
    [Anonymous Symbol]                       0x30006cb0   Section        0  fsl_common_arm.o(.text.SDK_DelayAtLeastUs)
    loop                                     0x30006cda   Number         0  fsl_common_arm.o(.text.SDK_DelayAtLeastUs)
    [Anonymous Symbol]                       0x30006d08   Section        0  sdo.o(.text.SDOTimeoutAlarm)
    [Anonymous Symbol]                       0x30006dd8   Section        0  sdo.o(.text.SDOlineToObjdict)
    [Anonymous Symbol]                       0x30006e20   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x30006e40   Number         0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x30006e48   Section        0  timer.o(.text.SetAlarm)
    [Anonymous Symbol]                       0x30006ef0   Section        0  slave.o(.text.Slave_scanIndexOD)
    [Anonymous Symbol]                       0x30007020   Section        0  slave.o(.text.Slave_valueRangeTest)
    [Anonymous Symbol]                       0x30007038   Section        0  sync.o(.text.SyncAlarm)
    [Anonymous Symbol]                       0x30007080   Section        0  port.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x300070b8   Section        0  system_mimxrt1176_cm7.o(.text.SystemInit)
    [Anonymous Symbol]                       0x300071d8   Section        0  system_mimxrt1176_cm7.o(.text.SystemInitHook)
    [Anonymous Symbol]                       0x300071e0   Section        0  pdo.o(.text.TPDO_Communication_Parameter_Callback)
    [Anonymous Symbol]                       0x30007260   Section        0  timer.o(.text.TimeDispatch)
    [Anonymous Symbol]                       0x30007338   Section        0  pdo.o(.text._RxPDO_EventTimers_Handler)
    [Anonymous Symbol]                       0x30007340   Section        0  fsl_assert.o(.text.__aeabi_assert)
    [Anonymous Symbol]                       0x30007380   Section        0  objacces.o(.text._getODentry)
    [Anonymous Symbol]                       0x30007430   Section        0  lifegrd.o(.text._heartbeatError)
    [Anonymous Symbol]                       0x30007438   Section        0  states.o(.text._initialisation)
    [Anonymous Symbol]                       0x30007440   Section        0  lifegrd.o(.text._nodeguardError)
    [Anonymous Symbol]                       0x30007448   Section        0  states.o(.text._operational)
    [Anonymous Symbol]                       0x30007450   Section        0  lifegrd.o(.text._post_SlaveBootup)
    [Anonymous Symbol]                       0x30007458   Section        0  lifegrd.o(.text._post_SlaveStateChange)
    [Anonymous Symbol]                       0x30007460   Section        0  sync.o(.text._post_TPDO)
    [Anonymous Symbol]                       0x30007468   Section        0  emcy.o(.text._post_emcy)
    [Anonymous Symbol]                       0x30007470   Section        0  sync.o(.text._post_sync)
    [Anonymous Symbol]                       0x30007478   Section        0  states.o(.text._preOperational)
    [Anonymous Symbol]                       0x30007490   Section        0  pdo.o(.text._sendPDOevent)
    [Anonymous Symbol]                       0x300075e8   Section        0  objacces.o(.text._setODentry)
    [Anonymous Symbol]                       0x300076d8   Section        0  states.o(.text._stopped)
    [Anonymous Symbol]                       0x300076e0   Section        0  objacces.o(.text._storeODSubIndex)
    [Anonymous Symbol]                       0x300076e8   Section        0  pdo.o(.text.buildPDO)
    [Anonymous Symbol]                       0x30007870   Section        0  states.o(.text.canDispatch)
    [Anonymous Symbol]                       0x300078d8   Section        0  flexcan_interrupt_transfer.o(.text.canSend)
    [Anonymous Symbol]                       0x30007970   Section        0  emcy.o(.text.emergencyInit)
    [Anonymous Symbol]                       0x30007990   Section        0  emcy.o(.text.emergencyStop)
    [Anonymous Symbol]                       0x30007998   Section        0  sdo.o(.text.failedSDO)
    flexcan_callback                         0x30007a61   Thumb Code   100  flexcan_interrupt_transfer.o(.text.flexcan_callback)
    [Anonymous Symbol]                       0x30007a60   Section        0  flexcan_interrupt_transfer.o(.text.flexcan_callback)
    [Anonymous Symbol]                       0x30007ac8   Section        0  flexcan_interrupt_transfer.o(.text.getElapsedTime)
    [Anonymous Symbol]                       0x30007ad8   Section        0  states.o(.text.getNodeId)
    [Anonymous Symbol]                       0x30007ae0   Section        0  lifegrd.o(.text.heartbeatInit)
    [Anonymous Symbol]                       0x30007b80   Section        0  sdo.o(.text.initSDOline)
    [Anonymous Symbol]                       0x30007c20   Section        0  lifegrd.o(.text.lifeGuardInit)
    [Anonymous Symbol]                       0x30007c38   Section        0  lifegrd.o(.text.lifeGuardStop)
    [Anonymous Symbol]                       0x30007c88   Section        0  sdo.o(.text.lineToSDO)
    [Anonymous Symbol]                       0x30007cd8   Section        0  flexcan_interrupt_transfer.o(.text.main)
    [Anonymous Symbol]                       0x30007fb0   Section        0  nmtmaster.o(.text.masterSendNMTnodeguard)
    [Anonymous Symbol]                       0x30007fd0   Section        0  nmtmaster.o(.text.masterSendNMTstateChange)
    [Anonymous Symbol]                       0x30007ff0   Section        0  lifegrd.o(.text.nodeguardInit)
    [Anonymous Symbol]                       0x30008078   Section        0  sdo.o(.text.objdictToSDOline)
    [Anonymous Symbol]                       0x300080c0   Section        0  emcy.o(.text.proceedEMCY)
    [Anonymous Symbol]                       0x300080f0   Section        0  nmtslave.o(.text.proceedNMTstateChange)
    [Anonymous Symbol]                       0x300081a8   Section        0  lifegrd.o(.text.proceedNODE_GUARD)
    [Anonymous Symbol]                       0x300082b0   Section        0  pdo.o(.text.proceedPDO)
    [Anonymous Symbol]                       0x300085c0   Section        0  sdo.o(.text.proceedSDO)
    [Anonymous Symbol]                       0x30009870   Section        0  sync.o(.text.proceedSYNC)
    prvAddCurrentTaskToDelayedList           0x300098a1   Thumb Code   192  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x300098a0   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvCheckForValidListAndQueue             0x30009961   Thumb Code   104  timers.o(.text.prvCheckForValidListAndQueue)
    [Anonymous Symbol]                       0x30009960   Section        0  timers.o(.text.prvCheckForValidListAndQueue)
    prvIdleTask                              0x300099d1   Thumb Code   118  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x300099d0   Section        0  tasks.o(.text.prvIdleTask)
    prvPortStartFirstTask                    0x30009a49   Thumb Code    40  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x30009a48   Section        0  port.o(.text.prvPortStartFirstTask)
    prvProcessExpiredTimer                   0x30009a71   Thumb Code   124  timers.o(.text.prvProcessExpiredTimer)
    [Anonymous Symbol]                       0x30009a70   Section        0  timers.o(.text.prvProcessExpiredTimer)
    prvTaskExitError                         0x30009af1   Thumb Code    54  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x30009af0   Section        0  port.o(.text.prvTaskExitError)
    prvTimerTask                             0x30009b29   Thumb Code   574  timers.o(.text.prvTimerTask)
    [Anonymous Symbol]                       0x30009b28   Section        0  timers.o(.text.prvTimerTask)
    prvUnlockQueue                           0x30009d69   Thumb Code   122  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x30009d68   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x30009de8   Section        0  heap_4.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x30009f78   Section        0  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x30009fa8   Section        0  sdo.o(.text.resetSDO)
    [Anonymous Symbol]                       0x3000a000   Section        0  sdo.o(.text.resetSDOline)
    [Anonymous Symbol]                       0x3000a058   Section        0  pdo.o(.text.sendOnePDOevent)
    [Anonymous Symbol]                       0x3000a198   Section        0  sdo.o(.text.sendSDO)
    [Anonymous Symbol]                       0x3000a238   Section        0  sdo.o(.text.sendSDOabort)
    [Anonymous Symbol]                       0x3000a2e8   Section        0  states.o(.text.setNodeId)
    [Anonymous Symbol]                       0x3000a430   Section        0  states.o(.text.setState)
    [Anonymous Symbol]                       0x3000a4c8   Section        0  flexcan_interrupt_transfer.o(.text.setTimer)
    [Anonymous Symbol]                       0x3000a4d8   Section        0  nmtslave.o(.text.slaveSendBootUp)
    [Anonymous Symbol]                       0x3000a508   Section        0  sync.o(.text.startSYNC)
    [Anonymous Symbol]                       0x3000a598   Section        0  sync.o(.text.stopSYNC)
    [Anonymous Symbol]                       0x3000a5c8   Section        0  states.o(.text.switchCommunicationState)
    [Anonymous Symbol]                       0x3000a6e0   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x3000a710   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x3000a728   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x3000a730   Section        0  list.o(.text.vListInsert)
    [Anonymous Symbol]                       0x3000a770   Section        0  list.o(.text.vListInsertEnd)
    vPortEnableVFP                           0x3000a791   Thumb Code    20  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x3000a790   Section        0  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x3000a7a8   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x3000a800   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x3000a838   Section        0  heap_4.o(.text.vPortFree)
    [Anonymous Symbol]                       0x3000a908   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x3000a940   Section        0  queue.o(.text.vQueueAddToRegistry)
    [Anonymous Symbol]                       0x3000a9a0   Section        0  queue.o(.text.vQueueWaitForMessageRestricted)
    [Anonymous Symbol]                       0x3000a9e8   Section        0  tasks.o(.text.vTaskDelete)
    [Anonymous Symbol]                       0x3000ab10   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x3000ab30   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x3000ab40   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x3000ab80   Section        0  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    [Anonymous Symbol]                       0x3000abf8   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x3000aca0   Section        0  tasks.o(.text.vTaskSuspendAll)
    __tagsym$$used.0                         0x3000acb0   Number         0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x3000acb0   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x3000ad40   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x3000ae38   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x3000aed0   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x3000b088   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x3000b118   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x3000b318   Section        0  tasks.o(.text.xTaskGetSchedulerState)
    [Anonymous Symbol]                       0x3000b340   Section        0  tasks.o(.text.xTaskGetTickCount)
    [Anonymous Symbol]                       0x3000b350   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x3000b4f8   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x3000b5f8   Section        0  tasks.o(.text.xTaskResumeAll)
    [Anonymous Symbol]                       0x3000b780   Section        0  timers.o(.text.xTimerCreateTimerTask)
    i.__scatterload_copy                     0x3000b7e4   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x3000b7f2   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x3000b7f4   Section       14  handlers.o(i.__scatterload_zeroinit)
    .L__const.setState.newCommunicationState 0x3000b802   Data           7  states.o(.rodata..L__const.setState.newCommunicationState)
    .L__const.setState.newCommunicationState.1 0x3000b809   Data           7  states.o(.rodata..L__const.setState.newCommunicationState.1)
    .L__const.setState.newCommunicationState.2 0x3000b810   Data           7  states.o(.rodata..L__const.setState.newCommunicationState.2)
    .L__const.setState.newCommunicationState.3 0x3000b817   Data           7  states.o(.rodata..L__const.setState.newCommunicationState.3)
    s_flexcanBases                           0x3000b904   Data          16  fsl_flexcan.o(.rodata.cst16)
    [Anonymous Symbol]                       0x3000b904   Section        0  fsl_flexcan.o(.rodata.cst16)
    s_flexcanClock                           0x3000b914   Data           4  fsl_flexcan.o(.rodata.cst4)
    [Anonymous Symbol]                       0x3000b914   Section        0  fsl_flexcan.o(.rodata.cst4)
    s_flexcanMbIRQ                           0x3000b918   Data           8  fsl_flexcan.o(.rodata.cst8)
    [Anonymous Symbol]                       0x3000b918   Section        0  fsl_flexcan.o(.rodata.cst8)
    s_LpuartAdapterBase                      0x3000b920   Data          52  fsl_adapter_lpuart.o(.rodata.s_LpuartAdapterBase)
    [Anonymous Symbol]                       0x3000b920   Section        0  fsl_adapter_lpuart.o(.rodata.s_LpuartAdapterBase)
    s_clockSourceName                        0x3000b954   Data         632  flexcan_interrupt_transfer.o(.rodata.s_clockSourceName)
    [Anonymous Symbol]                       0x3000b954   Section        0  flexcan_interrupt_transfer.o(.rodata.s_clockSourceName)
    s_clockSourceName                        0x3000bbcc   Data         632  board.o(.rodata.s_clockSourceName)
    [Anonymous Symbol]                       0x3000bbcc   Section        0  board.o(.rodata.s_clockSourceName)
    s_clockSourceName                        0x3000be44   Data         632  clock_config.o(.rodata.s_clockSourceName)
    [Anonymous Symbol]                       0x3000be44   Section        0  clock_config.o(.rodata.s_clockSourceName)
    s_clockSourceName                        0x3000c0bc   Data         632  fsl_clock.o(.rodata.s_clockSourceName)
    [Anonymous Symbol]                       0x3000c0bc   Section        0  fsl_clock.o(.rodata.s_clockSourceName)
    s_gptBases                               0x3000c334   Data          28  fsl_gpt.o(.rodata.s_gptBases)
    [Anonymous Symbol]                       0x3000c334   Section        0  fsl_gpt.o(.rodata.s_gptBases)
    s_gptClocks                              0x3000c350   Data           7  fsl_gpt.o(.rodata.s_gptClocks)
    [Anonymous Symbol]                       0x3000c350   Section        0  fsl_gpt.o(.rodata.s_gptClocks)
    s_lpuartBases                            0x3000c358   Data          52  fsl_lpuart.o(.rodata.s_lpuartBases)
    [Anonymous Symbol]                       0x3000c358   Section        0  fsl_lpuart.o(.rodata.s_lpuartBases)
    s_lpuartClock                            0x3000c38c   Data          13  fsl_lpuart.o(.rodata.s_lpuartClock)
    [Anonymous Symbol]                       0x3000c38c   Section        0  fsl_lpuart.o(.rodata.s_lpuartClock)
    .L.str.9                                 0x3000c399   Data          76  flexcan_interrupt_transfer.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x3000c399   Section        0  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.3                                 0x3000c3e5   Data          43  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.2                                 0x3000c410   Data          49  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.1                                 0x3000c441   Data          27  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.4                                 0x3000c45c   Data          37  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.5                                 0x3000c481   Data          37  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str                                   0x3000c4a6   Data          14  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.1                                 0x3000c4b4   Data          60  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.14                                0x3000c4b4   Data          60  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.16                                0x3000c4b4   Data          60  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.5                                 0x3000c4b4   Data          60  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.15                                0x3000c4f0   Data           5  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.2                                 0x3000c4f0   Data           5  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.4                                 0x3000c4f0   Data           5  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.1                                 0x3000c4f5   Data          11  board.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x3000c4f5   Section        0  board.o(.rodata.str1.1)
    .L.str.17                                0x3000c500   Data          45  fsl_flexcan.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x3000c500   Section        0  fsl_flexcan.o(.rodata.str1.1)
    .L.str.3                                 0x3000c52d   Data         117  fsl_flexcan.o(.rodata.str1.1)
    .L.str.27                                0x3000c60b   Data          51  fsl_flexcan.o(.rodata.str1.1)
    .L.str.11                                0x3000c614   Data          42  fsl_flexcan.o(.rodata.str1.1)
    .L.str                                   0x3000c63e   Data          38  fsl_flexcan.o(.rodata.str1.1)
    .L.str.7                                 0x3000c641   Data         105  fsl_flexcan.o(.rodata.str1.1)
    .L.str.12                                0x3000c664   Data          35  fsl_flexcan.o(.rodata.str1.1)
    .L.str.28                                0x3000c687   Data          44  fsl_flexcan.o(.rodata.str1.1)
    .L.str.4                                 0x3000c6b3   Data          88  fsl_flexcan.o(.rodata.str1.1)
    .L.str.13                                0x3000c70b   Data          27  fsl_flexcan.o(.rodata.str1.1)
    .L.str.1                                 0x3000c726   Data          62  fsl_flexcan.o(.rodata.str1.1)
    .L.str.21                                0x3000c73f   Data           6  fsl_flexcan.o(.rodata.str1.1)
    .L.str                                   0x3000c764   Data          15  fsl_flexcan.o(.rodata.str1.1)
    .L.str.25                                0x3000c764   Data          15  fsl_flexcan.o(.rodata.str1.1)
    .L.str.24                                0x3000c773   Data          17  fsl_flexcan.o(.rodata.str1.1)
    .L.str.22                                0x3000c784   Data          17  fsl_flexcan.o(.rodata.str1.1)
    .L.str.5                                 0x3000c795   Data           6  fsl_flexcan.o(.rodata.str1.1)
    .L.str.2                                 0x3000c79b   Data          16  fsl_flexcan.o(.rodata.str1.1)
    .L.str.26                                0x3000c7ab   Data          16  fsl_flexcan.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x3000c7bb   Section        0  fsl_clock.o(.rodata.str1.1)
    .L.str                                   0x3000c817   Data         113  fsl_clock.o(.rodata.str1.1)
    .L.str.12                                0x3000c897   Data          12  fsl_clock.o(.rodata.str1.1)
    .L.str.7                                 0x3000c8a3   Data          31  fsl_clock.o(.rodata.str1.1)
    .L.str.9                                 0x3000c8ac   Data          15  fsl_clock.o(.rodata.str1.1)
    .L.str.10                                0x3000c8bb   Data          47  fsl_clock.o(.rodata.str1.1)
    .L.str.8                                 0x3000c8c2   Data          31  fsl_clock.o(.rodata.str1.1)
    .L.str.1                                 0x3000c8e1   Data          60  fsl_clock.o(.rodata.str1.1)
    .L.str.11                                0x3000c8ea   Data          45  fsl_clock.o(.rodata.str1.1)
    .L.str.1                                 0x3000c91d   Data          65  fsl_common_arm.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x3000c91d   Section        0  fsl_common_arm.o(.rodata.str1.1)
    .L.str                                   0x3000c95e   Data          37  fsl_lpuart.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x3000c95e   Section        0  fsl_lpuart.o(.rodata.str1.1)
    .L.str.5                                 0x3000c990   Data          13  fsl_lpuart.o(.rodata.str1.1)
    .L.str.9                                 0x3000c990   Data          13  fsl_lpuart.o(.rodata.str1.1)
    .L.str.1                                 0x3000c99d   Data          61  fsl_lpuart.o(.rodata.str1.1)
    .L.str.2                                 0x3000c9c0   Data          15  fsl_lpuart.o(.rodata.str1.1)
    .L.str.3                                 0x3000c9ef   Data          15  fsl_lpuart.o(.rodata.str1.1)
    .L.str.6                                 0x3000c9fe   Data          71  fsl_lpuart.o(.rodata.str1.1)
    .L.str.5                                 0x3000ca45   Data          71  fsl_lpuart.o(.rodata.str1.1)
    .L.str.8                                 0x3000ca6c   Data          13  fsl_lpuart.o(.rodata.str1.1)
    .L.str.11                                0x3000ca86   Data          13  fsl_lpuart.o(.rodata.str1.1)
    .L.str.13                                0x3000ca93   Data          21  fsl_lpuart.o(.rodata.str1.1)
    .L.str.3                                 0x3000caa7   Data          34  fsl_gpt.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x3000caa7   Section        0  fsl_gpt.o(.rodata.str1.1)
    .L.str.14                                0x3000caa8   Data          14  fsl_lpuart.o(.rodata.str1.1)
    .L.str.1                                 0x3000cac9   Data          58  fsl_gpt.o(.rodata.str1.1)
    .L.str.3                                 0x3000cb03   Data          73  fsl_adapter_lpuart.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x3000cb03   Section        0  fsl_adapter_lpuart.o(.rodata.str1.1)
    .L.str.6                                 0x3000cb4c   Data          12  fsl_adapter_lpuart.o(.rodata.str1.1)
    .L.str.1                                 0x3000cb58   Data          58  fsl_adapter_lpuart.o(.rodata.str1.1)
    VTOR                                     0xe000ed08   Number         0  startup_mimxrt1176_cm7.o ABSOLUTE

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPv5_D16$PE$PLD8$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    Slave_Data                               0x20000000   Data         576  slave.o(.data.Slave_Data)
    Slave_Index1000                          0x20000240   Data          16  slave.o(.data.Slave_Index1000)
    Slave_Index1001                          0x20000250   Data          16  slave.o(.data.Slave_Index1001)
    Slave_Index1017                          0x20000260   Data          16  slave.o(.data.Slave_Index1017)
    Slave_Index1018                          0x20000270   Data          80  slave.o(.data.Slave_Index1018)
    Slave_Index1200                          0x200002c0   Data          48  slave.o(.data.Slave_Index1200)
    Slave_Index1400                          0x200002f0   Data         112  slave.o(.data.Slave_Index1400)
    Slave_Index1401                          0x20000360   Data         112  slave.o(.data.Slave_Index1401)
    Slave_Index1402                          0x200003d0   Data         112  slave.o(.data.Slave_Index1402)
    Slave_Index1403                          0x20000440   Data         112  slave.o(.data.Slave_Index1403)
    Slave_Index1600                          0x200004b0   Data         144  slave.o(.data.Slave_Index1600)
    Slave_Index1601                          0x20000540   Data         144  slave.o(.data.Slave_Index1601)
    Slave_Index1602                          0x200005d0   Data         144  slave.o(.data.Slave_Index1602)
    Slave_Index1603                          0x20000660   Data         144  slave.o(.data.Slave_Index1603)
    Slave_Index1800                          0x200006f0   Data         112  slave.o(.data.Slave_Index1800)
    Slave_Index1801                          0x20000760   Data         112  slave.o(.data.Slave_Index1801)
    Slave_Index1802                          0x200007d0   Data         112  slave.o(.data.Slave_Index1802)
    Slave_Index1803                          0x20000840   Data         112  slave.o(.data.Slave_Index1803)
    Slave_Index1A00                          0x200008b0   Data         144  slave.o(.data.Slave_Index1A00)
    Slave_Index1A01                          0x20000940   Data         144  slave.o(.data.Slave_Index1A01)
    Slave_Index1A02                          0x200009d0   Data         144  slave.o(.data.Slave_Index1A02)
    Slave_Index1A03                          0x20000a60   Data         144  slave.o(.data.Slave_Index1A03)
    Slave_Index2000                          0x20000af0   Data          16  slave.o(.data.Slave_Index2000)
    Slave_Index2001                          0x20000b00   Data          16  slave.o(.data.Slave_Index2001)
    Slave_Index2002                          0x20000b10   Data          16  slave.o(.data.Slave_Index2002)
    Slave_PDO_status                         0x20000b20   Data          72  slave.o(.data.Slave_PDO_status)
    Slave_highestSubIndex_obj1018            0x20000b68   Data           1  slave.o(.data.Slave_highestSubIndex_obj1018)
    Slave_highestSubIndex_obj1200            0x20000b69   Data           1  slave.o(.data.Slave_highestSubIndex_obj1200)
    Slave_highestSubIndex_obj1400            0x20000b6a   Data           1  slave.o(.data.Slave_highestSubIndex_obj1400)
    Slave_highestSubIndex_obj1401            0x20000b6b   Data           1  slave.o(.data.Slave_highestSubIndex_obj1401)
    Slave_highestSubIndex_obj1402            0x20000b6c   Data           1  slave.o(.data.Slave_highestSubIndex_obj1402)
    Slave_highestSubIndex_obj1403            0x20000b6d   Data           1  slave.o(.data.Slave_highestSubIndex_obj1403)
    Slave_highestSubIndex_obj1600            0x20000b6e   Data           1  slave.o(.data.Slave_highestSubIndex_obj1600)
    Slave_highestSubIndex_obj1601            0x20000b6f   Data           1  slave.o(.data.Slave_highestSubIndex_obj1601)
    Slave_highestSubIndex_obj1602            0x20000b70   Data           1  slave.o(.data.Slave_highestSubIndex_obj1602)
    Slave_highestSubIndex_obj1603            0x20000b71   Data           1  slave.o(.data.Slave_highestSubIndex_obj1603)
    Slave_highestSubIndex_obj1800            0x20000b72   Data           1  slave.o(.data.Slave_highestSubIndex_obj1800)
    Slave_highestSubIndex_obj1801            0x20000b73   Data           1  slave.o(.data.Slave_highestSubIndex_obj1801)
    Slave_highestSubIndex_obj1802            0x20000b74   Data           1  slave.o(.data.Slave_highestSubIndex_obj1802)
    Slave_highestSubIndex_obj1803            0x20000b75   Data           1  slave.o(.data.Slave_highestSubIndex_obj1803)
    Slave_highestSubIndex_obj1A00            0x20000b76   Data           1  slave.o(.data.Slave_highestSubIndex_obj1A00)
    Slave_highestSubIndex_obj1A01            0x20000b77   Data           1  slave.o(.data.Slave_highestSubIndex_obj1A01)
    Slave_highestSubIndex_obj1A02            0x20000b78   Data           1  slave.o(.data.Slave_highestSubIndex_obj1A02)
    Slave_highestSubIndex_obj1A03            0x20000b79   Data           1  slave.o(.data.Slave_highestSubIndex_obj1A03)
    Slave_obj1014                            0x20000b7c   Data           4  slave.o(.data.Slave_obj1014)
    Slave_obj1017                            0x20000b80   Data           2  slave.o(.data.Slave_obj1017)
    Slave_obj1200_COB_ID_Client_to_Server_Receive_SDO 0x20000b84   Data           4  slave.o(.data.Slave_obj1200_COB_ID_Client_to_Server_Receive_SDO)
    Slave_obj1200_COB_ID_Server_to_Client_Transmit_SDO 0x20000b88   Data           4  slave.o(.data.Slave_obj1200_COB_ID_Server_to_Client_Transmit_SDO)
    Slave_obj1400_COB_ID_used_by_PDO         0x20000b8c   Data           4  slave.o(.data.Slave_obj1400_COB_ID_used_by_PDO)
    Slave_obj1401_COB_ID_used_by_PDO         0x20000b90   Data           4  slave.o(.data.Slave_obj1401_COB_ID_used_by_PDO)
    Slave_obj1402_COB_ID_used_by_PDO         0x20000b94   Data           4  slave.o(.data.Slave_obj1402_COB_ID_used_by_PDO)
    Slave_obj1403_COB_ID_used_by_PDO         0x20000b98   Data           4  slave.o(.data.Slave_obj1403_COB_ID_used_by_PDO)
    Slave_obj1800_COB_ID_used_by_PDO         0x20000b9c   Data           4  slave.o(.data.Slave_obj1800_COB_ID_used_by_PDO)
    Slave_obj1800_Event_Timer                0x20000ba0   Data           2  slave.o(.data.Slave_obj1800_Event_Timer)
    Slave_obj1800_Inhibit_Time               0x20000ba2   Data           2  slave.o(.data.Slave_obj1800_Inhibit_Time)
    Slave_obj1800_Transmission_Type          0x20000ba4   Data           1  slave.o(.data.Slave_obj1800_Transmission_Type)
    Slave_obj1801_COB_ID_used_by_PDO         0x20000ba8   Data           4  slave.o(.data.Slave_obj1801_COB_ID_used_by_PDO)
    Slave_obj1802_COB_ID_used_by_PDO         0x20000bac   Data           4  slave.o(.data.Slave_obj1802_COB_ID_used_by_PDO)
    Slave_obj1803_COB_ID_used_by_PDO         0x20000bb0   Data           4  slave.o(.data.Slave_obj1803_COB_ID_used_by_PDO)
    Slave_obj1A00                            0x20000bb4   Data          32  slave.o(.data.Slave_obj1A00)
    SystemCoreClock                          0x20000bd4   Data           4  system_mimxrt1176_cm7.o(.data.SystemCoreClock)
    ZONE_ONE                                 0x20000bd8   Data           1  slave.o(.data.ZONE_ONE)
    ZONE_THREE                               0x20000bd9   Data           1  slave.o(.data.ZONE_THREE)
    ZONE_TWO                                 0x20000bda   Data           1  slave.o(.data.ZONE_TWO)
    last_timer_raw                           0x20000bdc   Data           2  timer.o(.data.last_timer_raw)
    s_lpuartIsr                              0x20000be4   Data          52  fsl_lpuart.o(.data.s_lpuartIsr)
    total_sleep_time                         0x20000c18   Data           4  timer.o(.data.total_sleep_time)
    Slave_bDeviceNodeId                      0x20000c28   Data           1  slave.o(.bss.Slave_bDeviceNodeId)
    Slave_heartBeatTimers                    0x20000c2a   Data           2  slave.o(.bss.Slave_heartBeatTimers)
    Slave_highestSubIndex_obj1003            0x20000c2c   Data           1  slave.o(.bss.Slave_highestSubIndex_obj1003)
    Slave_highestSubIndex_obj1016            0x20000c2d   Data           1  slave.o(.bss.Slave_highestSubIndex_obj1016)
    Slave_obj1000                            0x20000c30   Data           4  slave.o(.bss.Slave_obj1000)
    Slave_obj1001                            0x20000c34   Data           1  slave.o(.bss.Slave_obj1001)
    Slave_obj1003                            0x20000c38   Data           4  slave.o(.bss.Slave_obj1003)
    Slave_obj1005                            0x20000c3c   Data           4  slave.o(.bss.Slave_obj1005)
    Slave_obj1006                            0x20000c40   Data           4  slave.o(.bss.Slave_obj1006)
    Slave_obj100C                            0x20000c44   Data           2  slave.o(.bss.Slave_obj100C)
    Slave_obj100D                            0x20000c46   Data           1  slave.o(.bss.Slave_obj100D)
    Slave_obj1016                            0x20000c48   Data           4  slave.o(.bss.Slave_obj1016)
    Slave_obj1018_Product_Code               0x20000c4c   Data           4  slave.o(.bss.Slave_obj1018_Product_Code)
    Slave_obj1018_Revision_Number            0x20000c50   Data           4  slave.o(.bss.Slave_obj1018_Revision_Number)
    Slave_obj1018_Serial_Number              0x20000c54   Data           4  slave.o(.bss.Slave_obj1018_Serial_Number)
    Slave_obj1018_Vendor_ID                  0x20000c58   Data           4  slave.o(.bss.Slave_obj1018_Vendor_ID)
    Slave_obj1400_Compatibility_Entry        0x20000c5c   Data           1  slave.o(.bss.Slave_obj1400_Compatibility_Entry)
    Slave_obj1400_Event_Timer                0x20000c5e   Data           2  slave.o(.bss.Slave_obj1400_Event_Timer)
    Slave_obj1400_Inhibit_Time               0x20000c60   Data           2  slave.o(.bss.Slave_obj1400_Inhibit_Time)
    Slave_obj1400_SYNC_start_value           0x20000c62   Data           1  slave.o(.bss.Slave_obj1400_SYNC_start_value)
    Slave_obj1400_Transmission_Type          0x20000c63   Data           1  slave.o(.bss.Slave_obj1400_Transmission_Type)
    Slave_obj1401_Compatibility_Entry        0x20000c64   Data           1  slave.o(.bss.Slave_obj1401_Compatibility_Entry)
    Slave_obj1401_Event_Timer                0x20000c66   Data           2  slave.o(.bss.Slave_obj1401_Event_Timer)
    Slave_obj1401_Inhibit_Time               0x20000c68   Data           2  slave.o(.bss.Slave_obj1401_Inhibit_Time)
    Slave_obj1401_SYNC_start_value           0x20000c6a   Data           1  slave.o(.bss.Slave_obj1401_SYNC_start_value)
    Slave_obj1401_Transmission_Type          0x20000c6b   Data           1  slave.o(.bss.Slave_obj1401_Transmission_Type)
    Slave_obj1402_Compatibility_Entry        0x20000c6c   Data           1  slave.o(.bss.Slave_obj1402_Compatibility_Entry)
    Slave_obj1402_Event_Timer                0x20000c6e   Data           2  slave.o(.bss.Slave_obj1402_Event_Timer)
    Slave_obj1402_Inhibit_Time               0x20000c70   Data           2  slave.o(.bss.Slave_obj1402_Inhibit_Time)
    Slave_obj1402_SYNC_start_value           0x20000c72   Data           1  slave.o(.bss.Slave_obj1402_SYNC_start_value)
    Slave_obj1402_Transmission_Type          0x20000c73   Data           1  slave.o(.bss.Slave_obj1402_Transmission_Type)
    Slave_obj1403_Compatibility_Entry        0x20000c74   Data           1  slave.o(.bss.Slave_obj1403_Compatibility_Entry)
    Slave_obj1403_Event_Timer                0x20000c76   Data           2  slave.o(.bss.Slave_obj1403_Event_Timer)
    Slave_obj1403_Inhibit_Time               0x20000c78   Data           2  slave.o(.bss.Slave_obj1403_Inhibit_Time)
    Slave_obj1403_SYNC_start_value           0x20000c7a   Data           1  slave.o(.bss.Slave_obj1403_SYNC_start_value)
    Slave_obj1403_Transmission_Type          0x20000c7b   Data           1  slave.o(.bss.Slave_obj1403_Transmission_Type)
    Slave_obj1600                            0x20000c7c   Data          32  slave.o(.bss.Slave_obj1600)
    Slave_obj1601                            0x20000c9c   Data          32  slave.o(.bss.Slave_obj1601)
    Slave_obj1602                            0x20000cbc   Data          32  slave.o(.bss.Slave_obj1602)
    Slave_obj1603                            0x20000cdc   Data          32  slave.o(.bss.Slave_obj1603)
    Slave_obj1800_Compatibility_Entry        0x20000cfc   Data           1  slave.o(.bss.Slave_obj1800_Compatibility_Entry)
    Slave_obj1800_SYNC_start_value           0x20000cfd   Data           1  slave.o(.bss.Slave_obj1800_SYNC_start_value)
    Slave_obj1801_Compatibility_Entry        0x20000cfe   Data           1  slave.o(.bss.Slave_obj1801_Compatibility_Entry)
    Slave_obj1801_Event_Timer                0x20000d00   Data           2  slave.o(.bss.Slave_obj1801_Event_Timer)
    Slave_obj1801_Inhibit_Time               0x20000d02   Data           2  slave.o(.bss.Slave_obj1801_Inhibit_Time)
    Slave_obj1801_SYNC_start_value           0x20000d04   Data           1  slave.o(.bss.Slave_obj1801_SYNC_start_value)
    Slave_obj1801_Transmission_Type          0x20000d05   Data           1  slave.o(.bss.Slave_obj1801_Transmission_Type)
    Slave_obj1802_Compatibility_Entry        0x20000d06   Data           1  slave.o(.bss.Slave_obj1802_Compatibility_Entry)
    Slave_obj1802_Event_Timer                0x20000d08   Data           2  slave.o(.bss.Slave_obj1802_Event_Timer)
    Slave_obj1802_Inhibit_Time               0x20000d0a   Data           2  slave.o(.bss.Slave_obj1802_Inhibit_Time)
    Slave_obj1802_SYNC_start_value           0x20000d0c   Data           1  slave.o(.bss.Slave_obj1802_SYNC_start_value)
    Slave_obj1802_Transmission_Type          0x20000d0d   Data           1  slave.o(.bss.Slave_obj1802_Transmission_Type)
    Slave_obj1803_Compatibility_Entry        0x20000d0e   Data           1  slave.o(.bss.Slave_obj1803_Compatibility_Entry)
    Slave_obj1803_Event_Timer                0x20000d10   Data           2  slave.o(.bss.Slave_obj1803_Event_Timer)
    Slave_obj1803_Inhibit_Time               0x20000d12   Data           2  slave.o(.bss.Slave_obj1803_Inhibit_Time)
    Slave_obj1803_SYNC_start_value           0x20000d14   Data           1  slave.o(.bss.Slave_obj1803_SYNC_start_value)
    Slave_obj1803_Transmission_Type          0x20000d15   Data           1  slave.o(.bss.Slave_obj1803_Transmission_Type)
    Slave_obj1A01                            0x20000d18   Data          32  slave.o(.bss.Slave_obj1A01)
    Slave_obj1A02                            0x20000d38   Data          32  slave.o(.bss.Slave_obj1A02)
    Slave_obj1A03                            0x20000d58   Data          32  slave.o(.bss.Slave_obj1A03)
    flexcanConfig                            0x20000d78   Data          36  flexcan_interrupt_transfer.o(.bss.flexcanConfig)
    flexcanHandle                            0x20000d9c   Data         856  flexcan_interrupt_transfer.o(.bss.flexcanHandle)
    gptConfig                                0x200010f4   Data          16  flexcan_interrupt_transfer.o(.bss.gptConfig)
    gptFreq                                  0x20001104   Data           4  flexcan_interrupt_transfer.o(.bss.gptFreq)
    mbConfig                                 0x20001108   Data           8  flexcan_interrupt_transfer.o(.bss.mbConfig)
    pxCurrentTCB                             0x20001114   Data           4  tasks.o(.bss.pxCurrentTCB)
    rxComplete                               0x20001190   Data           1  flexcan_interrupt_transfer.o(.bss.rxComplete)
    rxFrame                                  0x20001194   Data          16  flexcan_interrupt_transfer.o(.bss.rxFrame)
    rxMessage                                0x200011a4   Data          12  flexcan_interrupt_transfer.o(.bss.rxMessage)
    rxXfer                                   0x200011b0   Data          12  flexcan_interrupt_transfer.o(.bss.rxXfer)
    s_lpuartHandle                           0x200011e0   Data          52  fsl_lpuart.o(.bss.s_lpuartHandle)
    timers                                   0x20001214   Data         192  timer.o(.bss.timers)
    txComplete                               0x200012d4   Data           1  flexcan_interrupt_transfer.o(.bss.txComplete)
    txXfer                                   0x200012d8   Data          12  flexcan_interrupt_transfer.o(.bss.txXfer)
    wakenUp                                  0x20003b00   Data           1  flexcan_interrupt_transfer.o(.bss.wakenUp)
    xQueueRegistry                           0x20003b88   Data          64  queue.o(.bss.xQueueRegistry)
    Image$$ARM_LIB_HEAP$$ZI$$Base            0x20003c0c   Number         0  anon$$obj.o ABSOLUTE
    Image$$ARM_LIB_HEAP$$ZI$$Limit           0x2000400c   Number         0  anon$$obj.o ABSOLUTE
    Image$$ARM_LIB_STACK$$ZI$$Limit          0x20040000   Number         0  anon$$obj.o ABSOLUTE
    Image$$RW_m_ncache$$Base                 0x202c0000   Number         0  anon$$obj.o ABSOLUTE
    Image$$RW_m_ncache_unused$$Base          0x202c0000   Number         0  anon$$obj.o ABSOLUTE
    Image$$RW_m_ncache_unused$$ZI$$Limit     0x20340000   Number         0  anon$$obj.o ABSOLUTE
    qspiflash_config                         0x30000400   Data         512  evkmimxrt1170_flexspi_nor_config.o(.boot_hdr.conf)
    image_vector_table                       0x30001000   Data          32  fsl_flexspi_nor_boot.o(.boot_hdr.ivt)
    g_boot_data                              0x30001020   Data          16  fsl_flexspi_nor_boot.o(.boot_hdr.boot_data)
    __Vectors                                0x30002000   Number      1024  startup_mimxrt1176_cm7.o(.isr_vector)
    __main                                   0x30002401   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x30002401   Thumb Code     0  entry4.o(.ARM.Collect$$$$00000003)
    _main_scatterload                        0x30002405   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x30002409   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x30002409   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x30002409   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x30002409   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x30002411   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x30002411   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x30002415   Thumb Code    40  startup_mimxrt1176_cm7.o(.text)
    ACMP1_IRQHandler                         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ACMP2_IRQHandler                         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ACMP3_IRQHandler                         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ACMP4_IRQHandler                         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ADC1_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ADC2_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ADC_ETC_ERROR_IRQ_IRQHandler             0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ADC_ETC_IRQ0_IRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ADC_ETC_IRQ1_IRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ADC_ETC_IRQ2_IRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ADC_ETC_IRQ3_IRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ASRC_DriverIRQHandler                    0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    BusFault_Handler                         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAAM_IRQ0_IRQHandler                     0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAAM_IRQ1_IRQHandler                     0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAAM_IRQ2_IRQHandler                     0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAAM_IRQ3_IRQHandler                     0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAAM_RECORVE_ERRPR_IRQHandler            0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAAM_RTIC_IRQHandler                     0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAN1_ERROR_DriverIRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAN2_ERROR_DriverIRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAN3_ERROR_DriverIRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CDOG_DriverIRQHandler                    0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CM7_GPIO2_3_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CORE_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CSI_IRQHandler                           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CTI_TRIGGER_OUT0_IRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CTI_TRIGGER_OUT1_IRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DAC_IRQHandler                           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DCIC1_IRQHandler                         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DCIC2_IRQHandler                         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA0_DMA16_DriverIRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA10_DMA26_DriverIRQHandler             0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA11_DMA27_DriverIRQHandler             0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA12_DMA28_DriverIRQHandler             0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA13_DMA29_DriverIRQHandler             0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA14_DMA30_DriverIRQHandler             0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA15_DMA31_DriverIRQHandler             0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA1_DMA17_DriverIRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA2_DMA18_DriverIRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA3_DMA19_DriverIRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA4_DMA20_DriverIRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA5_DMA21_DriverIRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA6_DMA22_DriverIRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA7_DMA23_DriverIRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA8_DMA24_DriverIRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA9_DMA25_DriverIRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA_ERROR_DriverIRQHandler               0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DebugMon_Handler                         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DefaultISR                               0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    EMVSIM1_IRQHandler                       0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    EMVSIM2_IRQHandler                       0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENC1_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENC2_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENC3_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENC4_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_1588_Timer_DriverIRQHandler         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_1G_1588_Timer_DriverIRQHandler      0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_1G_DriverIRQHandler                 0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_1G_MAC0_Tx_Rx_1_DriverIRQHandler    0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_1G_MAC0_Tx_Rx_2_DriverIRQHandler    0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_DriverIRQHandler                    0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_QOS_DriverIRQHandler                0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_QOS_PMT_DriverIRQHandler            0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    EWM_IRQHandler                           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    FLEXIO1_DriverIRQHandler                 0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    FLEXIO2_DriverIRQHandler                 0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    FLEXRAM_ECC_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    FLEXRAM_IRQHandler                       0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    FLEXSPI1_DriverIRQHandler                0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    FLEXSPI2_DriverIRQHandler                0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPC_IRQHandler                           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPIO13_Combined_0_31_IRQHandler          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPIO1_Combined_0_15_IRQHandler           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPIO1_Combined_16_31_IRQHandler          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPIO2_Combined_0_15_IRQHandler           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPIO2_Combined_16_31_IRQHandler          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPIO3_Combined_0_15_IRQHandler           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPIO3_Combined_16_31_IRQHandler          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPIO4_Combined_0_15_IRQHandler           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPIO4_Combined_16_31_IRQHandler          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPIO5_Combined_0_15_IRQHandler           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPIO5_Combined_16_31_IRQHandler          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPIO6_Combined_0_15_IRQHandler           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPIO6_Combined_16_31_IRQHandler          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPR_IRQ_IRQHandler                       0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPT1_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPT3_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPT4_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPT5_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPT6_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPU2D_IRQHandler                         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    KEY_MANAGER_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    KPP_IRQHandler                           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LCDIFv2_IRQHandler                       0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPI2C1_DriverIRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPI2C2_DriverIRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPI2C3_DriverIRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPI2C4_DriverIRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPI2C5_DriverIRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPI2C6_DriverIRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPSPI1_DriverIRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPSPI2_DriverIRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPSPI3_DriverIRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPSPI4_DriverIRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPSPI5_DriverIRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPSPI6_DriverIRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPSR_LP0_BROWNOUT_IRQHandler             0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPSR_LP8_BROWNOUT_IRQHandler             0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    MECC1_FATAL_INT_IRQHandler               0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    MECC1_INT_IRQHandler                     0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    MECC2_FATAL_INT_IRQHandler               0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    MECC2_INT_IRQHandler                     0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    MIPI_CSI_DriverIRQHandler                0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    MIPI_DSI_DriverIRQHandler                0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    MUA_IRQHandler                           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    MemManage_Handler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    OCOTP_READ_DONE_ERROR_IRQHandler         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    OCOTP_READ_FUSE_ERROR_IRQHandler         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PDM_ERROR_DriverIRQHandler               0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PDM_EVENT_DriverIRQHandler               0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PDM_HWVAD_ERROR_DriverIRQHandler         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PDM_HWVAD_EVENT_DriverIRQHandler         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PIT1_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PIT2_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM1_0_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM1_1_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM1_2_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM1_3_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM1_FAULT_IRQHandler                    0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM2_0_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM2_1_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM2_2_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM2_3_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM2_FAULT_IRQHandler                    0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM3_0_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM3_1_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM3_2_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM3_3_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM3_FAULT_IRQHandler                    0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM4_0_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM4_1_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM4_2_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM4_3_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM4_FAULT_IRQHandler                    0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PXP_IRQHandler                           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    RDC_IRQHandler                           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    RTWDOG3_IRQHandler                       0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved110_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved166_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved167_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved168_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved169_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved170_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved177_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved178_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved179_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved180_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved185_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved186_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved208_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved209_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved210_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved211_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved212_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved213_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved214_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved215_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved68_IRQHandler                    0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SAI1_DriverIRQHandler                    0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SAI2_DriverIRQHandler                    0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SAI3_RX_DriverIRQHandler                 0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SAI3_TX_DriverIRQHandler                 0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SAI4_RX_DriverIRQHandler                 0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SAI4_TX_DriverIRQHandler                 0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SEMA4_CP0_IRQHandler                     0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SEMA4_CP1_IRQHandler                     0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SEMC_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SNVS_HP_NON_TZ_IRQHandler                0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SNVS_HP_TZ_IRQHandler                    0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SNVS_PULSE_EVENT_IRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SPDIF_DriverIRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    TMPSNS_INT_IRQHandler                    0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    TMPSNS_LOW_HIGH_IRQHandler               0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    TMPSNS_PANIC_IRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    TMR1_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    TMR2_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    TMR3_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    TMR4_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    USBPHY1_IRQHandler                       0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    USBPHY2_IRQHandler                       0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    USB_OTG1_IRQHandler                      0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    USB_OTG2_IRQHandler                      0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    USDHC1_DriverIRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    USDHC2_DriverIRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    UsageFault_Handler                       0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    WDOG1_IRQHandler                         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    WDOG2_IRQHandler                         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    XBAR1_IRQ_0_1_IRQHandler                 0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    XBAR1_IRQ_2_3_IRQHandler                 0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    XECC_FLEXSPI1_FATAL_INT_DriverIRQHandler 0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    XECC_FLEXSPI1_INT_DriverIRQHandler       0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    XECC_FLEXSPI2_FATAL_INT_DriverIRQHandler 0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    XECC_FLEXSPI2_INT_DriverIRQHandler       0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    XECC_SEMC_FATAL_INT_IRQHandler           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    XECC_SEMC_INT_IRQHandler                 0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    eLCDIF_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    NMI_Handler                              0x30002441   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    HardFault_Handler                        0x30002445   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA0_DMA16_IRQHandler                    0x30002455   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA1_DMA17_IRQHandler                    0x30002459   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA2_DMA18_IRQHandler                    0x3000245d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA3_DMA19_IRQHandler                    0x30002461   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA4_DMA20_IRQHandler                    0x30002465   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA5_DMA21_IRQHandler                    0x30002469   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA6_DMA22_IRQHandler                    0x3000246d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA7_DMA23_IRQHandler                    0x30002471   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA8_DMA24_IRQHandler                    0x30002475   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA9_DMA25_IRQHandler                    0x30002479   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA10_DMA26_IRQHandler                   0x3000247d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA11_DMA27_IRQHandler                   0x30002481   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA12_DMA28_IRQHandler                   0x30002485   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA13_DMA29_IRQHandler                   0x30002489   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA14_DMA30_IRQHandler                   0x3000248d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA15_DMA31_IRQHandler                   0x30002491   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA_ERROR_IRQHandler                     0x30002495   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPUART1_IRQHandler                       0x30002499   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPUART2_IRQHandler                       0x3000249d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPUART3_IRQHandler                       0x300024a1   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPUART4_IRQHandler                       0x300024a5   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPUART5_IRQHandler                       0x300024a9   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPUART6_IRQHandler                       0x300024ad   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPUART7_IRQHandler                       0x300024b1   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPUART8_IRQHandler                       0x300024b5   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPUART9_IRQHandler                       0x300024b9   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPUART10_IRQHandler                      0x300024bd   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPUART11_IRQHandler                      0x300024c1   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPUART12_IRQHandler                      0x300024c5   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPI2C1_IRQHandler                        0x300024c9   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPI2C2_IRQHandler                        0x300024cd   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPI2C3_IRQHandler                        0x300024d1   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPI2C4_IRQHandler                        0x300024d5   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPI2C5_IRQHandler                        0x300024d9   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPI2C6_IRQHandler                        0x300024dd   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPSPI1_IRQHandler                        0x300024e1   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPSPI2_IRQHandler                        0x300024e5   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPSPI3_IRQHandler                        0x300024e9   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPSPI4_IRQHandler                        0x300024ed   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPSPI5_IRQHandler                        0x300024f1   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPSPI6_IRQHandler                        0x300024f5   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAN1_IRQHandler                          0x300024f9   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAN1_ERROR_IRQHandler                    0x300024fd   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAN2_IRQHandler                          0x30002501   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAN2_ERROR_IRQHandler                    0x30002505   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAN3_IRQHandler                          0x30002509   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAN3_ERROR_IRQHandler                    0x3000250d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    MIPI_CSI_IRQHandler                      0x30002511   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    MIPI_DSI_IRQHandler                      0x30002515   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CDOG_IRQHandler                          0x30002519   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SAI1_IRQHandler                          0x3000251d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SAI2_IRQHandler                          0x30002521   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SAI3_RX_IRQHandler                       0x30002525   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SAI3_TX_IRQHandler                       0x30002529   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SAI4_RX_IRQHandler                       0x3000252d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SAI4_TX_IRQHandler                       0x30002531   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SPDIF_IRQHandler                         0x30002535   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ASRC_IRQHandler                          0x30002539   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    FLEXIO1_IRQHandler                       0x3000253d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    FLEXIO2_IRQHandler                       0x30002541   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    FLEXSPI1_IRQHandler                      0x30002545   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    FLEXSPI2_IRQHandler                      0x30002549   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    USDHC1_IRQHandler                        0x3000254d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    USDHC2_IRQHandler                        0x30002551   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_IRQHandler                          0x30002555   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_1588_Timer_IRQHandler               0x30002559   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_1G_MAC0_Tx_Rx_1_IRQHandler          0x3000255d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_1G_MAC0_Tx_Rx_2_IRQHandler          0x30002561   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_1G_IRQHandler                       0x30002565   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_1G_1588_Timer_IRQHandler            0x30002569   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PDM_HWVAD_EVENT_IRQHandler               0x3000256d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PDM_HWVAD_ERROR_IRQHandler               0x30002571   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PDM_EVENT_IRQHandler                     0x30002575   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PDM_ERROR_IRQHandler                     0x30002579   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    XECC_FLEXSPI1_INT_IRQHandler             0x3000257d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    XECC_FLEXSPI1_FATAL_INT_IRQHandler       0x30002581   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    XECC_FLEXSPI2_INT_IRQHandler             0x30002585   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    XECC_FLEXSPI2_FATAL_INT_IRQHandler       0x30002589   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_QOS_IRQHandler                      0x3000258d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_QOS_PMT_IRQHandler                  0x30002591   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    __aeabi_uldivmod                         0x300026e9   Thumb Code    98  uldiv.o(.text)
    ___aeabi_memcpy4$ret                     0x3000274b   Thumb Code     0  memcpy.o(.text)
    ___aeabi_memcpy8$ret                     0x3000274b   Thumb Code     0  memcpy.o(.text)
    __aeabi_memcpy                           0x3000274b   Thumb Code    40  memcpy.o(.text)
    memcpy                                   0x3000274b   Thumb Code     0  memcpy.o(.text)
    memset                                   0x30002773   Thumb Code    18  memset.o(.text)
    strlen                                   0x30002785   Thumb Code    14  strlen.o(.text)
    memcmp                                   0x30002793   Thumb Code    26  memcmp.o(.text)
    __aeabi_llsl                             0x300027ad   Thumb Code    30  llshl.o(.text)
    _ll_shift_l                              0x300027ad   Thumb Code     0  llshl.o(.text)
    __aeabi_llsr                             0x300027cb   Thumb Code    32  llushr.o(.text)
    _ll_ushift_r                             0x300027cb   Thumb Code     0  llushr.o(.text)
    __scatterload                            0x300027ed   Thumb Code    38  init.o(.text)
    __scatterload_rt2                        0x300027ed   Thumb Code     0  init.o(.text)
    __decompress                             0x3000281d   Thumb Code     0  __dczerorl2.o(.text)
    __decompress1                            0x3000281d   Thumb Code    86  __dczerorl2.o(.text)
    ANATOP_AI_Access                         0x30002879   Thumb Code   840  fsl_anatop_ai.o(.text.ANATOP_AI_Access)
    ANATOP_AI_Read                           0x30002bc1   Thumb Code    10  fsl_anatop_ai.o(.text.ANATOP_AI_Read)
    ANATOP_AI_Write                          0x30002bd1   Thumb Code    12  fsl_anatop_ai.o(.text.ANATOP_AI_Write)
    ANATOP_AI_WriteWithMaskShift             0x30002be1   Thumb Code    48  fsl_anatop_ai.o(.text.ANATOP_AI_WriteWithMaskShift)
    BOARD_BootClockRUN                       0x30002d29   Thumb Code  1570  clock_config.o(.text.BOARD_BootClockRUN)
    BOARD_ConfigMPU                          0x30003351   Thumb Code   760  board.o(.text.BOARD_ConfigMPU)
    BOARD_InitDebugConsole                   0x30003689   Thumb Code    90  board.o(.text.BOARD_InitDebugConsole)
    BOARD_InitPins                           0x300036e9   Thumb Code   102  pin_mux.o(.text.BOARD_InitPins)
    CAN1_DriverIRQHandler                    0x30003751   Thumb Code    60  fsl_flexcan.o(.text.CAN1_DriverIRQHandler)
    CAN2_DriverIRQHandler                    0x300037a9   Thumb Code    60  fsl_flexcan.o(.text.CAN2_DriverIRQHandler)
    CAN3_DriverIRQHandler                    0x30003801   Thumb Code    60  fsl_flexcan.o(.text.CAN3_DriverIRQHandler)
    CLOCK_DeinitAudioPll                     0x300039e9   Thumb Code    78  fsl_clock.o(.text.CLOCK_DeinitAudioPll)
    CLOCK_DeinitSysPll1                      0x30003a39   Thumb Code    94  fsl_clock.o(.text.CLOCK_DeinitSysPll1)
    CLOCK_GetFreq                            0x30003a99   Thumb Code   728  fsl_clock.o(.text.CLOCK_GetFreq)
    CLOCK_InitArmPll                         0x30003d81   Thumb Code   212  fsl_clock.o(.text.CLOCK_InitArmPll)
    CLOCK_InitPfd                            0x30003e59   Thumb Code   216  fsl_clock.o(.text.CLOCK_InitPfd)
    CLOCK_InitSysPll2                        0x30003f71   Thumb Code   254  fsl_clock.o(.text.CLOCK_InitSysPll2)
    CLOCK_InitSysPll3                        0x30004071   Thumb Code   140  fsl_clock.o(.text.CLOCK_InitSysPll3)
    CLOCK_InitVideoPll                       0x30004101   Thumb Code   216  fsl_clock.o(.text.CLOCK_InitVideoPll)
    CLOCK_OSC_EnableOscRc400M                0x300041d9   Thumb Code    26  fsl_clock.o(.text.CLOCK_OSC_EnableOscRc400M)
    CLOCK_OSC_Set1MHzOutputBehavior          0x300041f9   Thumb Code    44  fsl_clock.o(.text.CLOCK_OSC_Set1MHzOutputBehavior)
    CLOCK_SetPllBypass                       0x30004229   Thumb Code   148  fsl_clock.o(.text.CLOCK_SetPllBypass)
    ConsumerHeartbeatAlarm                   0x300042c1   Thumb Code    40  lifegrd.o(.text.ConsumerHeartbeatAlarm)
    DCDC_BootIntoDCM                         0x300042e9   Thumb Code    58  fsl_dcdc.o(.text.DCDC_BootIntoDCM)
    DbgConsole_Init                          0x30004329   Thumb Code    82  fsl_debug_console.o(.text.DbgConsole_Init)
    DbgConsole_Printf                        0x30004381   Thumb Code    32  fsl_debug_console.o(.text.DbgConsole_Printf)
    DbgConsole_Vprintf                       0x300043a1   Thumb Code  1064  fsl_debug_console.o(.text.DbgConsole_Vprintf)
    DelAlarm                                 0x300047c9   Thumb Code    52  timer.o(.text.DelAlarm)
    FLEXCAN_CalculateImprovedTimingValues    0x30004801   Thumb Code   326  fsl_flexcan.o(.text.FLEXCAN_CalculateImprovedTimingValues)
    FLEXCAN_GetDefaultConfig                 0x30004949   Thumb Code   120  fsl_flexcan.o(.text.FLEXCAN_GetDefaultConfig)
    FLEXCAN_Init                             0x300049c1   Thumb Code   692  fsl_flexcan.o(.text.FLEXCAN_Init)
    FLEXCAN_ReadFDRxMb                       0x30004ca1   Thumb Code   346  fsl_flexcan.o(.text.FLEXCAN_ReadFDRxMb)
    FLEXCAN_ReadRxMb                         0x30004e01   Thumb Code   184  fsl_flexcan.o(.text.FLEXCAN_ReadRxMb)
    FLEXCAN_SetFDTxMbConfig                  0x30004fa9   Thumb Code   266  fsl_flexcan.o(.text.FLEXCAN_SetFDTxMbConfig)
    FLEXCAN_SetRxMbConfig                    0x300050b9   Thumb Code   180  fsl_flexcan.o(.text.FLEXCAN_SetRxMbConfig)
    FLEXCAN_SetRxMbGlobalMask                0x30005171   Thumb Code    64  fsl_flexcan.o(.text.FLEXCAN_SetRxMbGlobalMask)
    FLEXCAN_SetTxMbConfig                    0x300051b1   Thumb Code   112  fsl_flexcan.o(.text.FLEXCAN_SetTxMbConfig)
    FLEXCAN_TransferAbortReceive             0x30005221   Thumb Code   164  fsl_flexcan.o(.text.FLEXCAN_TransferAbortReceive)
    FLEXCAN_TransferAbortSend                0x300052c9   Thumb Code   272  fsl_flexcan.o(.text.FLEXCAN_TransferAbortSend)
    FLEXCAN_TransferCreateHandle             0x300053d9   Thumb Code   268  fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle)
    FLEXCAN_TransferFDAbortReceive           0x300054e9   Thumb Code   166  fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortReceive)
    FLEXCAN_TransferFDAbortSend              0x30005591   Thumb Code   296  fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortSend)
    FLEXCAN_TransferHandleIRQ                0x300056b9   Thumb Code  1018  fsl_flexcan.o(.text.FLEXCAN_TransferHandleIRQ)
    FLEXCAN_TransferReceiveNonBlocking       0x30005ab9   Thumb Code   214  fsl_flexcan.o(.text.FLEXCAN_TransferReceiveNonBlocking)
    FLEXCAN_TransferSendNonBlocking          0x30005b91   Thumb Code   240  fsl_flexcan.o(.text.FLEXCAN_TransferSendNonBlocking)
    FLEXCAN_WriteTxMb                        0x30005c81   Thumb Code   212  fsl_flexcan.o(.text.FLEXCAN_WriteTxMb)
    GPT2_IRQHandler                          0x30005d71   Thumb Code    22  flexcan_interrupt_transfer.o(.text.GPT2_IRQHandler)
    GPT_GetDefaultConfig                     0x30005d89   Thumb Code    56  fsl_gpt.o(.text.GPT_GetDefaultConfig)
    GPT_Init                                 0x30005dd1   Thumb Code   280  fsl_gpt.o(.text.GPT_Init)
    GuardTimeAlarm                           0x30005f61   Thumb Code   106  lifegrd.o(.text.GuardTimeAlarm)
    HAL_UartInit                             0x30005fd1   Thumb Code   264  fsl_adapter_lpuart.o(.text.HAL_UartInit)
    HAL_UartReceiveBlocking                  0x30006119   Thumb Code   108  fsl_adapter_lpuart.o(.text.HAL_UartReceiveBlocking)
    HAL_UartSendBlocking                     0x30006189   Thumb Code   102  fsl_adapter_lpuart.o(.text.HAL_UartSendBlocking)
    LPUART10_DriverIRQHandler                0x300061f1   Thumb Code    36  fsl_lpuart.o(.text.LPUART10_DriverIRQHandler)
    LPUART11_DriverIRQHandler                0x30006219   Thumb Code    38  fsl_lpuart.o(.text.LPUART11_DriverIRQHandler)
    LPUART12_DriverIRQHandler                0x30006241   Thumb Code    38  fsl_lpuart.o(.text.LPUART12_DriverIRQHandler)
    LPUART1_DriverIRQHandler                 0x30006269   Thumb Code    38  fsl_lpuart.o(.text.LPUART1_DriverIRQHandler)
    LPUART2_DriverIRQHandler                 0x30006291   Thumb Code    36  fsl_lpuart.o(.text.LPUART2_DriverIRQHandler)
    LPUART3_DriverIRQHandler                 0x300062b9   Thumb Code    38  fsl_lpuart.o(.text.LPUART3_DriverIRQHandler)
    LPUART4_DriverIRQHandler                 0x300062e1   Thumb Code    38  fsl_lpuart.o(.text.LPUART4_DriverIRQHandler)
    LPUART5_DriverIRQHandler                 0x30006309   Thumb Code    38  fsl_lpuart.o(.text.LPUART5_DriverIRQHandler)
    LPUART6_DriverIRQHandler                 0x30006331   Thumb Code    36  fsl_lpuart.o(.text.LPUART6_DriverIRQHandler)
    LPUART7_DriverIRQHandler                 0x30006359   Thumb Code    38  fsl_lpuart.o(.text.LPUART7_DriverIRQHandler)
    LPUART8_DriverIRQHandler                 0x30006381   Thumb Code    38  fsl_lpuart.o(.text.LPUART8_DriverIRQHandler)
    LPUART9_DriverIRQHandler                 0x300063a9   Thumb Code    38  fsl_lpuart.o(.text.LPUART9_DriverIRQHandler)
    LPUART_GetDefaultConfig                  0x300063d1   Thumb Code    58  fsl_lpuart.o(.text.LPUART_GetDefaultConfig)
    LPUART_Init                              0x30006411   Thumb Code   628  fsl_lpuart.o(.text.LPUART_Init)
    LPUART_ReadBlocking                      0x300066a1   Thumb Code   276  fsl_lpuart.o(.text.LPUART_ReadBlocking)
    LPUART_WriteBlocking                     0x300067b9   Thumb Code    54  fsl_lpuart.o(.text.LPUART_WriteBlocking)
    OnCOB_ID_SyncUpdate                      0x300067f1   Thumb Code    10  sync.o(.text.OnCOB_ID_SyncUpdate)
    OnHeartbeatProducerUpdate                0x30006801   Thumb Code    62  lifegrd.o(.text.OnHeartbeatProducerUpdate)
    OnNodeGuardUpdate                        0x30006841   Thumb Code    26  lifegrd.o(.text.OnNodeGuardUpdate)
    OnNumberOfErrorsUpdate                   0x30006861   Thumb Code    36  emcy.o(.text.OnNumberOfErrorsUpdate)
    PDOEventTimerAlarm                       0x30006889   Thumb Code    26  pdo.o(.text.PDOEventTimerAlarm)
    PDOInhibitTimerAlarm                     0x300068a9   Thumb Code    44  pdo.o(.text.PDOInhibitTimerAlarm)
    PDOInit                                  0x300068d9   Thumb Code   102  pdo.o(.text.PDOInit)
    PDOStop                                  0x30006941   Thumb Code   108  pdo.o(.text.PDOStop)
    PMU_EnableBodyBias                       0x300069b1   Thumb Code   202  fsl_pmu.o(.text.PMU_EnableBodyBias)
    PMU_StaticEnableLpsrAnaLdoBypassMode     0x30006a81   Thumb Code   148  fsl_pmu.o(.text.PMU_StaticEnableLpsrAnaLdoBypassMode)
    PMU_StaticEnableLpsrDigLdoBypassMode     0x30006b19   Thumb Code   106  fsl_pmu.o(.text.PMU_StaticEnableLpsrDigLdoBypassMode)
    PMU_StaticEnablePllLdo                   0x30006b89   Thumb Code    62  fsl_pmu.o(.text.PMU_StaticEnablePllLdo)
    PendSV_Handler                           0x30006bd1   Thumb Code   100  port.o(.text.PendSV_Handler)
    ProducerHeartbeatAlarm                   0x30006c39   Thumb Code    74  lifegrd.o(.text.ProducerHeartbeatAlarm)
    RegisterSetODentryCallBack               0x30006c89   Thumb Code    40  objacces.o(.text.RegisterSetODentryCallBack)
    SDK_DelayAtLeastUs                       0x30006cb1   Thumb Code    68  fsl_common_arm.o(.text.SDK_DelayAtLeastUs)
    SDOTimeoutAlarm                          0x30006d09   Thumb Code   204  sdo.o(.text.SDOTimeoutAlarm)
    SDOlineToObjdict                         0x30006dd9   Thumb Code    60  sdo.o(.text.SDOlineToObjdict)
    SVC_Handler                              0x30006e21   Thumb Code    36  port.o(.text.SVC_Handler)
    SetAlarm                                 0x30006e49   Thumb Code   166  timer.o(.text.SetAlarm)
    Slave_scanIndexOD                        0x30006ef1   Thumb Code   298  slave.o(.text.Slave_scanIndexOD)
    Slave_valueRangeTest                     0x30007021   Thumb Code    20  slave.o(.text.Slave_valueRangeTest)
    SyncAlarm                                0x30007039   Thumb Code    66  sync.o(.text.SyncAlarm)
    SysTick_Handler                          0x30007081   Thumb Code    50  port.o(.text.SysTick_Handler)
    SystemInit                               0x300070b9   Thumb Code   288  system_mimxrt1176_cm7.o(.text.SystemInit)
    SystemInitHook                           0x300071d9   Thumb Code     2  system_mimxrt1176_cm7.o(.text.SystemInitHook)
    TPDO_Communication_Parameter_Callback    0x300071e1   Thumb Code   122  pdo.o(.text.TPDO_Communication_Parameter_Callback)
    TimeDispatch                             0x30007261   Thumb Code   214  timer.o(.text.TimeDispatch)
    _RxPDO_EventTimers_Handler               0x30007339   Thumb Code     2  pdo.o(.text._RxPDO_EventTimers_Handler)
    __aeabi_assert                           0x30007341   Thumb Code    16  fsl_assert.o(.text.__aeabi_assert)
    _getODentry                              0x30007381   Thumb Code   170  objacces.o(.text._getODentry)
    _heartbeatError                          0x30007431   Thumb Code     2  lifegrd.o(.text._heartbeatError)
    _initialisation                          0x30007439   Thumb Code     2  states.o(.text._initialisation)
    _nodeguardError                          0x30007441   Thumb Code     2  lifegrd.o(.text._nodeguardError)
    _operational                             0x30007449   Thumb Code     2  states.o(.text._operational)
    _post_SlaveBootup                        0x30007451   Thumb Code     2  lifegrd.o(.text._post_SlaveBootup)
    _post_SlaveStateChange                   0x30007459   Thumb Code     2  lifegrd.o(.text._post_SlaveStateChange)
    _post_TPDO                               0x30007461   Thumb Code     2  sync.o(.text._post_TPDO)
    _post_emcy                               0x30007469   Thumb Code     2  emcy.o(.text._post_emcy)
    _post_sync                               0x30007471   Thumb Code     2  sync.o(.text._post_sync)
    _preOperational                          0x30007479   Thumb Code    18  states.o(.text._preOperational)
    _sendPDOevent                            0x30007491   Thumb Code   342  pdo.o(.text._sendPDOevent)
    _setODentry                              0x300075e9   Thumb Code   236  objacces.o(.text._setODentry)
    _stopped                                 0x300076d9   Thumb Code     2  states.o(.text._stopped)
    _storeODSubIndex                         0x300076e1   Thumb Code     4  objacces.o(.text._storeODSubIndex)
    buildPDO                                 0x300076e9   Thumb Code   386  pdo.o(.text.buildPDO)
    canDispatch                              0x30007871   Thumb Code   104  states.o(.text.canDispatch)
    canSend                                  0x300078d9   Thumb Code   146  flexcan_interrupt_transfer.o(.text.canSend)
    emergencyInit                            0x30007971   Thumb Code    32  emcy.o(.text.emergencyInit)
    emergencyStop                            0x30007991   Thumb Code     2  emcy.o(.text.emergencyStop)
    failedSDO                                0x30007999   Thumb Code   200  sdo.o(.text.failedSDO)
    getElapsedTime                           0x30007ac9   Thumb Code    10  flexcan_interrupt_transfer.o(.text.getElapsedTime)
    getNodeId                                0x30007ad9   Thumb Code     6  states.o(.text.getNodeId)
    heartbeatInit                            0x30007ae1   Thumb Code   156  lifegrd.o(.text.heartbeatInit)
    initSDOline                              0x30007b81   Thumb Code   154  sdo.o(.text.initSDOline)
    lifeGuardInit                            0x30007c21   Thumb Code    18  lifegrd.o(.text.lifeGuardInit)
    lifeGuardStop                            0x30007c39   Thumb Code    76  lifegrd.o(.text.lifeGuardStop)
    lineToSDO                                0x30007c89   Thumb Code    78  sdo.o(.text.lineToSDO)
    main                                     0x30007cd9   Thumb Code   596  flexcan_interrupt_transfer.o(.text.main)
    masterSendNMTnodeguard                   0x30007fb1   Thumb Code    32  nmtmaster.o(.text.masterSendNMTnodeguard)
    masterSendNMTstateChange                 0x30007fd1   Thumb Code    32  nmtmaster.o(.text.masterSendNMTstateChange)
    nodeguardInit                            0x30007ff1   Thumb Code   132  lifegrd.o(.text.nodeguardInit)
    objdictToSDOline                         0x30008079   Thumb Code    66  sdo.o(.text.objdictToSDOline)
    proceedEMCY                              0x300080c1   Thumb Code    42  emcy.o(.text.proceedEMCY)
    proceedNMTstateChange                    0x300080f1   Thumb Code   180  nmtslave.o(.text.proceedNMTstateChange)
    proceedNODE_GUARD                        0x300081a9   Thumb Code   262  lifegrd.o(.text.proceedNODE_GUARD)
    proceedPDO                               0x300082b1   Thumb Code   784  pdo.o(.text.proceedPDO)
    proceedSDO                               0x300085c1   Thumb Code  4780  sdo.o(.text.proceedSDO)
    proceedSYNC                              0x30009871   Thumb Code    42  sync.o(.text.proceedSYNC)
    pvPortMalloc                             0x30009de9   Thumb Code   394  heap_4.o(.text.pvPortMalloc)
    pxPortInitialiseStack                    0x30009f79   Thumb Code    44  port.o(.text.pxPortInitialiseStack)
    resetSDO                                 0x30009fa9   Thumb Code    86  sdo.o(.text.resetSDO)
    resetSDOline                             0x3000a001   Thumb Code    84  sdo.o(.text.resetSDOline)
    sendOnePDOevent                          0x3000a059   Thumb Code   314  pdo.o(.text.sendOnePDOevent)
    sendSDO                                  0x3000a199   Thumb Code   160  sdo.o(.text.sendSDO)
    sendSDOabort                             0x3000a239   Thumb Code   176  sdo.o(.text.sendSDOabort)
    setNodeId                                0x3000a2e9   Thumb Code   296  states.o(.text.setNodeId)
    setState                                 0x3000a431   Thumb Code   146  states.o(.text.setState)
    setTimer                                 0x3000a4c9   Thumb Code    14  flexcan_interrupt_transfer.o(.text.setTimer)
    slaveSendBootUp                          0x3000a4d9   Thumb Code    44  nmtslave.o(.text.slaveSendBootUp)
    startSYNC                                0x3000a509   Thumb Code   138  sync.o(.text.startSYNC)
    stopSYNC                                 0x3000a599   Thumb Code    44  sync.o(.text.stopSYNC)
    switchCommunicationState                 0x3000a5c9   Thumb Code   278  states.o(.text.switchCommunicationState)
    uxListRemove                             0x3000a6e1   Thumb Code    42  list.o(.text.uxListRemove)
    vListInitialise                          0x3000a711   Thumb Code    22  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x3000a729   Thumb Code     6  list.o(.text.vListInitialiseItem)
    vListInsert                              0x3000a731   Thumb Code    58  list.o(.text.vListInsert)
    vListInsertEnd                           0x3000a771   Thumb Code    28  list.o(.text.vListInsertEnd)
    vPortEnterCritical                       0x3000a7a9   Thumb Code    82  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x3000a801   Thumb Code    50  port.o(.text.vPortExitCritical)
    vPortFree                                0x3000a839   Thumb Code   202  heap_4.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x3000a909   Thumb Code    52  port.o(.text.vPortSetupTimerInterrupt)
    vQueueAddToRegistry                      0x3000a941   Thumb Code    94  queue.o(.text.vQueueAddToRegistry)
    vQueueWaitForMessageRestricted           0x3000a9a1   Thumb Code    70  queue.o(.text.vQueueWaitForMessageRestricted)
    vTaskDelete                              0x3000a9e9   Thumb Code   294  tasks.o(.text.vTaskDelete)
    vTaskInternalSetTimeOutState             0x3000ab11   Thumb Code    26  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x3000ab31   Thumb Code    14  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x3000ab41   Thumb Code    58  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x3000ab81   Thumb Code   114  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    vTaskStartScheduler                      0x3000abf9   Thumb Code   156  tasks.o(.text.vTaskStartScheduler)
    vTaskSuspendAll                          0x3000aca1   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x3000acb1   Thumb Code   138  tasks.o(.text.vTaskSwitchContext)
    xPortStartScheduler                      0x3000ad41   Thumb Code   242  port.o(.text.xPortStartScheduler)
    xQueueGenericCreate                      0x3000ae39   Thumb Code   150  queue.o(.text.xQueueGenericCreate)
    xQueueReceive                            0x3000aed1   Thumb Code   436  queue.o(.text.xQueueReceive)
    xTaskCheckForTimeOut                     0x3000b089   Thumb Code   144  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x3000b119   Thumb Code   510  tasks.o(.text.xTaskCreate)
    xTaskGetSchedulerState                   0x3000b319   Thumb Code    36  tasks.o(.text.xTaskGetSchedulerState)
    xTaskGetTickCount                        0x3000b341   Thumb Code    12  tasks.o(.text.xTaskGetTickCount)
    xTaskIncrementTick                       0x3000b351   Thumb Code   420  tasks.o(.text.xTaskIncrementTick)
    xTaskRemoveFromEventList                 0x3000b4f9   Thumb Code   250  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x3000b5f9   Thumb Code   388  tasks.o(.text.xTaskResumeAll)
    xTimerCreateTimerTask                    0x3000b781   Thumb Code    92  timers.o(.text.xTimerCreateTimerTask)
    __scatterload_copy                       0x3000b7e5   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x3000b7f3   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x3000b7f5   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    Slave_ObjdictSize                        0x3000b81e   Data           2  slave.o(.rodata.Slave_ObjdictSize)
    Slave_firstIndex                         0x3000b820   Data          12  slave.o(.rodata.Slave_firstIndex)
    Slave_iam_a_slave                        0x3000b82c   Data           1  slave.o(.rodata.Slave_iam_a_slave)
    Slave_lastIndex                          0x3000b82e   Data          12  slave.o(.rodata.Slave_lastIndex)
    Slave_objdict                            0x3000b83c   Data         192  slave.o(.rodata.Slave_objdict)
    armPllConfig_BOARD_BootClockRUN          0x3000b8fc   Data           8  clock_config.o(.rodata.armPllConfig_BOARD_BootClockRUN)
    sysPll2Config_BOARD_BootClockRUN         0x3000cb94   Data          12  clock_config.o(.rodata.sysPll2Config_BOARD_BootClockRUN)
    uxTopUsedPriority                        0x3000cba0   Data           4  tasks.o(.rodata.uxTopUsedPriority)
    videoPllConfig_BOARD_BootClockRUN        0x3000cba4   Data          20  clock_config.o(.rodata.videoPllConfig_BOARD_BootClockRUN)
    Region$$Table$$Base                      0x3000cbb8   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x3000cbd8   Number         0  anon$$obj.o(Region$$Table)



==============================================================================

Memory Map of the image

  Image Entry point : 0x30002415

  Load Region LR_m_text (Base: 0x30000400, Size: 0x0000d3f8, Max: 0x00fbfc00, ABSOLUTE, COMPRESSED[0x0000ca9c])

    Execution Region RW_m_ram_text (Exec base: 0x00000000, Load base: 0x3000ce9c, Size: 0x00000000, Max: 0x00040000, ABSOLUTE)

    **** No section assigned to this execution region ****


    Execution Region RW_m_data (Exec base: 0x20000000, Load base: 0x3000cbd8, Size: 0x00003c0c, Max: 0x0003f800, ABSOLUTE, COMPRESSED[0x000002c4])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   COMPRESSED   0x00000240   Data   RW         1250    .data.Slave_Data    slave.o
    0x20000240   COMPRESSED   0x00000010   Data   RW         1128    .data.Slave_Index1000  slave.o
    0x20000250   COMPRESSED   0x00000010   Data   RW         1130    .data.Slave_Index1001  slave.o
    0x20000260   COMPRESSED   0x00000010   Data   RW         1142    .data.Slave_Index1017  slave.o
    0x20000270   COMPRESSED   0x00000050   Data   RW         1148    .data.Slave_Index1018  slave.o
    0x200002c0   COMPRESSED   0x00000030   Data   RW         1152    .data.Slave_Index1200  slave.o
    0x200002f0   COMPRESSED   0x00000070   Data   RW         1160    .data.Slave_Index1400  slave.o
    0x20000360   COMPRESSED   0x00000070   Data   RW         1168    .data.Slave_Index1401  slave.o
    0x200003d0   COMPRESSED   0x00000070   Data   RW         1176    .data.Slave_Index1402  slave.o
    0x20000440   COMPRESSED   0x00000070   Data   RW         1184    .data.Slave_Index1403  slave.o
    0x200004b0   COMPRESSED   0x00000090   Data   RW         1187    .data.Slave_Index1600  slave.o
    0x20000540   COMPRESSED   0x00000090   Data   RW         1190    .data.Slave_Index1601  slave.o
    0x200005d0   COMPRESSED   0x00000090   Data   RW         1193    .data.Slave_Index1602  slave.o
    0x20000660   COMPRESSED   0x00000090   Data   RW         1196    .data.Slave_Index1603  slave.o
    0x200006f0   COMPRESSED   0x00000070   Data   RW         1204    .data.Slave_Index1800  slave.o
    0x20000760   COMPRESSED   0x00000070   Data   RW         1212    .data.Slave_Index1801  slave.o
    0x200007d0   COMPRESSED   0x00000070   Data   RW         1220    .data.Slave_Index1802  slave.o
    0x20000840   COMPRESSED   0x00000070   Data   RW         1228    .data.Slave_Index1803  slave.o
    0x200008b0   COMPRESSED   0x00000090   Data   RW         1231    .data.Slave_Index1A00  slave.o
    0x20000940   COMPRESSED   0x00000090   Data   RW         1234    .data.Slave_Index1A01  slave.o
    0x200009d0   COMPRESSED   0x00000090   Data   RW         1237    .data.Slave_Index1A02  slave.o
    0x20000a60   COMPRESSED   0x00000090   Data   RW         1240    .data.Slave_Index1A03  slave.o
    0x20000af0   COMPRESSED   0x00000010   Data   RW         1241    .data.Slave_Index2000  slave.o
    0x20000b00   COMPRESSED   0x00000010   Data   RW         1242    .data.Slave_Index2001  slave.o
    0x20000b10   COMPRESSED   0x00000010   Data   RW         1243    .data.Slave_Index2002  slave.o
    0x20000b20   COMPRESSED   0x00000048   Data   RW         1245    .data.Slave_PDO_status  slave.o
    0x20000b68   COMPRESSED   0x00000001   Data   RW         1143    .data.Slave_highestSubIndex_obj1018  slave.o
    0x20000b69   COMPRESSED   0x00000001   Data   RW         1149    .data.Slave_highestSubIndex_obj1200  slave.o
    0x20000b6a   COMPRESSED   0x00000001   Data   RW         1153    .data.Slave_highestSubIndex_obj1400  slave.o
    0x20000b6b   COMPRESSED   0x00000001   Data   RW         1161    .data.Slave_highestSubIndex_obj1401  slave.o
    0x20000b6c   COMPRESSED   0x00000001   Data   RW         1169    .data.Slave_highestSubIndex_obj1402  slave.o
    0x20000b6d   COMPRESSED   0x00000001   Data   RW         1177    .data.Slave_highestSubIndex_obj1403  slave.o
    0x20000b6e   COMPRESSED   0x00000001   Data   RW         1185    .data.Slave_highestSubIndex_obj1600  slave.o
    0x20000b6f   COMPRESSED   0x00000001   Data   RW         1188    .data.Slave_highestSubIndex_obj1601  slave.o
    0x20000b70   COMPRESSED   0x00000001   Data   RW         1191    .data.Slave_highestSubIndex_obj1602  slave.o
    0x20000b71   COMPRESSED   0x00000001   Data   RW         1194    .data.Slave_highestSubIndex_obj1603  slave.o
    0x20000b72   COMPRESSED   0x00000001   Data   RW         1197    .data.Slave_highestSubIndex_obj1800  slave.o
    0x20000b73   COMPRESSED   0x00000001   Data   RW         1205    .data.Slave_highestSubIndex_obj1801  slave.o
    0x20000b74   COMPRESSED   0x00000001   Data   RW         1213    .data.Slave_highestSubIndex_obj1802  slave.o
    0x20000b75   COMPRESSED   0x00000001   Data   RW         1221    .data.Slave_highestSubIndex_obj1803  slave.o
    0x20000b76   COMPRESSED   0x00000001   Data   RW         1229    .data.Slave_highestSubIndex_obj1A00  slave.o
    0x20000b77   COMPRESSED   0x00000001   Data   RW         1232    .data.Slave_highestSubIndex_obj1A01  slave.o
    0x20000b78   COMPRESSED   0x00000001   Data   RW         1235    .data.Slave_highestSubIndex_obj1A02  slave.o
    0x20000b79   COMPRESSED   0x00000001   Data   RW         1238    .data.Slave_highestSubIndex_obj1A03  slave.o
    0x20000b7a   COMPRESSED   0x00000002   PAD
    0x20000b7c   COMPRESSED   0x00000004   Data   RW         1138    .data.Slave_obj1014  slave.o
    0x20000b80   COMPRESSED   0x00000002   Data   RW         1141    .data.Slave_obj1017  slave.o
    0x20000b82   COMPRESSED   0x00000002   PAD
    0x20000b84   COMPRESSED   0x00000004   Data   RW         1150    .data.Slave_obj1200_COB_ID_Client_to_Server_Receive_SDO  slave.o
    0x20000b88   COMPRESSED   0x00000004   Data   RW         1151    .data.Slave_obj1200_COB_ID_Server_to_Client_Transmit_SDO  slave.o
    0x20000b8c   COMPRESSED   0x00000004   Data   RW         1154    .data.Slave_obj1400_COB_ID_used_by_PDO  slave.o
    0x20000b90   COMPRESSED   0x00000004   Data   RW         1162    .data.Slave_obj1401_COB_ID_used_by_PDO  slave.o
    0x20000b94   COMPRESSED   0x00000004   Data   RW         1170    .data.Slave_obj1402_COB_ID_used_by_PDO  slave.o
    0x20000b98   COMPRESSED   0x00000004   Data   RW         1178    .data.Slave_obj1403_COB_ID_used_by_PDO  slave.o
    0x20000b9c   COMPRESSED   0x00000004   Data   RW         1198    .data.Slave_obj1800_COB_ID_used_by_PDO  slave.o
    0x20000ba0   COMPRESSED   0x00000002   Data   RW         1202    .data.Slave_obj1800_Event_Timer  slave.o
    0x20000ba2   COMPRESSED   0x00000002   Data   RW         1200    .data.Slave_obj1800_Inhibit_Time  slave.o
    0x20000ba4   COMPRESSED   0x00000001   Data   RW         1199    .data.Slave_obj1800_Transmission_Type  slave.o
    0x20000ba5   COMPRESSED   0x00000003   PAD
    0x20000ba8   COMPRESSED   0x00000004   Data   RW         1206    .data.Slave_obj1801_COB_ID_used_by_PDO  slave.o
    0x20000bac   COMPRESSED   0x00000004   Data   RW         1214    .data.Slave_obj1802_COB_ID_used_by_PDO  slave.o
    0x20000bb0   COMPRESSED   0x00000004   Data   RW         1222    .data.Slave_obj1803_COB_ID_used_by_PDO  slave.o
    0x20000bb4   COMPRESSED   0x00000020   Data   RW         1230    .data.Slave_obj1A00  slave.o
    0x20000bd4   COMPRESSED   0x00000004   Data   RW          718    .data.SystemCoreClock  system_mimxrt1176_cm7.o
    0x20000bd8   COMPRESSED   0x00000001   Data   RW         1122    .data.ZONE_ONE      slave.o
    0x20000bd9   COMPRESSED   0x00000001   Data   RW         1124    .data.ZONE_THREE    slave.o
    0x20000bda   COMPRESSED   0x00000001   Data   RW         1123    .data.ZONE_TWO      slave.o
    0x20000bdb   COMPRESSED   0x00000001   PAD
    0x20000bdc   COMPRESSED   0x00000002   Data   RW         1108    .data.last_timer_raw  timer.o
    0x20000bde   COMPRESSED   0x00000002   PAD
    0x20000be0   COMPRESSED   0x00000004   Data   RW          268    .data.s_flexcanIsr  fsl_flexcan.o
    0x20000be4   COMPRESSED   0x00000034   Data   RW          514    .data.s_lpuartIsr   fsl_lpuart.o
    0x20000c18   COMPRESSED   0x00000004   Data   RW         1107    .data.total_sleep_time  timer.o
    0x20000c1c   COMPRESSED   0x00000004   Data   RW         1646    .data.uxCriticalNesting  port.o
    0x20000c20        -       0x00000004   Zero   RW           36    .bss.AppTaskCreate_Handle  flexcan_interrupt_transfer.o
    0x20000c24        -       0x00000004   Zero   RW           47    .bss.CANopenRx_Task_Handle  flexcan_interrupt_transfer.o
    0x20000c28        -       0x00000001   Zero   RW         1125    .bss.Slave_bDeviceNodeId  slave.o
    0x20000c29   COMPRESSED   0x00000001   PAD
    0x20000c2a        -       0x00000002   Zero   RW         1249    .bss.Slave_heartBeatTimers  slave.o
    0x20000c2c        -       0x00000001   Zero   RW         1131    .bss.Slave_highestSubIndex_obj1003  slave.o
    0x20000c2d        -       0x00000001   Zero   RW         1139    .bss.Slave_highestSubIndex_obj1016  slave.o
    0x20000c2e   COMPRESSED   0x00000002   PAD
    0x20000c30        -       0x00000004   Zero   RW         1127    .bss.Slave_obj1000  slave.o
    0x20000c34        -       0x00000001   Zero   RW         1129    .bss.Slave_obj1001  slave.o
    0x20000c35   COMPRESSED   0x00000003   PAD
    0x20000c38        -       0x00000004   Zero   RW         1132    .bss.Slave_obj1003  slave.o
    0x20000c3c        -       0x00000004   Zero   RW         1134    .bss.Slave_obj1005  slave.o
    0x20000c40        -       0x00000004   Zero   RW         1135    .bss.Slave_obj1006  slave.o
    0x20000c44        -       0x00000002   Zero   RW         1136    .bss.Slave_obj100C  slave.o
    0x20000c46        -       0x00000001   Zero   RW         1137    .bss.Slave_obj100D  slave.o
    0x20000c47   COMPRESSED   0x00000001   PAD
    0x20000c48        -       0x00000004   Zero   RW         1140    .bss.Slave_obj1016  slave.o
    0x20000c4c        -       0x00000004   Zero   RW         1145    .bss.Slave_obj1018_Product_Code  slave.o
    0x20000c50        -       0x00000004   Zero   RW         1146    .bss.Slave_obj1018_Revision_Number  slave.o
    0x20000c54        -       0x00000004   Zero   RW         1147    .bss.Slave_obj1018_Serial_Number  slave.o
    0x20000c58        -       0x00000004   Zero   RW         1144    .bss.Slave_obj1018_Vendor_ID  slave.o
    0x20000c5c        -       0x00000001   Zero   RW         1157    .bss.Slave_obj1400_Compatibility_Entry  slave.o
    0x20000c5d   COMPRESSED   0x00000001   PAD
    0x20000c5e        -       0x00000002   Zero   RW         1158    .bss.Slave_obj1400_Event_Timer  slave.o
    0x20000c60        -       0x00000002   Zero   RW         1156    .bss.Slave_obj1400_Inhibit_Time  slave.o
    0x20000c62        -       0x00000001   Zero   RW         1159    .bss.Slave_obj1400_SYNC_start_value  slave.o
    0x20000c63        -       0x00000001   Zero   RW         1155    .bss.Slave_obj1400_Transmission_Type  slave.o
    0x20000c64        -       0x00000001   Zero   RW         1165    .bss.Slave_obj1401_Compatibility_Entry  slave.o
    0x20000c65   COMPRESSED   0x00000001   PAD
    0x20000c66        -       0x00000002   Zero   RW         1166    .bss.Slave_obj1401_Event_Timer  slave.o
    0x20000c68        -       0x00000002   Zero   RW         1164    .bss.Slave_obj1401_Inhibit_Time  slave.o
    0x20000c6a        -       0x00000001   Zero   RW         1167    .bss.Slave_obj1401_SYNC_start_value  slave.o
    0x20000c6b        -       0x00000001   Zero   RW         1163    .bss.Slave_obj1401_Transmission_Type  slave.o
    0x20000c6c        -       0x00000001   Zero   RW         1173    .bss.Slave_obj1402_Compatibility_Entry  slave.o
    0x20000c6d   COMPRESSED   0x00000001   PAD
    0x20000c6e        -       0x00000002   Zero   RW         1174    .bss.Slave_obj1402_Event_Timer  slave.o
    0x20000c70        -       0x00000002   Zero   RW         1172    .bss.Slave_obj1402_Inhibit_Time  slave.o
    0x20000c72        -       0x00000001   Zero   RW         1175    .bss.Slave_obj1402_SYNC_start_value  slave.o
    0x20000c73        -       0x00000001   Zero   RW         1171    .bss.Slave_obj1402_Transmission_Type  slave.o
    0x20000c74        -       0x00000001   Zero   RW         1181    .bss.Slave_obj1403_Compatibility_Entry  slave.o
    0x20000c75   COMPRESSED   0x00000001   PAD
    0x20000c76        -       0x00000002   Zero   RW         1182    .bss.Slave_obj1403_Event_Timer  slave.o
    0x20000c78        -       0x00000002   Zero   RW         1180    .bss.Slave_obj1403_Inhibit_Time  slave.o
    0x20000c7a        -       0x00000001   Zero   RW         1183    .bss.Slave_obj1403_SYNC_start_value  slave.o
    0x20000c7b        -       0x00000001   Zero   RW         1179    .bss.Slave_obj1403_Transmission_Type  slave.o
    0x20000c7c        -       0x00000020   Zero   RW         1186    .bss.Slave_obj1600  slave.o
    0x20000c9c        -       0x00000020   Zero   RW         1189    .bss.Slave_obj1601  slave.o
    0x20000cbc        -       0x00000020   Zero   RW         1192    .bss.Slave_obj1602  slave.o
    0x20000cdc        -       0x00000020   Zero   RW         1195    .bss.Slave_obj1603  slave.o
    0x20000cfc        -       0x00000001   Zero   RW         1201    .bss.Slave_obj1800_Compatibility_Entry  slave.o
    0x20000cfd        -       0x00000001   Zero   RW         1203    .bss.Slave_obj1800_SYNC_start_value  slave.o
    0x20000cfe        -       0x00000001   Zero   RW         1209    .bss.Slave_obj1801_Compatibility_Entry  slave.o
    0x20000cff   COMPRESSED   0x00000001   PAD
    0x20000d00        -       0x00000002   Zero   RW         1210    .bss.Slave_obj1801_Event_Timer  slave.o
    0x20000d02        -       0x00000002   Zero   RW         1208    .bss.Slave_obj1801_Inhibit_Time  slave.o
    0x20000d04        -       0x00000001   Zero   RW         1211    .bss.Slave_obj1801_SYNC_start_value  slave.o
    0x20000d05        -       0x00000001   Zero   RW         1207    .bss.Slave_obj1801_Transmission_Type  slave.o
    0x20000d06        -       0x00000001   Zero   RW         1217    .bss.Slave_obj1802_Compatibility_Entry  slave.o
    0x20000d07   COMPRESSED   0x00000001   PAD
    0x20000d08        -       0x00000002   Zero   RW         1218    .bss.Slave_obj1802_Event_Timer  slave.o
    0x20000d0a        -       0x00000002   Zero   RW         1216    .bss.Slave_obj1802_Inhibit_Time  slave.o
    0x20000d0c        -       0x00000001   Zero   RW         1219    .bss.Slave_obj1802_SYNC_start_value  slave.o
    0x20000d0d        -       0x00000001   Zero   RW         1215    .bss.Slave_obj1802_Transmission_Type  slave.o
    0x20000d0e        -       0x00000001   Zero   RW         1225    .bss.Slave_obj1803_Compatibility_Entry  slave.o
    0x20000d0f   COMPRESSED   0x00000001   PAD
    0x20000d10        -       0x00000002   Zero   RW         1226    .bss.Slave_obj1803_Event_Timer  slave.o
    0x20000d12        -       0x00000002   Zero   RW         1224    .bss.Slave_obj1803_Inhibit_Time  slave.o
    0x20000d14        -       0x00000001   Zero   RW         1227    .bss.Slave_obj1803_SYNC_start_value  slave.o
    0x20000d15        -       0x00000001   Zero   RW         1223    .bss.Slave_obj1803_Transmission_Type  slave.o
    0x20000d16   COMPRESSED   0x00000002   PAD
    0x20000d18        -       0x00000020   Zero   RW         1233    .bss.Slave_obj1A01  slave.o
    0x20000d38        -       0x00000020   Zero   RW         1236    .bss.Slave_obj1A02  slave.o
    0x20000d58        -       0x00000020   Zero   RW         1239    .bss.Slave_obj1A03  slave.o
    0x20000d78        -       0x00000024   Zero   RW           38    .bss.flexcanConfig  flexcan_interrupt_transfer.o
    0x20000d9c        -       0x00000358   Zero   RW           34    .bss.flexcanHandle  flexcan_interrupt_transfer.o
    0x200010f4        -       0x00000010   Zero   RW           41    .bss.gptConfig      flexcan_interrupt_transfer.o
    0x20001104        -       0x00000004   Zero   RW           40    .bss.gptFreq        flexcan_interrupt_transfer.o
    0x20001108        -       0x00000008   Zero   RW           39    .bss.mbConfig       flexcan_interrupt_transfer.o
    0x20001110        -       0x00000004   Zero   RW         1607    .bss.prvSampleTimeNow.xLastTime  timers.o
    0x20001114        -       0x00000004   Zero   RW         1533    .bss.pxCurrentTCB   tasks.o
    0x20001118        -       0x00000004   Zero   RW         1605    .bss.pxCurrentTimerList  timers.o
    0x2000111c        -       0x00000004   Zero   RW         1544    .bss.pxDelayedTaskList  tasks.o
    0x20001120        -       0x00000004   Zero   RW         1669    .bss.pxEnd          heap_4.o
    0x20001124        -       0x00000004   Zero   RW         1545    .bss.pxOverflowDelayedTaskList  tasks.o
    0x20001128        -       0x00000004   Zero   RW         1606    .bss.pxOverflowTimerList  timers.o
    0x2000112c        -       0x00000064   Zero   RW         1535    .bss.pxReadyTasksLists  tasks.o
    0x20001190        -       0x00000001   Zero   RW           26    .bss.rxComplete     flexcan_interrupt_transfer.o
    0x20001191   COMPRESSED   0x00000003   PAD
    0x20001194        -       0x00000010   Zero   RW           43    .bss.rxFrame        flexcan_interrupt_transfer.o
    0x200011a4        -       0x0000000c   Zero   RW           44    .bss.rxMessage      flexcan_interrupt_transfer.o
    0x200011b0        -       0x0000000c   Zero   RW           37    .bss.rxXfer         flexcan_interrupt_transfer.o
    0x200011bc        -       0x00000014   Zero   RW          142    .bss.s_debugConsole  fsl_debug_console.o
    0x200011d0        -       0x00000010   Zero   RW          267    .bss.s_flexcanHandle  fsl_flexcan.o
    0x200011e0        -       0x00000034   Zero   RW          518    .bss.s_lpuartHandle  fsl_lpuart.o
    0x20001214        -       0x000000c0   Zero   RW         1106    .bss.timers         timer.o
    0x200012d4        -       0x00000001   Zero   RW           25    .bss.txComplete     flexcan_interrupt_transfer.o
    0x200012d5   COMPRESSED   0x00000003   PAD
    0x200012d8        -       0x0000000c   Zero   RW           33    .bss.txXfer         flexcan_interrupt_transfer.o
    0x200012e4        -       0x00002800   Zero   RW         1675    .bss.ucHeap         heap_4.o
    0x20003ae4        -       0x00000001   Zero   RW         1644    .bss.ucMaxSysCallPriority  port.o
    0x20003ae5   COMPRESSED   0x00000003   PAD
    0x20003ae8        -       0x00000004   Zero   RW         1645    .bss.ulMaxPRIGROUPValue  port.o
    0x20003aec        -       0x00000004   Zero   RW         1540    .bss.uxCurrentNumberOfTasks  tasks.o
    0x20003af0        -       0x00000004   Zero   RW         1539    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x20003af4        -       0x00000004   Zero   RW         1542    .bss.uxSchedulerSuspended  tasks.o
    0x20003af8        -       0x00000004   Zero   RW         1537    .bss.uxTaskNumber   tasks.o
    0x20003afc        -       0x00000004   Zero   RW         1536    .bss.uxTopReadyPriority  tasks.o
    0x20003b00        -       0x00000001   Zero   RW           27    .bss.wakenUp        flexcan_interrupt_transfer.o
    0x20003b01   COMPRESSED   0x00000003   PAD
    0x20003b04        -       0x00000014   Zero   RW         1608    .bss.xActiveTimerList1  timers.o
    0x20003b18        -       0x00000014   Zero   RW         1609    .bss.xActiveTimerList2  timers.o
    0x20003b2c        -       0x00000014   Zero   RW         1553    .bss.xDelayedTaskList1  tasks.o
    0x20003b40        -       0x00000014   Zero   RW         1554    .bss.xDelayedTaskList2  tasks.o
    0x20003b54        -       0x00000004   Zero   RW         1670    .bss.xFreeBytesRemaining  heap_4.o
    0x20003b58        -       0x00000004   Zero   RW         1549    .bss.xIdleTaskHandle  tasks.o
    0x20003b5c        -       0x00000004   Zero   RW         1672    .bss.xMinimumEverFreeBytesRemaining  heap_4.o
    0x20003b60        -       0x00000004   Zero   RW         1550    .bss.xNextTaskUnblockTime  tasks.o
    0x20003b64        -       0x00000004   Zero   RW         1552    .bss.xNumOfOverflows  tasks.o
    0x20003b68        -       0x00000004   Zero   RW         1673    .bss.xNumberOfSuccessfulAllocations  heap_4.o
    0x20003b6c        -       0x00000004   Zero   RW         1674    .bss.xNumberOfSuccessfulFrees  heap_4.o
    0x20003b70        -       0x00000004   Zero   RW         1551    .bss.xPendedTicks   tasks.o
    0x20003b74        -       0x00000014   Zero   RW         1548    .bss.xPendingReadyList  tasks.o
    0x20003b88        -       0x00000040   Zero   RW         1370    .bss.xQueueRegistry  queue.o
    0x20003bc8        -       0x00000004   Zero   RW         1541    .bss.xSchedulerRunning  tasks.o
    0x20003bcc        -       0x00000008   Zero   RW         1671    .bss.xStart         heap_4.o
    0x20003bd4        -       0x00000014   Zero   RW         1546    .bss.xSuspendedTaskList  tasks.o
    0x20003be8        -       0x00000014   Zero   RW         1538    .bss.xTasksWaitingTermination  tasks.o
    0x20003bfc        -       0x00000004   Zero   RW         1543    .bss.xTickCount     tasks.o
    0x20003c00        -       0x00000004   Zero   RW         1603    .bss.xTimerQueue    timers.o
    0x20003c04        -       0x00000004   Zero   RW         1604    .bss.xTimerTaskHandle  timers.o
    0x20003c08        -       0x00000004   Zero   RW         1547    .bss.xYieldPending  tasks.o


    Execution Region ARM_LIB_HEAP (Exec base: 0x20003c0c, Load base: 0x3000ce9c, Size: 0x00000400, Max: 0x00000400, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20003c0c        -       0x00000400   Zero   RW            2    ARM_LIB_HEAP.bss    anon$$obj.o


    Execution Region ARM_LIB_STACK (Exec base: 0x2003fc00, Load base: 0x3000ce9c, Size: 0x00000400, Max: 0x00000400, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x2003fc00        -       0x00000400   Zero   RW            3    ARM_LIB_STACK.bss   anon$$obj.o


    Execution Region RW_m_ncache (Exec base: 0x202c0000, Load base: 0x3000ce9c, Size: 0x00000000, Max: 0x00000000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x202c0000        -       0x00000000   Zero   RW            4    RW_m_ncache.bss     anon$$obj.o


    Execution Region RW_m_ncache_unused (Exec base: 0x202c0000, Load base: 0x3000ce9c, Size: 0x00080000, Max: 0x00080000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x202c0000        -       0x00080000   Zero   RW            5    RW_m_ncache_unused.bss  anon$$obj.o


    Execution Region RW_m_config_text (Exec base: 0x30000400, Load base: 0x30000400, Size: 0x00000200, Max: 0x00000c00, ABSOLUTE, FIXED)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x30000400   0x30000400   0x00000200   Data   RO          793    .boot_hdr.conf      evkmimxrt1170_flexspi_nor_config.o


    Execution Region RW_m_ivt_text (Exec base: 0x30001000, Load base: 0x30001000, Size: 0x00000030, Max: 0x00001000, ABSOLUTE, FIXED)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x30001000   0x30001000   0x00000020   Data   RO          787    .boot_hdr.ivt       fsl_flexspi_nor_boot.o
    0x30001020   0x30001020   0x00000010   Data   RO          786    .boot_hdr.boot_data  fsl_flexspi_nor_boot.o


    Execution Region VECTOR_ROM (Exec base: 0x30002000, Load base: 0x30002000, Size: 0x00000400, Max: 0x00000400, ABSOLUTE, FIXED)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x30002000   0x30002000   0x00000400   Data   RO          780    .isr_vector         startup_mimxrt1176_cm7.o


    Execution Region VECTOR_RAM (Exec base: 0x30002000, Load base: 0x3000cbd8, Size: 0x00000000, Max: 0x00000000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x30002000        -       0x00000000   Zero   RW            1    VECTOR_RAM.bss      anon$$obj.o


    Execution Region ER_m_text (Exec base: 0x30002400, Load base: 0x30002400, Size: 0x0000a7d8, Max: 0x00fbdc00, ABSOLUTE, FIXED)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x30002400   0x30002400   0x00000000   Code   RO         1683  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x30002400   0x30002400   0x00000004   Code   RO         1737    .ARM.Collect$$$$00000003  mc_w.l(entry4.o)
    0x30002404   0x30002404   0x00000004   Code   RO         1740    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x30002408   0x30002408   0x00000000   Code   RO         1742    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x30002408   0x30002408   0x00000000   Code   RO         1744    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x30002408   0x30002408   0x00000008   Code   RO         1745    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x30002410   0x30002410   0x00000000   Code   RO         1747    .ARM.Collect$$$$0000000D  mc_w.l(entry10a.o)
    0x30002410   0x30002410   0x00000000   Code   RO         1749    .ARM.Collect$$$$0000000F  mc_w.l(entry11a.o)
    0x30002410   0x30002410   0x00000004   Code   RO         1738    .ARM.Collect$$$$00002714  mc_w.l(entry4.o)
    0x30002414   0x30002414   0x000002d4   Code   RO          779  * .text               startup_mimxrt1176_cm7.o
    0x300026e8   0x300026e8   0x00000062   Code   RO         1686    .text               mc_w.l(uldiv.o)
    0x3000274a   0x3000274a   0x00000028   Code   RO         1688    .text               mc_w.l(memcpy.o)
    0x30002772   0x30002772   0x00000012   Code   RO         1690    .text               mc_w.l(memset.o)
    0x30002784   0x30002784   0x0000000e   Code   RO         1694    .text               mc_w.l(strlen.o)
    0x30002792   0x30002792   0x0000001a   Code   RO         1696    .text               mc_w.l(memcmp.o)
    0x300027ac   0x300027ac   0x0000001e   Code   RO         1751    .text               mc_w.l(llshl.o)
    0x300027ca   0x300027ca   0x00000020   Code   RO         1753    .text               mc_w.l(llushr.o)
    0x300027ea   0x300027ea   0x00000002   PAD
    0x300027ec   0x300027ec   0x00000030   Code   RO         1791    .text               mc_w.l(init.o)
    0x3000281c   0x3000281c   0x00000056   Code   RO         1803    .text               mc_w.l(__dczerorl2.o)
    0x30002872   0x30002872   0x00000006   PAD
    0x30002878   0x30002878   0x00000348   Code   RO          679    .text.ANATOP_AI_Access  fsl_anatop_ai.o
    0x30002bc0   0x30002bc0   0x0000000a   Code   RO          683    .text.ANATOP_AI_Read  fsl_anatop_ai.o
    0x30002bca   0x30002bca   0x00000006   PAD
    0x30002bd0   0x30002bd0   0x0000000c   Code   RO          681    .text.ANATOP_AI_Write  fsl_anatop_ai.o
    0x30002bdc   0x30002bdc   0x00000004   PAD
    0x30002be0   0x30002be0   0x00000030   Code   RO          685    .text.ANATOP_AI_WriteWithMaskShift  fsl_anatop_ai.o
    0x30002c10   0x30002c10   0x0000009e   Code   RO          310    .text.ANATOP_PllConfigure  fsl_clock.o
    0x30002cae   0x30002cae   0x00000002   PAD
    0x30002cb0   0x30002cb0   0x00000074   Code   RO           19    .text.AppTaskCreate  flexcan_interrupt_transfer.o
    0x30002d24   0x30002d24   0x00000004   PAD
    0x30002d28   0x30002d28   0x00000622   Code   RO           90    .text.BOARD_BootClockRUN  clock_config.o
    0x3000334a   0x3000334a   0x00000006   PAD
    0x30003350   0x30003350   0x00000334   Code   RO           72    .text.BOARD_ConfigMPU  board.o
    0x30003684   0x30003684   0x00000004   PAD
    0x30003688   0x30003688   0x0000005a   Code   RO           70    .text.BOARD_InitDebugConsole  board.o
    0x300036e2   0x300036e2   0x00000006   PAD
    0x300036e8   0x300036e8   0x00000066   Code   RO           59    .text.BOARD_InitPins  pin_mux.o
    0x3000374e   0x3000374e   0x00000002   PAD
    0x30003750   0x30003750   0x00000058   Code   RO          258    .text.CAN1_DriverIRQHandler  fsl_flexcan.o
    0x300037a8   0x300037a8   0x00000058   Code   RO          260    .text.CAN2_DriverIRQHandler  fsl_flexcan.o
    0x30003800   0x30003800   0x00000058   Code   RO          262    .text.CAN3_DriverIRQHandler  fsl_flexcan.o
    0x30003858   0x30003858   0x0000018c   Code   RO           23    .text.CANopenRx_Task  flexcan_interrupt_transfer.o
    0x300039e4   0x300039e4   0x00000004   PAD
    0x300039e8   0x300039e8   0x0000004e   Code   RO          312    .text.CLOCK_DeinitAudioPll  fsl_clock.o
    0x30003a36   0x30003a36   0x00000002   PAD
    0x30003a38   0x30003a38   0x0000005e   Code   RO          330    .text.CLOCK_DeinitSysPll1  fsl_clock.o
    0x30003a96   0x30003a96   0x00000002   PAD
    0x30003a98   0x30003a98   0x000002e8   Code   RO          368    .text.CLOCK_GetFreq  fsl_clock.o
    0x30003d80   0x30003d80   0x000000d4   Code   RO          278    .text.CLOCK_InitArmPll  fsl_clock.o
    0x30003e54   0x30003e54   0x00000004   PAD
    0x30003e58   0x30003e58   0x00000118   Code   RO          290    .text.CLOCK_InitPfd  fsl_clock.o
    0x30003f70   0x30003f70   0x000000fe   Code   RO          284    .text.CLOCK_InitSysPll2  fsl_clock.o
    0x3000406e   0x3000406e   0x00000002   PAD
    0x30004070   0x30004070   0x0000008c   Code   RO          296    .text.CLOCK_InitSysPll3  fsl_clock.o
    0x300040fc   0x300040fc   0x00000004   PAD
    0x30004100   0x30004100   0x000000d8   Code   RO          322    .text.CLOCK_InitVideoPll  fsl_clock.o
    0x300041d8   0x300041d8   0x0000001a   Code   RO          374    .text.CLOCK_OSC_EnableOscRc400M  fsl_clock.o
    0x300041f2   0x300041f2   0x00000006   PAD
    0x300041f8   0x300041f8   0x0000002c   Code   RO          354    .text.CLOCK_OSC_Set1MHzOutputBehavior  fsl_clock.o
    0x30004224   0x30004224   0x00000004   PAD
    0x30004228   0x30004228   0x00000094   Code   RO          302    .text.CLOCK_SetPllBypass  fsl_clock.o
    0x300042bc   0x300042bc   0x00000004   PAD
    0x300042c0   0x300042c0   0x00000028   Code   RO          851    .text.ConsumerHeartbeatAlarm  lifegrd.o
    0x300042e8   0x300042e8   0x0000003a   Code   RO          648    .text.DCDC_BootIntoDCM  fsl_dcdc.o
    0x30004322   0x30004322   0x00000006   PAD
    0x30004328   0x30004328   0x00000052   Code   RO          128    .text.DbgConsole_Init  fsl_debug_console.o
    0x3000437a   0x3000437a   0x00000006   PAD
    0x30004380   0x30004380   0x00000020   Code   RO          132    .text.DbgConsole_Printf  fsl_debug_console.o
    0x300043a0   0x300043a0   0x00000428   Code   RO          134    .text.DbgConsole_Vprintf  fsl_debug_console.o
    0x300047c8   0x300047c8   0x00000034   Code   RO         1102    .text.DelAlarm      timer.o
    0x300047fc   0x300047fc   0x00000004   PAD
    0x30004800   0x30004800   0x00000146   Code   RO          168    .text.FLEXCAN_CalculateImprovedTimingValues  fsl_flexcan.o
    0x30004946   0x30004946   0x00000002   PAD
    0x30004948   0x30004948   0x00000078   Code   RO          186    .text.FLEXCAN_GetDefaultConfig  fsl_flexcan.o
    0x300049c0   0x300049c0   0x000002e0   Code   RO          178    .text.FLEXCAN_Init  fsl_flexcan.o
    0x30004ca0   0x30004ca0   0x0000015a   Code   RO          216    .text.FLEXCAN_ReadFDRxMb  fsl_flexcan.o
    0x30004dfa   0x30004dfa   0x00000006   PAD
    0x30004e00   0x30004e00   0x000000b8   Code   RO          214    .text.FLEXCAN_ReadRxMb  fsl_flexcan.o
    0x30004eb8   0x30004eb8   0x000000ec   Code   RO          180    .text.FLEXCAN_Reset  fsl_flexcan.o
    0x30004fa4   0x30004fa4   0x00000004   PAD
    0x30004fa8   0x30004fa8   0x0000010a   Code   RO          198    .text.FLEXCAN_SetFDTxMbConfig  fsl_flexcan.o
    0x300050b2   0x300050b2   0x00000006   PAD
    0x300050b8   0x300050b8   0x000000b4   Code   RO          200    .text.FLEXCAN_SetRxMbConfig  fsl_flexcan.o
    0x3000516c   0x3000516c   0x00000004   PAD
    0x30005170   0x30005170   0x00000040   Code   RO          188    .text.FLEXCAN_SetRxMbGlobalMask  fsl_flexcan.o
    0x300051b0   0x300051b0   0x00000070   Code   RO          194    .text.FLEXCAN_SetTxMbConfig  fsl_flexcan.o
    0x30005220   0x30005220   0x000000a4   Code   RO          252    .text.FLEXCAN_TransferAbortReceive  fsl_flexcan.o
    0x300052c4   0x300052c4   0x00000004   PAD
    0x300052c8   0x300052c8   0x00000110   Code   RO          246    .text.FLEXCAN_TransferAbortSend  fsl_flexcan.o
    0x300053d8   0x300053d8   0x0000010c   Code   RO          230    .text.FLEXCAN_TransferCreateHandle  fsl_flexcan.o
    0x300054e4   0x300054e4   0x00000004   PAD
    0x300054e8   0x300054e8   0x000000a6   Code   RO          250    .text.FLEXCAN_TransferFDAbortReceive  fsl_flexcan.o
    0x3000558e   0x3000558e   0x00000002   PAD
    0x30005590   0x30005590   0x00000128   Code   RO          248    .text.FLEXCAN_TransferFDAbortSend  fsl_flexcan.o
    0x300056b8   0x300056b8   0x000003fa   Code   RO          232    .text.FLEXCAN_TransferHandleIRQ  fsl_flexcan.o
    0x30005ab2   0x30005ab2   0x00000006   PAD
    0x30005ab8   0x30005ab8   0x000000d6   Code   RO          236    .text.FLEXCAN_TransferReceiveNonBlocking  fsl_flexcan.o
    0x30005b8e   0x30005b8e   0x00000002   PAD
    0x30005b90   0x30005b90   0x000000f0   Code   RO          234    .text.FLEXCAN_TransferSendNonBlocking  fsl_flexcan.o
    0x30005c80   0x30005c80   0x000000ec   Code   RO          210    .text.FLEXCAN_WriteTxMb  fsl_flexcan.o
    0x30005d6c   0x30005d6c   0x00000004   PAD
    0x30005d70   0x30005d70   0x00000016   Code   RO           15    .text.GPT2_IRQHandler  flexcan_interrupt_transfer.o
    0x30005d86   0x30005d86   0x00000002   PAD
    0x30005d88   0x30005d88   0x00000048   Code   RO          699    .text.GPT_GetDefaultConfig  fsl_gpt.o
    0x30005dd0   0x30005dd0   0x00000190   Code   RO          695    .text.GPT_Init      fsl_gpt.o
    0x30005f60   0x30005f60   0x0000006a   Code   RO          857    .text.GuardTimeAlarm  lifegrd.o
    0x30005fca   0x30005fca   0x00000006   PAD
    0x30005fd0   0x30005fd0   0x00000148   Code   RO          726    .text.HAL_UartInit  fsl_adapter_lpuart.o
    0x30006118   0x30006118   0x0000006c   Code   RO          730    .text.HAL_UartReceiveBlocking  fsl_adapter_lpuart.o
    0x30006184   0x30006184   0x00000004   PAD
    0x30006188   0x30006188   0x00000066   Code   RO          732    .text.HAL_UartSendBlocking  fsl_adapter_lpuart.o
    0x300061ee   0x300061ee   0x00000002   PAD
    0x300061f0   0x300061f0   0x00000024   Code   RO          507    .text.LPUART10_DriverIRQHandler  fsl_lpuart.o
    0x30006214   0x30006214   0x00000004   PAD
    0x30006218   0x30006218   0x00000026   Code   RO          509    .text.LPUART11_DriverIRQHandler  fsl_lpuart.o
    0x3000623e   0x3000623e   0x00000002   PAD
    0x30006240   0x30006240   0x00000026   Code   RO          511    .text.LPUART12_DriverIRQHandler  fsl_lpuart.o
    0x30006266   0x30006266   0x00000002   PAD
    0x30006268   0x30006268   0x00000026   Code   RO          489    .text.LPUART1_DriverIRQHandler  fsl_lpuart.o
    0x3000628e   0x3000628e   0x00000002   PAD
    0x30006290   0x30006290   0x00000024   Code   RO          491    .text.LPUART2_DriverIRQHandler  fsl_lpuart.o
    0x300062b4   0x300062b4   0x00000004   PAD
    0x300062b8   0x300062b8   0x00000026   Code   RO          493    .text.LPUART3_DriverIRQHandler  fsl_lpuart.o
    0x300062de   0x300062de   0x00000002   PAD
    0x300062e0   0x300062e0   0x00000026   Code   RO          495    .text.LPUART4_DriverIRQHandler  fsl_lpuart.o
    0x30006306   0x30006306   0x00000002   PAD
    0x30006308   0x30006308   0x00000026   Code   RO          497    .text.LPUART5_DriverIRQHandler  fsl_lpuart.o
    0x3000632e   0x3000632e   0x00000002   PAD
    0x30006330   0x30006330   0x00000024   Code   RO          499    .text.LPUART6_DriverIRQHandler  fsl_lpuart.o
    0x30006354   0x30006354   0x00000004   PAD
    0x30006358   0x30006358   0x00000026   Code   RO          501    .text.LPUART7_DriverIRQHandler  fsl_lpuart.o
    0x3000637e   0x3000637e   0x00000002   PAD
    0x30006380   0x30006380   0x00000026   Code   RO          503    .text.LPUART8_DriverIRQHandler  fsl_lpuart.o
    0x300063a6   0x300063a6   0x00000002   PAD
    0x300063a8   0x300063a8   0x00000026   Code   RO          505    .text.LPUART9_DriverIRQHandler  fsl_lpuart.o
    0x300063ce   0x300063ce   0x00000002   PAD
    0x300063d0   0x300063d0   0x0000003a   Code   RO          445    .text.LPUART_GetDefaultConfig  fsl_lpuart.o
    0x3000640a   0x3000640a   0x00000006   PAD
    0x30006410   0x30006410   0x00000290   Code   RO          441    .text.LPUART_Init   fsl_lpuart.o
    0x300066a0   0x300066a0   0x00000114   Code   RO          465    .text.LPUART_ReadBlocking  fsl_lpuart.o
    0x300067b4   0x300067b4   0x00000004   PAD
    0x300067b8   0x300067b8   0x00000036   Code   RO          463    .text.LPUART_WriteBlocking  fsl_lpuart.o
    0x300067ee   0x300067ee   0x00000002   PAD
    0x300067f0   0x300067f0   0x0000000a   Code   RO         1078    .text.OnCOB_ID_SyncUpdate  sync.o
    0x300067fa   0x300067fa   0x00000006   PAD
    0x30006800   0x30006800   0x0000003e   Code   RO          865    .text.OnHeartbeatProducerUpdate  lifegrd.o
    0x3000683e   0x3000683e   0x00000002   PAD
    0x30006840   0x30006840   0x0000001a   Code   RO          859    .text.OnNodeGuardUpdate  lifegrd.o
    0x3000685a   0x3000685a   0x00000006   PAD
    0x30006860   0x30006860   0x00000024   Code   RO          825    .text.OnNumberOfErrorsUpdate  emcy.o
    0x30006884   0x30006884   0x00000004   PAD
    0x30006888   0x30006888   0x0000001a   Code   RO          944    .text.PDOEventTimerAlarm  pdo.o
    0x300068a2   0x300068a2   0x00000006   PAD
    0x300068a8   0x300068a8   0x0000002c   Code   RO          952    .text.PDOInhibitTimerAlarm  pdo.o
    0x300068d4   0x300068d4   0x00000004   PAD
    0x300068d8   0x300068d8   0x00000066   Code   RO          958    .text.PDOInit       pdo.o
    0x3000693e   0x3000693e   0x00000002   PAD
    0x30006940   0x30006940   0x0000006c   Code   RO          960    .text.PDOStop       pdo.o
    0x300069ac   0x300069ac   0x00000004   PAD
    0x300069b0   0x300069b0   0x000000ca   Code   RO          602    .text.PMU_EnableBodyBias  fsl_pmu.o
    0x30006a7a   0x30006a7a   0x00000006   PAD
    0x30006a80   0x30006a80   0x00000094   Code   RO          552    .text.PMU_StaticEnableLpsrAnaLdoBypassMode  fsl_pmu.o
    0x30006b14   0x30006b14   0x00000004   PAD
    0x30006b18   0x30006b18   0x0000006a   Code   RO          562    .text.PMU_StaticEnableLpsrDigLdoBypassMode  fsl_pmu.o
    0x30006b82   0x30006b82   0x00000006   PAD
    0x30006b88   0x30006b88   0x0000003e   Code   RO          546    .text.PMU_StaticEnablePllLdo  fsl_pmu.o
    0x30006bc6   0x30006bc6   0x0000000a   PAD
    0x30006bd0   0x30006bd0   0x00000064   Code   RO         1638    .text.PendSV_Handler  port.o
    0x30006c34   0x30006c34   0x00000004   PAD
    0x30006c38   0x30006c38   0x0000004a   Code   RO          855    .text.ProducerHeartbeatAlarm  lifegrd.o
    0x30006c82   0x30006c82   0x00000006   PAD
    0x30006c88   0x30006c88   0x00000028   Code   RO          924    .text.RegisterSetODentryCallBack  objacces.o
    0x30006cb0   0x30006cb0   0x00000058   Code   RO          426    .text.SDK_DelayAtLeastUs  fsl_common_arm.o
    0x30006d08   0x30006d08   0x000000cc   Code   RO          974    .text.SDOTimeoutAlarm  sdo.o
    0x30006dd4   0x30006dd4   0x00000004   PAD
    0x30006dd8   0x30006dd8   0x0000003c   Code   RO          982    .text.SDOlineToObjdict  sdo.o
    0x30006e14   0x30006e14   0x0000000c   PAD
    0x30006e20   0x30006e20   0x00000024   Code   RO         1622    .text.SVC_Handler   port.o
    0x30006e44   0x30006e44   0x00000004   PAD
    0x30006e48   0x30006e48   0x000000a6   Code   RO         1100    .text.SetAlarm      timer.o
    0x30006eee   0x30006eee   0x00000002   PAD
    0x30006ef0   0x30006ef0   0x0000012a   Code   RO         1120    .text.Slave_scanIndexOD  slave.o
    0x3000701a   0x3000701a   0x00000006   PAD
    0x30007020   0x30007020   0x00000014   Code   RO         1118    .text.Slave_valueRangeTest  slave.o
    0x30007034   0x30007034   0x00000004   PAD
    0x30007038   0x30007038   0x00000042   Code   RO         1074    .text.SyncAlarm     sync.o
    0x3000707a   0x3000707a   0x00000006   PAD
    0x30007080   0x30007080   0x00000032   Code   RO         1640    .text.SysTick_Handler  port.o
    0x300070b2   0x300070b2   0x00000006   PAD
    0x300070b8   0x300070b8   0x00000120   Code   RO          712    .text.SystemInit    system_mimxrt1176_cm7.o
    0x300071d8   0x300071d8   0x00000002   Code   RO          714    .text.SystemInitHook  system_mimxrt1176_cm7.o
    0x300071da   0x300071da   0x00000006   PAD
    0x300071e0   0x300071e0   0x0000007a   Code   RO          956    .text.TPDO_Communication_Parameter_Callback  pdo.o
    0x3000725a   0x3000725a   0x00000006   PAD
    0x30007260   0x30007260   0x000000d6   Code   RO         1104    .text.TimeDispatch  timer.o
    0x30007336   0x30007336   0x00000002   PAD
    0x30007338   0x30007338   0x00000002   Code   RO          954    .text._RxPDO_EventTimers_Handler  pdo.o
    0x3000733a   0x3000733a   0x00000006   PAD
    0x30007340   0x30007340   0x0000003c   Code   RO          151    .text.__aeabi_assert  fsl_assert.o
    0x3000737c   0x3000737c   0x00000004   PAD
    0x30007380   0x30007380   0x000000aa   Code   RO          920    .text._getODentry   objacces.o
    0x3000742a   0x3000742a   0x00000006   PAD
    0x30007430   0x30007430   0x00000002   Code   RO          875    .text._heartbeatError  lifegrd.o
    0x30007432   0x30007432   0x00000006   PAD
    0x30007438   0x30007438   0x00000002   Code   RO         1054    .text._initialisation  states.o
    0x3000743a   0x3000743a   0x00000006   PAD
    0x30007440   0x30007440   0x00000002   Code   RO          881    .text._nodeguardError  lifegrd.o
    0x30007442   0x30007442   0x00000006   PAD
    0x30007448   0x30007448   0x00000002   Code   RO         1058    .text._operational  states.o
    0x3000744a   0x3000744a   0x00000006   PAD
    0x30007450   0x30007450   0x00000002   Code   RO          877    .text._post_SlaveBootup  lifegrd.o
    0x30007452   0x30007452   0x00000006   PAD
    0x30007458   0x30007458   0x00000002   Code   RO          879    .text._post_SlaveStateChange  lifegrd.o
    0x3000745a   0x3000745a   0x00000006   PAD
    0x30007460   0x30007460   0x00000002   Code   RO         1090    .text._post_TPDO    sync.o
    0x30007462   0x30007462   0x00000006   PAD
    0x30007468   0x30007468   0x00000002   Code   RO          839    .text._post_emcy    emcy.o
    0x3000746a   0x3000746a   0x00000006   PAD
    0x30007470   0x30007470   0x00000002   Code   RO         1088    .text._post_sync    sync.o
    0x30007472   0x30007472   0x00000006   PAD
    0x30007478   0x30007478   0x00000012   Code   RO         1056    .text._preOperational  states.o
    0x3000748a   0x3000748a   0x00000006   PAD
    0x30007490   0x30007490   0x00000156   Code   RO          948    .text._sendPDOevent  pdo.o
    0x300075e6   0x300075e6   0x00000002   PAD
    0x300075e8   0x300075e8   0x000000ec   Code   RO          922    .text._setODentry   objacces.o
    0x300076d4   0x300076d4   0x00000004   PAD
    0x300076d8   0x300076d8   0x00000002   Code   RO         1060    .text._stopped      states.o
    0x300076da   0x300076da   0x00000006   PAD
    0x300076e0   0x300076e0   0x00000004   Code   RO          926    .text._storeODSubIndex  objacces.o
    0x300076e4   0x300076e4   0x00000004   PAD
    0x300076e8   0x300076e8   0x00000182   Code   RO          936    .text.buildPDO      pdo.o
    0x3000786a   0x3000786a   0x00000006   PAD
    0x30007870   0x30007870   0x00000068   Code   RO         1044    .text.canDispatch   states.o
    0x300078d8   0x300078d8   0x00000092   Code   RO           13    .text.canSend       flexcan_interrupt_transfer.o
    0x3000796a   0x3000796a   0x00000006   PAD
    0x30007970   0x30007970   0x00000020   Code   RO          827    .text.emergencyInit  emcy.o
    0x30007990   0x30007990   0x00000002   Code   RO          829    .text.emergencyStop  emcy.o
    0x30007992   0x30007992   0x00000006   PAD
    0x30007998   0x30007998   0x000000c8   Code   RO          990    .text.failedSDO     sdo.o
    0x30007a60   0x30007a60   0x00000064   Code   RO           21    .text.flexcan_callback  flexcan_interrupt_transfer.o
    0x30007ac4   0x30007ac4   0x00000004   PAD
    0x30007ac8   0x30007ac8   0x0000000a   Code   RO           11    .text.getElapsedTime  flexcan_interrupt_transfer.o
    0x30007ad2   0x30007ad2   0x00000006   PAD
    0x30007ad8   0x30007ad8   0x00000006   Code   RO         1050    .text.getNodeId     states.o
    0x30007ade   0x30007ade   0x00000002   PAD
    0x30007ae0   0x30007ae0   0x0000009c   Code   RO          867    .text.heartbeatInit  lifegrd.o
    0x30007b7c   0x30007b7c   0x00000004   PAD
    0x30007b80   0x30007b80   0x0000009a   Code   RO          994    .text.initSDOline   sdo.o
    0x30007c1a   0x30007c1a   0x00000006   PAD
    0x30007c20   0x30007c20   0x00000012   Code   RO          871    .text.lifeGuardInit  lifegrd.o
    0x30007c32   0x30007c32   0x00000006   PAD
    0x30007c38   0x30007c38   0x0000004c   Code   RO          873    .text.lifeGuardStop  lifegrd.o
    0x30007c84   0x30007c84   0x00000004   PAD
    0x30007c88   0x30007c88   0x0000004e   Code   RO          986    .text.lineToSDO     sdo.o
    0x30007cd6   0x30007cd6   0x00000002   PAD
    0x30007cd8   0x30007cd8   0x000002d4   Code   RO           17    .text.main          flexcan_interrupt_transfer.o
    0x30007fac   0x30007fac   0x00000004   PAD
    0x30007fb0   0x30007fb0   0x00000020   Code   RO          894    .text.masterSendNMTnodeguard  nmtmaster.o
    0x30007fd0   0x30007fd0   0x00000020   Code   RO          892    .text.masterSendNMTstateChange  nmtmaster.o
    0x30007ff0   0x30007ff0   0x00000084   Code   RO          863    .text.nodeguardInit  lifegrd.o
    0x30008074   0x30008074   0x00000004   PAD
    0x30008078   0x30008078   0x00000042   Code   RO          984    .text.objdictToSDOline  sdo.o
    0x300080ba   0x300080ba   0x00000006   PAD
    0x300080c0   0x300080c0   0x0000002a   Code   RO          837    .text.proceedEMCY   emcy.o
    0x300080ea   0x300080ea   0x00000006   PAD
    0x300080f0   0x300080f0   0x000000b4   Code   RO          906    .text.proceedNMTstateChange  nmtslave.o
    0x300081a4   0x300081a4   0x00000004   PAD
    0x300081a8   0x300081a8   0x00000106   Code   RO          853    .text.proceedNODE_GUARD  lifegrd.o
    0x300082ae   0x300082ae   0x00000002   PAD
    0x300082b0   0x300082b0   0x00000310   Code   RO          942    .text.proceedPDO    pdo.o
    0x300085c0   0x300085c0   0x000012ac   Code   RO         1010    .text.proceedSDO    sdo.o
    0x3000986c   0x3000986c   0x00000004   PAD
    0x30009870   0x30009870   0x0000002a   Code   RO         1086    .text.proceedSYNC   sync.o
    0x3000989a   0x3000989a   0x00000006   PAD
    0x300098a0   0x300098a0   0x000000c0   Code   RO         1435    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x30009960   0x30009960   0x00000070   Code   RO         1565    .text.prvCheckForValidListAndQueue  timers.o
    0x300099d0   0x300099d0   0x00000076   Code   RO         1459    .text.prvIdleTask   tasks.o
    0x30009a46   0x30009a46   0x00000002   PAD
    0x30009a48   0x30009a48   0x00000028   Code   RO         1630    .text.prvPortStartFirstTask  port.o
    0x30009a70   0x30009a70   0x0000007c   Code   RO         1601    .text.prvProcessExpiredTimer  timers.o
    0x30009aec   0x30009aec   0x00000004   PAD
    0x30009af0   0x30009af0   0x00000036   Code   RO         1620    .text.prvTaskExitError  port.o
    0x30009b26   0x30009b26   0x00000002   PAD
    0x30009b28   0x30009b28   0x0000023e   Code   RO         1567    .text.prvTimerTask  timers.o
    0x30009d66   0x30009d66   0x00000002   PAD
    0x30009d68   0x30009d68   0x0000007a   Code   RO         1330    .text.prvUnlockQueue  queue.o
    0x30009de2   0x30009de2   0x00000006   PAD
    0x30009de8   0x30009de8   0x0000018a   Code   RO         1655    .text.pvPortMalloc  heap_4.o
    0x30009f72   0x30009f72   0x00000006   PAD
    0x30009f78   0x30009f78   0x0000002c   Code   RO         1618    .text.pxPortInitialiseStack  port.o
    0x30009fa4   0x30009fa4   0x00000004   PAD
    0x30009fa8   0x30009fa8   0x00000056   Code   RO          980    .text.resetSDO      sdo.o
    0x30009ffe   0x30009ffe   0x00000002   PAD
    0x3000a000   0x3000a000   0x00000054   Code   RO          978    .text.resetSDOline  sdo.o
    0x3000a054   0x3000a054   0x00000004   PAD
    0x3000a058   0x3000a058   0x0000013a   Code   RO          950    .text.sendOnePDOevent  pdo.o
    0x3000a192   0x3000a192   0x00000006   PAD
    0x3000a198   0x3000a198   0x000000a0   Code   RO         1008    .text.sendSDO       sdo.o
    0x3000a238   0x3000a238   0x000000b0   Code   RO          976    .text.sendSDOabort  sdo.o
    0x3000a2e8   0x3000a2e8   0x00000148   Code   RO         1052    .text.setNodeId     states.o
    0x3000a430   0x3000a430   0x00000092   Code   RO         1048    .text.setState      states.o
    0x3000a4c2   0x3000a4c2   0x00000006   PAD
    0x3000a4c8   0x3000a4c8   0x0000000e   Code   RO            9    .text.setTimer      flexcan_interrupt_transfer.o
    0x3000a4d6   0x3000a4d6   0x00000002   PAD
    0x3000a4d8   0x3000a4d8   0x0000002c   Code   RO          908    .text.slaveSendBootUp  nmtslave.o
    0x3000a504   0x3000a504   0x00000004   PAD
    0x3000a508   0x3000a508   0x0000008a   Code   RO         1080    .text.startSYNC     sync.o
    0x3000a592   0x3000a592   0x00000006   PAD
    0x3000a598   0x3000a598   0x0000002c   Code   RO         1082    .text.stopSYNC      sync.o
    0x3000a5c4   0x3000a5c4   0x00000004   PAD
    0x3000a5c8   0x3000a5c8   0x00000116   Code   RO         1046    .text.switchCommunicationState  states.o
    0x3000a6de   0x3000a6de   0x00000002   PAD
    0x3000a6e0   0x3000a6e0   0x0000002a   Code   RO         1302    .text.uxListRemove  list.o
    0x3000a70a   0x3000a70a   0x00000006   PAD
    0x3000a710   0x3000a710   0x00000016   Code   RO         1294    .text.vListInitialise  list.o
    0x3000a726   0x3000a726   0x00000002   PAD
    0x3000a728   0x3000a728   0x00000006   Code   RO         1296    .text.vListInitialiseItem  list.o
    0x3000a72e   0x3000a72e   0x00000002   PAD
    0x3000a730   0x3000a730   0x0000003a   Code   RO         1300    .text.vListInsert   list.o
    0x3000a76a   0x3000a76a   0x00000006   PAD
    0x3000a770   0x3000a770   0x0000001c   Code   RO         1298    .text.vListInsertEnd  list.o
    0x3000a78c   0x3000a78c   0x00000004   PAD
    0x3000a790   0x3000a790   0x00000014   Code   RO         1628    .text.vPortEnableVFP  port.o
    0x3000a7a4   0x3000a7a4   0x00000004   PAD
    0x3000a7a8   0x3000a7a8   0x00000052   Code   RO         1634    .text.vPortEnterCritical  port.o
    0x3000a7fa   0x3000a7fa   0x00000006   PAD
    0x3000a800   0x3000a800   0x00000032   Code   RO         1636    .text.vPortExitCritical  port.o
    0x3000a832   0x3000a832   0x00000006   PAD
    0x3000a838   0x3000a838   0x000000ca   Code   RO         1657    .text.vPortFree     heap_4.o
    0x3000a902   0x3000a902   0x00000006   PAD
    0x3000a908   0x3000a908   0x00000034   Code   RO         1626    .text.vPortSetupTimerInterrupt  port.o
    0x3000a93c   0x3000a93c   0x00000004   PAD
    0x3000a940   0x3000a940   0x0000005e   Code   RO         1364    .text.vQueueAddToRegistry  queue.o
    0x3000a99e   0x3000a99e   0x00000002   PAD
    0x3000a9a0   0x3000a9a0   0x00000046   Code   RO         1368    .text.vQueueWaitForMessageRestricted  queue.o
    0x3000a9e6   0x3000a9e6   0x00000002   PAD
    0x3000a9e8   0x3000a9e8   0x00000126   Code   RO         1429    .text.vTaskDelete   tasks.o
    0x3000ab0e   0x3000ab0e   0x00000002   PAD
    0x3000ab10   0x3000ab10   0x0000001a   Code   RO         1489    .text.vTaskInternalSetTimeOutState  tasks.o
    0x3000ab2a   0x3000ab2a   0x00000006   PAD
    0x3000ab30   0x3000ab30   0x0000000e   Code   RO         1493    .text.vTaskMissedYield  tasks.o
    0x3000ab3e   0x3000ab3e   0x00000002   PAD
    0x3000ab40   0x3000ab40   0x0000003a   Code   RO         1477    .text.vTaskPlaceOnEventList  tasks.o
    0x3000ab7a   0x3000ab7a   0x00000006   PAD
    0x3000ab80   0x3000ab80   0x00000072   Code   RO         1481    .text.vTaskPlaceOnEventListRestricted  tasks.o
    0x3000abf2   0x3000abf2   0x00000006   PAD
    0x3000abf8   0x3000abf8   0x000000a4   Code   RO         1457    .text.vTaskStartScheduler  tasks.o
    0x3000ac9c   0x3000ac9c   0x00000004   PAD
    0x3000aca0   0x3000aca0   0x00000010   Code   RO         1433    .text.vTaskSuspendAll  tasks.o
    0x3000acb0   0x3000acb0   0x0000008a   Code   RO         1451    .text.vTaskSwitchContext  tasks.o
    0x3000ad3a   0x3000ad3a   0x00000006   PAD
    0x3000ad40   0x3000ad40   0x000000f2   Code   RO         1624    .text.xPortStartScheduler  port.o
    0x3000ae32   0x3000ae32   0x00000006   PAD
    0x3000ae38   0x3000ae38   0x00000096   Code   RO         1314    .text.xQueueGenericCreate  queue.o
    0x3000aece   0x3000aece   0x00000002   PAD
    0x3000aed0   0x3000aed0   0x000001b4   Code   RO         1336    .text.xQueueReceive  queue.o
    0x3000b084   0x3000b084   0x00000004   PAD
    0x3000b088   0x3000b088   0x00000090   Code   RO         1491    .text.xTaskCheckForTimeOut  tasks.o
    0x3000b118   0x3000b118   0x000001fe   Code   RO         1427    .text.xTaskCreate   tasks.o
    0x3000b316   0x3000b316   0x00000002   PAD
    0x3000b318   0x3000b318   0x00000024   Code   RO         1507    .text.xTaskGetSchedulerState  tasks.o
    0x3000b33c   0x3000b33c   0x00000004   PAD
    0x3000b340   0x3000b340   0x0000000c   Code   RO         1465    .text.xTaskGetTickCount  tasks.o
    0x3000b34c   0x3000b34c   0x00000004   PAD
    0x3000b350   0x3000b350   0x000001a4   Code   RO         1463    .text.xTaskIncrementTick  tasks.o
    0x3000b4f4   0x3000b4f4   0x00000004   PAD
    0x3000b4f8   0x3000b4f8   0x000000fa   Code   RO         1483    .text.xTaskRemoveFromEventList  tasks.o
    0x3000b5f2   0x3000b5f2   0x00000006   PAD
    0x3000b5f8   0x3000b5f8   0x00000184   Code   RO         1437    .text.xTaskResumeAll  tasks.o
    0x3000b77c   0x3000b77c   0x00000004   PAD
    0x3000b780   0x3000b780   0x00000064   Code   RO         1563    .text.xTimerCreateTimerTask  timers.o
    0x3000b7e4   0x3000b7e4   0x0000000e   Code   RO         1797    i.__scatterload_copy  mc_w.l(handlers.o)
    0x3000b7f2   0x3000b7f2   0x00000002   Code   RO         1798    i.__scatterload_null  mc_w.l(handlers.o)
    0x3000b7f4   0x3000b7f4   0x0000000e   Code   RO         1799    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x3000b802   0x3000b802   0x00000007   Data   RO         1062    .rodata..L__const.setState.newCommunicationState  states.o
    0x3000b809   0x3000b809   0x00000007   Data   RO         1063    .rodata..L__const.setState.newCommunicationState.1  states.o
    0x3000b810   0x3000b810   0x00000007   Data   RO         1064    .rodata..L__const.setState.newCommunicationState.2  states.o
    0x3000b817   0x3000b817   0x00000007   Data   RO         1065    .rodata..L__const.setState.newCommunicationState.3  states.o
    0x3000b81e   0x3000b81e   0x00000002   Data   RO         1248    .rodata.Slave_ObjdictSize  slave.o
    0x3000b820   0x3000b820   0x0000000c   Data   RO         1246    .rodata.Slave_firstIndex  slave.o
    0x3000b82c   0x3000b82c   0x00000001   Data   RO         1126    .rodata.Slave_iam_a_slave  slave.o
    0x3000b82d   0x3000b82d   0x00000001   PAD
    0x3000b82e   0x3000b82e   0x0000000c   Data   RO         1247    .rodata.Slave_lastIndex  slave.o
    0x3000b83a   0x3000b83a   0x00000002   PAD
    0x3000b83c   0x3000b83c   0x000000c0   Data   RO         1244    .rodata.Slave_objdict  slave.o
    0x3000b8fc   0x3000b8fc   0x00000008   Data   RO           94    .rodata.armPllConfig_BOARD_BootClockRUN  clock_config.o
    0x3000b904   0x3000b904   0x00000010   Data   RO          264    .rodata.cst16       fsl_flexcan.o
    0x3000b914   0x3000b914   0x00000004   Data   RO          266    .rodata.cst4        fsl_flexcan.o
    0x3000b918   0x3000b918   0x00000008   Data   RO          269    .rodata.cst8        fsl_flexcan.o
    0x3000b920   0x3000b920   0x00000034   Data   RO          739    .rodata.s_LpuartAdapterBase  fsl_adapter_lpuart.o
    0x3000b954   0x3000b954   0x00000278   Data   RO           46    .rodata.s_clockSourceName  flexcan_interrupt_transfer.o
    0x3000bbcc   0x3000bbcc   0x00000278   Data   RO           79    .rodata.s_clockSourceName  board.o
    0x3000be44   0x3000be44   0x00000278   Data   RO          101    .rodata.s_clockSourceName  clock_config.o
    0x3000c0bc   0x3000c0bc   0x00000278   Data   RO          401    .rodata.s_clockSourceName  fsl_clock.o
    0x3000c334   0x3000c334   0x0000001c   Data   RO          703    .rodata.s_gptBases  fsl_gpt.o
    0x3000c350   0x3000c350   0x00000007   Data   RO          702    .rodata.s_gptClocks  fsl_gpt.o
    0x3000c357   0x3000c357   0x00000001   PAD
    0x3000c358   0x3000c358   0x00000034   Data   RO          515    .rodata.s_lpuartBases  fsl_lpuart.o
    0x3000c38c   0x3000c38c   0x0000000d   Data   RO          517    .rodata.s_lpuartClock  fsl_lpuart.o
    0x3000c399   0x3000c399   0x0000015c   Data   RO           35    .rodata.str1.1      flexcan_interrupt_transfer.o
    0x3000c4f5   0x3000c4f5   0x0000000b   Data   RO           78    .rodata.str1.1      board.o
    0x3000c500   0x3000c500   0x000002bb   Data   RO          265    .rodata.str1.1      fsl_flexcan.o
    0x3000c7bb   0x3000c7bb   0x00000162   Data   RO          400    .rodata.str1.1      fsl_clock.o
    0x3000c91d   0x3000c91d   0x00000041   Data   RO          428    .rodata.str1.1      fsl_common_arm.o
    0x3000c95e   0x3000c95e   0x00000149   Data   RO          516    .rodata.str1.1      fsl_lpuart.o
    0x3000caa7   0x3000caa7   0x0000005c   Data   RO          701    .rodata.str1.1      fsl_gpt.o
    0x3000cb03   0x3000cb03   0x0000008f   Data   RO          738    .rodata.str1.1      fsl_adapter_lpuart.o
    0x3000cb92   0x3000cb92   0x00000002   PAD
    0x3000cb94   0x3000cb94   0x0000000c   Data   RO           95    .rodata.sysPll2Config_BOARD_BootClockRUN  clock_config.o
    0x3000cba0   0x3000cba0   0x00000004   Data   RO         1534    .rodata.uxTopUsedPriority  tasks.o
    0x3000cba4   0x3000cba4   0x00000014   Data   RO           96    .rodata.videoPllConfig_BOARD_BootClockRUN  clock_config.o
    0x3000cbb8   0x3000cbb8   0x00000020   Data   RO         1796    Region$$Table       anon$$obj.o



  Load Region LR_CORE1_IMAGE (Base: 0x30fc0000, Size: 0x00000000, Max: 0xffffffff, ABSOLUTE)

    Execution Region CORE1_REGION (Exec base: 0x30fc0000, Load base: 0x30fc0000, Size: 0x00000000, Max: 0x00040000, ABSOLUTE)

    **** No section assigned to this execution region ****


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       910         60        643          0          0      11999   board.o
      1570          0        672          0          0      52811   clock_config.o
       114          0          0          0          0       9021   emcy.o
         0          0        512          0          0       2642   evkmimxrt1170_flexspi_nor_config.o
      1528        264        980          0        983      26040   flexcan_interrupt_transfer.o
       538         64        195          0          0       7284   fsl_adapter_lpuart.o
       910          8          0          0          0      10224   fsl_anatop_ai.o
        60         44          0          0          0        914   fsl_assert.o
      2394        148        986          0          0      52149   fsl_clock.o
        88         20         65          0          0       2411   fsl_common_arm.o
        58          0          0          0          0      21703   fsl_dcdc.o
      1178        142          0          0         20      11856   fsl_debug_console.o
      5708        196        727          4         16      67652   fsl_flexcan.o
         0          0         48          0          0       1024   fsl_flexspi_nor_boot.o
       472        136        127          0          0      10040   fsl_gpt.o
      1494         28        394         52         52      42196   fsl_lpuart.o
       518          0          0          0          0      20654   fsl_pmu.o
       596          0          0          0      10268       5513   heap_4.o
       960          0          0          0          0      10350   lifegrd.o
       156          0          0          0          0       2221   list.o
        64          0          0          0          0       6642   nmtmaster.o
       224          0          0          0          0       6206   nmtslave.o
       450          0          0          0          0       7806   objacces.o
      2230          0          0          0          0      16274   pdo.o
       102          0          0          0          0       9055   pin_mux.o
       770         16          0          4          5       3999   port.o
       872          0          0          0         64      22497   queue.o
      6048         14          0          0          0      38080   sdo.o
       318         42        219       3024        320      12085   slave.o
       724        356       1024          0          0       3582   startup_mimxrt1176_cm7.o
       886         48         28          0          0       8713   states.o
       304          0          0          0          0       7326   sync.o
       290          0          0          4          0       4672   system_mimxrt1176_cm7.o
      2894          8          4          0        260      38829   tasks.o
       432          0          0          6        192       7355   timer.o
       910         26          0          0         60      13302   timers.o

    ----------------------------------------------------------------------
     37440       1664       6662       3104     538604     575127   Object Totals
         0          0         32          0     526336          0   (incl. Generated)
       670         44          6         10         28          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

        86          0          0          0          0          0   __dczerorl2.o
         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry4.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        48         10          0          0          0         68   init.o
        30          0          0          0          0         68   llshl.o
        32          0          0          0          0         68   llushr.o
        26          0          0          0          0         80   memcmp.o
        40          0          0          0          0         76   memcpy.o
        18          0          0          0          0         76   memset.o
        14          0          0          0          0         68   strlen.o
        98          0          0          0          0         92   uldiv.o

    ----------------------------------------------------------------------
       450         18          0          0          0        596   Library Totals
         8          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       442         18          0          0          0        596   mc_w.l

    ----------------------------------------------------------------------
       450         18          0          0          0        596   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     37890       1682       6662       3104     538604     575159   Grand Totals
     37890       1682       6662        708     538604     575159   ELF Image Totals (compressed)
     37890       1682       6662        708          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                44552 (  43.51kB)
    Total RW  Size (RW Data + ZI Data)            541708 ( 529.01kB)
    Total ROM Size (Code + RO Data + RW Data)      45260 (  44.20kB)

==============================================================================

