Component: Arm Compiler for Embedded 6.22 Tool: armlink [5ee90200]

==============================================================================

Section Cross References

    flexcan_interrupt_transfer.o(.ARM.exidx.text.canChangeBaudRate_driver) refers to flexcan_interrupt_transfer.o(.text.canChangeBaudRate_driver) for [Anonymous Symbol]
    flexcan_interrupt_transfer.o(.ARM.exidx.text.setTimer) refers to flexcan_interrupt_transfer.o(.text.setTimer) for [Anonymous Symbol]
    flexcan_interrupt_transfer.o(.ARM.exidx.text.getElapsedTime) refers to flexcan_interrupt_transfer.o(.text.getElapsedTime) for [Anonymous Symbol]
    flexcan_interrupt_transfer.o(.text.canSend) refers to flexcan_interrupt_transfer.o(.bss.txXfer) for txXfer
    flexcan_interrupt_transfer.o(.text.canSend) refers to flexcan_interrupt_transfer.o(.bss.flexcanHandle) for flexcanHandle
    flexcan_interrupt_transfer.o(.text.canSend) refers to fsl_flexcan.o(.text.FLEXCAN_TransferSendNonBlocking) for FLEXCAN_TransferSendNonBlocking
    flexcan_interrupt_transfer.o(.text.canSend) refers to flexcan_interrupt_transfer.o(.bss.txComplete) for txComplete
    flexcan_interrupt_transfer.o(.text.canSend) refers to flexcan_interrupt_transfer.o(.rodata.str1.1) for .L.str
    flexcan_interrupt_transfer.o(.text.canSend) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    flexcan_interrupt_transfer.o(.ARM.exidx.text.canSend) refers to flexcan_interrupt_transfer.o(.text.canSend) for [Anonymous Symbol]
    flexcan_interrupt_transfer.o(.text.GPT2_IRQHandler) refers to flexcan_interrupt_transfer.o(.text.GPT_ClearStatusFlags) for GPT_ClearStatusFlags
    flexcan_interrupt_transfer.o(.text.GPT2_IRQHandler) refers to timer.o(.text.TimeDispatch) for TimeDispatch
    flexcan_interrupt_transfer.o(.ARM.exidx.text.GPT2_IRQHandler) refers to flexcan_interrupt_transfer.o(.text.GPT2_IRQHandler) for [Anonymous Symbol]
    flexcan_interrupt_transfer.o(.ARM.exidx.text.GPT_ClearStatusFlags) refers to flexcan_interrupt_transfer.o(.text.GPT_ClearStatusFlags) for [Anonymous Symbol]
    flexcan_interrupt_transfer.o(.text.main) refers to flexcan_interrupt_transfer.o(.text.BSP_Init) for BSP_Init
    flexcan_interrupt_transfer.o(.text.main) refers to flexcan_interrupt_transfer.o(.bss.AppTaskCreate_Handle) for AppTaskCreate_Handle
    flexcan_interrupt_transfer.o(.text.main) refers to flexcan_interrupt_transfer.o(.text.AppTaskCreate) for AppTaskCreate
    flexcan_interrupt_transfer.o(.text.main) refers to flexcan_interrupt_transfer.o(.rodata.str1.1) for .L.str.1
    flexcan_interrupt_transfer.o(.text.main) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    flexcan_interrupt_transfer.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    flexcan_interrupt_transfer.o(.ARM.exidx.text.main) refers to flexcan_interrupt_transfer.o(.text.main) for [Anonymous Symbol]
    flexcan_interrupt_transfer.o(.text.BSP_Init) refers to board.o(.text.BOARD_ConfigMPU) for BOARD_ConfigMPU
    flexcan_interrupt_transfer.o(.text.BSP_Init) refers to pin_mux.o(.text.BOARD_InitPins) for BOARD_InitPins
    flexcan_interrupt_transfer.o(.text.BSP_Init) refers to clock_config.o(.text.BOARD_BootClockRUN) for BOARD_BootClockRUN
    flexcan_interrupt_transfer.o(.text.BSP_Init) refers to board.o(.text.BOARD_InitDebugConsole) for BOARD_InitDebugConsole
    flexcan_interrupt_transfer.o(.text.BSP_Init) refers to flexcan_interrupt_transfer.o(.bss.gptConfig) for gptConfig
    flexcan_interrupt_transfer.o(.text.BSP_Init) refers to fsl_gpt.o(.text.GPT_GetDefaultConfig) for GPT_GetDefaultConfig
    flexcan_interrupt_transfer.o(.text.BSP_Init) refers to fsl_gpt.o(.text.GPT_Init) for GPT_Init
    flexcan_interrupt_transfer.o(.text.BSP_Init) refers to flexcan_interrupt_transfer.o(.text.GPT_SetClockDivider) for GPT_SetClockDivider
    flexcan_interrupt_transfer.o(.text.BSP_Init) refers to fsl_clock.o(.text.CLOCK_GetFreq) for CLOCK_GetFreq
    flexcan_interrupt_transfer.o(.text.BSP_Init) refers to flexcan_interrupt_transfer.o(.bss.gptFreq) for gptFreq
    flexcan_interrupt_transfer.o(.text.BSP_Init) refers to flexcan_interrupt_transfer.o(.text.GPT_SetOutputCompareValue) for GPT_SetOutputCompareValue
    flexcan_interrupt_transfer.o(.text.BSP_Init) refers to flexcan_interrupt_transfer.o(.text.GPT_EnableInterrupts) for GPT_EnableInterrupts
    flexcan_interrupt_transfer.o(.text.BSP_Init) refers to flexcan_interrupt_transfer.o(.text.EnableIRQ) for EnableIRQ
    flexcan_interrupt_transfer.o(.text.BSP_Init) refers to flexcan_interrupt_transfer.o(.rodata.str1.1) for .L.str.2
    flexcan_interrupt_transfer.o(.text.BSP_Init) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    flexcan_interrupt_transfer.o(.text.BSP_Init) refers to flexcan_interrupt_transfer.o(.text.GPT_StartTimer) for GPT_StartTimer
    flexcan_interrupt_transfer.o(.text.BSP_Init) refers to flexcan_interrupt_transfer.o(.text.CLOCK_SetRootClock) for CLOCK_SetRootClock
    flexcan_interrupt_transfer.o(.text.BSP_Init) refers to flexcan_interrupt_transfer.o(.bss.txIdentifier) for txIdentifier
    flexcan_interrupt_transfer.o(.text.BSP_Init) refers to flexcan_interrupt_transfer.o(.bss.rxIdentifier) for rxIdentifier
    flexcan_interrupt_transfer.o(.text.BSP_Init) refers to flexcan_interrupt_transfer.o(.bss.flexcanConfig) for flexcanConfig
    flexcan_interrupt_transfer.o(.text.BSP_Init) refers to fsl_flexcan.o(.text.FLEXCAN_GetDefaultConfig) for FLEXCAN_GetDefaultConfig
    flexcan_interrupt_transfer.o(.text.BSP_Init) refers to memset.o(.text) for memset
    flexcan_interrupt_transfer.o(.text.BSP_Init) refers to flexcan_interrupt_transfer.o(.text.CLOCK_GetRootClockFreq) for CLOCK_GetRootClockFreq
    flexcan_interrupt_transfer.o(.text.BSP_Init) refers to fsl_flexcan.o(.text.FLEXCAN_CalculateImprovedTimingValues) for FLEXCAN_CalculateImprovedTimingValues
    flexcan_interrupt_transfer.o(.text.BSP_Init) refers to memcpy.o(.text) for memcpy
    flexcan_interrupt_transfer.o(.text.BSP_Init) refers to fsl_flexcan.o(.text.FLEXCAN_Init) for FLEXCAN_Init
    flexcan_interrupt_transfer.o(.text.BSP_Init) refers to flexcan_interrupt_transfer.o(.bss.flexcanHandle) for flexcanHandle
    flexcan_interrupt_transfer.o(.text.BSP_Init) refers to flexcan_interrupt_transfer.o(.text.flexcan_callback) for flexcan_callback
    flexcan_interrupt_transfer.o(.text.BSP_Init) refers to fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle) for FLEXCAN_TransferCreateHandle
    flexcan_interrupt_transfer.o(.text.BSP_Init) refers to flexcan_interrupt_transfer.o(.bss.mbConfig) for mbConfig
    flexcan_interrupt_transfer.o(.text.BSP_Init) refers to fsl_flexcan.o(.text.FLEXCAN_SetRxMbConfig) for FLEXCAN_SetRxMbConfig
    flexcan_interrupt_transfer.o(.text.BSP_Init) refers to fsl_flexcan.o(.text.FLEXCAN_SetTxMbConfig) for FLEXCAN_SetTxMbConfig
    flexcan_interrupt_transfer.o(.text.BSP_Init) refers to flexcan_interrupt_transfer.o(.bss.frame) for frame
    flexcan_interrupt_transfer.o(.text.BSP_Init) refers to master.o(.data.Master_Data) for Master_Data
    flexcan_interrupt_transfer.o(.text.BSP_Init) refers to states.o(.text.setState) for setState
    flexcan_interrupt_transfer.o(.ARM.exidx.text.BSP_Init) refers to flexcan_interrupt_transfer.o(.text.BSP_Init) for [Anonymous Symbol]
    flexcan_interrupt_transfer.o(.text.AppTaskCreate) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    flexcan_interrupt_transfer.o(.text.AppTaskCreate) refers to flexcan_interrupt_transfer.o(.bss.App_Task_Handle) for App_Task_Handle
    flexcan_interrupt_transfer.o(.text.AppTaskCreate) refers to flexcan_interrupt_transfer.o(.text.App_Task) for App_Task
    flexcan_interrupt_transfer.o(.text.AppTaskCreate) refers to flexcan_interrupt_transfer.o(.rodata.str1.1) for .L.str.17
    flexcan_interrupt_transfer.o(.text.AppTaskCreate) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    flexcan_interrupt_transfer.o(.text.AppTaskCreate) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    flexcan_interrupt_transfer.o(.text.AppTaskCreate) refers to flexcan_interrupt_transfer.o(.bss.AppTaskCreate_Handle) for AppTaskCreate_Handle
    flexcan_interrupt_transfer.o(.text.AppTaskCreate) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    flexcan_interrupt_transfer.o(.text.AppTaskCreate) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    flexcan_interrupt_transfer.o(.ARM.exidx.text.AppTaskCreate) refers to flexcan_interrupt_transfer.o(.text.AppTaskCreate) for [Anonymous Symbol]
    flexcan_interrupt_transfer.o(.text.GPT_SetClockDivider) refers to flexcan_interrupt_transfer.o(.rodata.str1.1) for .L.str.11
    flexcan_interrupt_transfer.o(.text.GPT_SetClockDivider) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    flexcan_interrupt_transfer.o(.ARM.exidx.text.GPT_SetClockDivider) refers to flexcan_interrupt_transfer.o(.text.GPT_SetClockDivider) for [Anonymous Symbol]
    flexcan_interrupt_transfer.o(.text.GPT_SetOutputCompareValue) refers to flexcan_interrupt_transfer.o(.rodata.str1.1) for .L.str.13
    flexcan_interrupt_transfer.o(.text.GPT_SetOutputCompareValue) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    flexcan_interrupt_transfer.o(.ARM.exidx.text.GPT_SetOutputCompareValue) refers to flexcan_interrupt_transfer.o(.text.GPT_SetOutputCompareValue) for [Anonymous Symbol]
    flexcan_interrupt_transfer.o(.ARM.exidx.text.GPT_EnableInterrupts) refers to flexcan_interrupt_transfer.o(.text.GPT_EnableInterrupts) for [Anonymous Symbol]
    flexcan_interrupt_transfer.o(.text.EnableIRQ) refers to flexcan_interrupt_transfer.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    flexcan_interrupt_transfer.o(.ARM.exidx.text.EnableIRQ) refers to flexcan_interrupt_transfer.o(.text.EnableIRQ) for [Anonymous Symbol]
    flexcan_interrupt_transfer.o(.ARM.exidx.text.GPT_StartTimer) refers to flexcan_interrupt_transfer.o(.text.GPT_StartTimer) for [Anonymous Symbol]
    flexcan_interrupt_transfer.o(.text.CLOCK_SetRootClock) refers to flexcan_interrupt_transfer.o(.rodata.str1.1) for .L.str.14
    flexcan_interrupt_transfer.o(.text.CLOCK_SetRootClock) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    flexcan_interrupt_transfer.o(.ARM.exidx.text.CLOCK_SetRootClock) refers to flexcan_interrupt_transfer.o(.text.CLOCK_SetRootClock) for [Anonymous Symbol]
    flexcan_interrupt_transfer.o(.text.CLOCK_GetRootClockFreq) refers to flexcan_interrupt_transfer.o(.text.CLOCK_GetRootClockMux) for CLOCK_GetRootClockMux
    flexcan_interrupt_transfer.o(.text.CLOCK_GetRootClockFreq) refers to flexcan_interrupt_transfer.o(.rodata.s_clockSourceName) for s_clockSourceName
    flexcan_interrupt_transfer.o(.text.CLOCK_GetRootClockFreq) refers to fsl_clock.o(.text.CLOCK_GetFreq) for CLOCK_GetFreq
    flexcan_interrupt_transfer.o(.text.CLOCK_GetRootClockFreq) refers to flexcan_interrupt_transfer.o(.text.CLOCK_GetRootClockDiv) for CLOCK_GetRootClockDiv
    flexcan_interrupt_transfer.o(.text.CLOCK_GetRootClockFreq) refers to flexcan_interrupt_transfer.o(.rodata.str1.1) for .L.str.16
    flexcan_interrupt_transfer.o(.text.CLOCK_GetRootClockFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    flexcan_interrupt_transfer.o(.ARM.exidx.text.CLOCK_GetRootClockFreq) refers to flexcan_interrupt_transfer.o(.text.CLOCK_GetRootClockFreq) for [Anonymous Symbol]
    flexcan_interrupt_transfer.o(.text.flexcan_callback) refers to flexcan_interrupt_transfer.o(.bss.rxComplete) for rxComplete
    flexcan_interrupt_transfer.o(.text.flexcan_callback) refers to flexcan_interrupt_transfer.o(.bss.txComplete) for txComplete
    flexcan_interrupt_transfer.o(.text.flexcan_callback) refers to flexcan_interrupt_transfer.o(.bss.wakenUp) for wakenUp
    flexcan_interrupt_transfer.o(.ARM.exidx.text.flexcan_callback) refers to flexcan_interrupt_transfer.o(.text.flexcan_callback) for [Anonymous Symbol]
    flexcan_interrupt_transfer.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to flexcan_interrupt_transfer.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    flexcan_interrupt_transfer.o(.ARM.exidx.text.CLOCK_GetRootClockMux) refers to flexcan_interrupt_transfer.o(.text.CLOCK_GetRootClockMux) for [Anonymous Symbol]
    flexcan_interrupt_transfer.o(.ARM.exidx.text.CLOCK_GetRootClockDiv) refers to flexcan_interrupt_transfer.o(.text.CLOCK_GetRootClockDiv) for [Anonymous Symbol]
    flexcan_interrupt_transfer.o(.text.App_Task) refers to flexcan_interrupt_transfer.o(.bss.t) for t
    flexcan_interrupt_transfer.o(.text.App_Task) refers to flexcan_interrupt_transfer.o(.bss.txIdentifier) for txIdentifier
    flexcan_interrupt_transfer.o(.text.App_Task) refers to flexcan_interrupt_transfer.o(.bss.frame) for frame
    flexcan_interrupt_transfer.o(.text.App_Task) refers to flexcan_interrupt_transfer.o(.bss.txXfer) for txXfer
    flexcan_interrupt_transfer.o(.text.App_Task) refers to flexcan_interrupt_transfer.o(.bss.flexcanHandle) for flexcanHandle
    flexcan_interrupt_transfer.o(.text.App_Task) refers to fsl_flexcan.o(.text.FLEXCAN_TransferSendNonBlocking) for FLEXCAN_TransferSendNonBlocking
    flexcan_interrupt_transfer.o(.text.App_Task) refers to flexcan_interrupt_transfer.o(.bss.txComplete) for txComplete
    flexcan_interrupt_transfer.o(.text.App_Task) refers to flexcan_interrupt_transfer.o(.rodata.str1.1) for .L.str.19
    flexcan_interrupt_transfer.o(.text.App_Task) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    flexcan_interrupt_transfer.o(.text.App_Task) refers to flexcan_interrupt_transfer.o(.bss.rxXfer) for rxXfer
    flexcan_interrupt_transfer.o(.text.App_Task) refers to master.o(.data.Master_Data) for Master_Data
    flexcan_interrupt_transfer.o(.text.App_Task) refers to sdo.o(.text.readNetworkDict) for readNetworkDict
    flexcan_interrupt_transfer.o(.text.App_Task) refers to flexcan_interrupt_transfer.o(.bss.abortCode) for abortCode
    flexcan_interrupt_transfer.o(.text.App_Task) refers to flexcan_interrupt_transfer.o(.bss.readData01) for readData01
    flexcan_interrupt_transfer.o(.text.App_Task) refers to flexcan_interrupt_transfer.o(.data.readSize) for readSize
    flexcan_interrupt_transfer.o(.text.App_Task) refers to sdo.o(.text.getReadResultNetworkDict) for getReadResultNetworkDict
    flexcan_interrupt_transfer.o(.text.App_Task) refers to fsl_flexcan.o(.text.FLEXCAN_TransferReceiveNonBlocking) for FLEXCAN_TransferReceiveNonBlocking
    flexcan_interrupt_transfer.o(.text.App_Task) refers to flexcan_interrupt_transfer.o(.bss.rxMessage) for rxMessage
    flexcan_interrupt_transfer.o(.text.App_Task) refers to states.o(.text.canDispatch) for canDispatch
    flexcan_interrupt_transfer.o(.text.App_Task) refers to flexcan_interrupt_transfer.o(.bss.rxComplete) for rxComplete
    flexcan_interrupt_transfer.o(.text.App_Task) refers to flexcan_interrupt_transfer.o(.bss.sendData) for sendData
    flexcan_interrupt_transfer.o(.text.App_Task) refers to sdo.o(.text.writeNetworkDict) for writeNetworkDict
    flexcan_interrupt_transfer.o(.text.App_Task) refers to flexcan_interrupt_transfer.o(.bss.tsdovalue) for tsdovalue
    flexcan_interrupt_transfer.o(.text.App_Task) refers to sdo.o(.text.getWriteResultNetworkDict) for getWriteResultNetworkDict
    flexcan_interrupt_transfer.o(.text.App_Task) refers to flexcan_interrupt_transfer.o(.bss.readData02) for readData02
    flexcan_interrupt_transfer.o(.ARM.exidx.text.App_Task) refers to flexcan_interrupt_transfer.o(.text.App_Task) for [Anonymous Symbol]
    master.o(.ARM.exidx.text.Master_valueRangeTest) refers to master.o(.text.Master_valueRangeTest) for [Anonymous Symbol]
    master.o(.text.Master_scanIndexOD) refers to master.o(.rodata.Master_objdict) for Master_objdict
    master.o(.ARM.exidx.text.Master_scanIndexOD) refers to master.o(.text.Master_scanIndexOD) for [Anonymous Symbol]
    master.o(.data.Master_Index1000) refers to master.o(.bss.Master_obj1000) for Master_obj1000
    master.o(.data.Master_Index1001) refers to master.o(.bss.Master_obj1001) for Master_obj1001
    master.o(.data.Master_Index1003) refers to master.o(.bss.Master_highestSubIndex_obj1003) for Master_highestSubIndex_obj1003
    master.o(.data.Master_Index1003) refers to master.o(.bss.Master_obj1003) for Master_obj1003
    master.o(.data.Master_Index1018) refers to master.o(.data.Master_highestSubIndex_obj1018) for Master_highestSubIndex_obj1018
    master.o(.data.Master_Index1018) refers to master.o(.bss.Master_obj1018_Vendor_ID) for Master_obj1018_Vendor_ID
    master.o(.data.Master_Index1018) refers to master.o(.bss.Master_obj1018_Product_Code) for Master_obj1018_Product_Code
    master.o(.data.Master_Index1018) refers to master.o(.bss.Master_obj1018_Revision_Number) for Master_obj1018_Revision_Number
    master.o(.data.Master_Index1018) refers to master.o(.bss.Master_obj1018_Serial_Number) for Master_obj1018_Serial_Number
    master.o(.data.Master_Index1280) refers to master.o(.data.Master_highestSubIndex_obj1280) for Master_highestSubIndex_obj1280
    master.o(.data.Master_Index1280) refers to master.o(.data.Master_obj1280_COB_ID_Client_to_Server_Transmit_SDO) for Master_obj1280_COB_ID_Client_to_Server_Transmit_SDO
    master.o(.data.Master_Index1280) refers to master.o(.data.Master_obj1280_COB_ID_Server_to_Client_Receive_SDO) for Master_obj1280_COB_ID_Server_to_Client_Receive_SDO
    master.o(.data.Master_Index1280) refers to master.o(.data.Master_obj1280_Node_ID_of_the_SDO_Server) for Master_obj1280_Node_ID_of_the_SDO_Server
    master.o(.data.Master_Index1281) refers to master.o(.data.Master_highestSubIndex_obj1281) for Master_highestSubIndex_obj1281
    master.o(.data.Master_Index1281) refers to master.o(.data.Master_obj1281_COB_ID_Client_to_Server_Transmit_SDO) for Master_obj1281_COB_ID_Client_to_Server_Transmit_SDO
    master.o(.data.Master_Index1281) refers to master.o(.data.Master_obj1281_COB_ID_Server_to_Client_Receive_SDO) for Master_obj1281_COB_ID_Server_to_Client_Receive_SDO
    master.o(.data.Master_Index1281) refers to master.o(.data.Master_obj1281_Node_ID_of_the_SDO_Server) for Master_obj1281_Node_ID_of_the_SDO_Server
    master.o(.rodata.Master_objdict) refers to master.o(.data.Master_Index1000) for Master_Index1000
    master.o(.rodata.Master_objdict) refers to master.o(.data.Master_Index1001) for Master_Index1001
    master.o(.rodata.Master_objdict) refers to master.o(.data.Master_Index1018) for Master_Index1018
    master.o(.rodata.Master_objdict) refers to master.o(.data.Master_Index1280) for Master_Index1280
    master.o(.rodata.Master_objdict) refers to master.o(.data.Master_Index1281) for Master_Index1281
    master.o(.data.Master_Data) refers to master.o(.bss.Master_bDeviceNodeId) for Master_bDeviceNodeId
    master.o(.data.Master_Data) refers to master.o(.rodata.Master_objdict) for Master_objdict
    master.o(.data.Master_Data) refers to master.o(.data.Master_PDO_status) for Master_PDO_status
    master.o(.data.Master_Data) refers to pdo.o(.text._RxPDO_EventTimers_Handler) for _RxPDO_EventTimers_Handler
    master.o(.data.Master_Data) refers to master.o(.rodata.Master_firstIndex) for Master_firstIndex
    master.o(.data.Master_Data) refers to master.o(.rodata.Master_lastIndex) for Master_lastIndex
    master.o(.data.Master_Data) refers to master.o(.rodata.Master_ObjdictSize) for Master_ObjdictSize
    master.o(.data.Master_Data) refers to master.o(.rodata.Master_iam_a_slave) for Master_iam_a_slave
    master.o(.data.Master_Data) refers to master.o(.text.Master_valueRangeTest) for Master_valueRangeTest
    master.o(.data.Master_Data) refers to states.o(.text._initialisation) for _initialisation
    master.o(.data.Master_Data) refers to states.o(.text._preOperational) for _preOperational
    master.o(.data.Master_Data) refers to states.o(.text._operational) for _operational
    master.o(.data.Master_Data) refers to states.o(.text._stopped) for _stopped
    master.o(.data.Master_Data) refers to master.o(.bss.Master_highestSubIndex_obj1016) for Master_highestSubIndex_obj1016
    master.o(.data.Master_Data) refers to master.o(.bss.Master_obj1016) for Master_obj1016
    master.o(.data.Master_Data) refers to master.o(.bss.Master_heartBeatTimers) for Master_heartBeatTimers
    master.o(.data.Master_Data) refers to master.o(.bss.Master_obj1017) for Master_obj1017
    master.o(.data.Master_Data) refers to lifegrd.o(.text._heartbeatError) for _heartbeatError
    master.o(.data.Master_Data) refers to lifegrd.o(.text._nodeguardError) for _nodeguardError
    master.o(.data.Master_Data) refers to master.o(.bss.Master_obj100C) for Master_obj100C
    master.o(.data.Master_Data) refers to master.o(.bss.Master_obj100D) for Master_obj100D
    master.o(.data.Master_Data) refers to master.o(.bss.Master_obj1005) for Master_obj1005
    master.o(.data.Master_Data) refers to master.o(.bss.Master_obj1006) for Master_obj1006
    master.o(.data.Master_Data) refers to sync.o(.text._post_sync) for _post_sync
    master.o(.data.Master_Data) refers to sync.o(.text._post_TPDO) for _post_TPDO
    master.o(.data.Master_Data) refers to lifegrd.o(.text._post_SlaveBootup) for _post_SlaveBootup
    master.o(.data.Master_Data) refers to lifegrd.o(.text._post_SlaveStateChange) for _post_SlaveStateChange
    master.o(.data.Master_Data) refers to master.o(.text.Master_scanIndexOD) for Master_scanIndexOD
    master.o(.data.Master_Data) refers to objacces.o(.text._storeODSubIndex) for _storeODSubIndex
    master.o(.data.Master_Data) refers to master.o(.bss.Master_highestSubIndex_obj1003) for Master_highestSubIndex_obj1003
    master.o(.data.Master_Data) refers to master.o(.bss.Master_obj1003) for Master_obj1003
    master.o(.data.Master_Data) refers to master.o(.bss.Master_obj1001) for Master_obj1001
    master.o(.data.Master_Data) refers to master.o(.data.Master_obj1014) for Master_obj1014
    master.o(.data.Master_Data) refers to emcy.o(.text._post_emcy) for _post_emcy
    pin_mux.o(.text.BOARD_InitBootPins) refers to pin_mux.o(.text.BOARD_InitPins) for BOARD_InitPins
    pin_mux.o(.ARM.exidx.text.BOARD_InitBootPins) refers to pin_mux.o(.text.BOARD_InitBootPins) for [Anonymous Symbol]
    pin_mux.o(.text.BOARD_InitPins) refers to pin_mux.o(.text.CLOCK_EnableClock) for CLOCK_EnableClock
    pin_mux.o(.text.BOARD_InitPins) refers to pin_mux.o(.text.IOMUXC_SetPinMux) for IOMUXC_SetPinMux
    pin_mux.o(.text.BOARD_InitPins) refers to pin_mux.o(.text.IOMUXC_SetPinConfig) for IOMUXC_SetPinConfig
    pin_mux.o(.ARM.exidx.text.BOARD_InitPins) refers to pin_mux.o(.text.BOARD_InitPins) for [Anonymous Symbol]
    pin_mux.o(.text.CLOCK_EnableClock) refers to pin_mux.o(.text.CLOCK_ControlGate) for CLOCK_ControlGate
    pin_mux.o(.ARM.exidx.text.CLOCK_EnableClock) refers to pin_mux.o(.text.CLOCK_EnableClock) for [Anonymous Symbol]
    pin_mux.o(.ARM.exidx.text.IOMUXC_SetPinMux) refers to pin_mux.o(.text.IOMUXC_SetPinMux) for [Anonymous Symbol]
    pin_mux.o(.ARM.exidx.text.IOMUXC_SetPinConfig) refers to pin_mux.o(.text.IOMUXC_SetPinConfig) for [Anonymous Symbol]
    pin_mux.o(.ARM.exidx.text.CLOCK_ControlGate) refers to pin_mux.o(.text.CLOCK_ControlGate) for [Anonymous Symbol]
    board.o(.text.BOARD_DebugConsoleSrcFreq) refers to board.o(.text.CLOCK_GetRootClockFreq) for CLOCK_GetRootClockFreq
    board.o(.ARM.exidx.text.BOARD_DebugConsoleSrcFreq) refers to board.o(.text.BOARD_DebugConsoleSrcFreq) for [Anonymous Symbol]
    board.o(.text.CLOCK_GetRootClockFreq) refers to board.o(.text.CLOCK_GetRootClockMux) for CLOCK_GetRootClockMux
    board.o(.text.CLOCK_GetRootClockFreq) refers to board.o(.rodata.s_clockSourceName) for s_clockSourceName
    board.o(.text.CLOCK_GetRootClockFreq) refers to fsl_clock.o(.text.CLOCK_GetFreq) for CLOCK_GetFreq
    board.o(.text.CLOCK_GetRootClockFreq) refers to board.o(.text.CLOCK_GetRootClockDiv) for CLOCK_GetRootClockDiv
    board.o(.text.CLOCK_GetRootClockFreq) refers to board.o(.rodata.str1.1) for .L.str.4
    board.o(.text.CLOCK_GetRootClockFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    board.o(.ARM.exidx.text.CLOCK_GetRootClockFreq) refers to board.o(.text.CLOCK_GetRootClockFreq) for [Anonymous Symbol]
    board.o(.text.BOARD_InitDebugConsole) refers to board.o(.text.BOARD_DebugConsoleSrcFreq) for BOARD_DebugConsoleSrcFreq
    board.o(.text.BOARD_InitDebugConsole) refers to fsl_debug_console.o(.text.DbgConsole_Init) for DbgConsole_Init
    board.o(.ARM.exidx.text.BOARD_InitDebugConsole) refers to board.o(.text.BOARD_InitDebugConsole) for [Anonymous Symbol]
    board.o(.text.BOARD_ConfigMPU) refers to board.o(.text.ARM_MPU_Disable) for ARM_MPU_Disable
    board.o(.text.BOARD_ConfigMPU) refers to board.o(.rodata.str1.1) for .L.str
    board.o(.text.BOARD_ConfigMPU) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    board.o(.text.BOARD_ConfigMPU) refers to board.o(.text.ARM_MPU_Enable) for ARM_MPU_Enable
    board.o(.ARM.exidx.text.BOARD_ConfigMPU) refers to board.o(.text.BOARD_ConfigMPU) for [Anonymous Symbol]
    board.o(.ARM.exidx.text.ARM_MPU_Disable) refers to board.o(.text.ARM_MPU_Disable) for [Anonymous Symbol]
    board.o(.ARM.exidx.text.ARM_MPU_Enable) refers to board.o(.text.ARM_MPU_Enable) for [Anonymous Symbol]
    board.o(.ARM.exidx.text.BOARD_SD_Pin_Config) refers to board.o(.text.BOARD_SD_Pin_Config) for [Anonymous Symbol]
    board.o(.ARM.exidx.text.BOARD_MMC_Pin_Config) refers to board.o(.text.BOARD_MMC_Pin_Config) for [Anonymous Symbol]
    board.o(.ARM.exidx.text.CLOCK_GetRootClockMux) refers to board.o(.text.CLOCK_GetRootClockMux) for [Anonymous Symbol]
    board.o(.ARM.exidx.text.CLOCK_GetRootClockDiv) refers to board.o(.text.CLOCK_GetRootClockDiv) for [Anonymous Symbol]
    clock_config.o(.text.BOARD_InitBootClocks) refers to clock_config.o(.text.BOARD_BootClockRUN) for BOARD_BootClockRUN
    clock_config.o(.ARM.exidx.text.BOARD_InitBootClocks) refers to clock_config.o(.text.BOARD_InitBootClocks) for [Anonymous Symbol]
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_dcdc.o(.text.DCDC_BootIntoDCM) for DCDC_BootIntoDCM
    clock_config.o(.text.BOARD_BootClockRUN) refers to clock_config.o(.text.DCDC_SetVDD1P0BuckModeTargetVoltage) for DCDC_SetVDD1P0BuckModeTargetVoltage
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_pmu.o(.text.PMU_EnableBodyBias) for PMU_EnableBodyBias
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_pmu.o(.text.PMU_StaticEnableLpsrAnaLdoBypassMode) for PMU_StaticEnableLpsrAnaLdoBypassMode
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_pmu.o(.text.PMU_StaticEnableLpsrDigLdoBypassMode) for PMU_StaticEnableLpsrDigLdoBypassMode
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_OSC_Set1MHzOutputBehavior) for CLOCK_OSC_Set1MHzOutputBehavior
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_OSC_EnableOscRc400M) for CLOCK_OSC_EnableOscRc400M
    clock_config.o(.text.BOARD_BootClockRUN) refers to clock_config.o(.text.CLOCK_OSC_GateOscRc400M) for CLOCK_OSC_GateOscRc400M
    clock_config.o(.text.BOARD_BootClockRUN) refers to clock_config.o(.text.CLOCK_OSC_EnableOsc48M) for CLOCK_OSC_EnableOsc48M
    clock_config.o(.text.BOARD_BootClockRUN) refers to clock_config.o(.text.CLOCK_OSC_EnableOsc48MDiv2) for CLOCK_OSC_EnableOsc48MDiv2
    clock_config.o(.text.BOARD_BootClockRUN) refers to clock_config.o(.text.CLOCK_SetRootClock) for CLOCK_SetRootClock
    clock_config.o(.text.BOARD_BootClockRUN) refers to clock_config.o(.rodata.armPllConfig_BOARD_BootClockRUN) for armPllConfig_BOARD_BootClockRUN
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_InitArmPll) for CLOCK_InitArmPll
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_SetPllBypass) for CLOCK_SetPllBypass
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_DeinitSysPll1) for CLOCK_DeinitSysPll1
    clock_config.o(.text.BOARD_BootClockRUN) refers to clock_config.o(.rodata.sysPll2Config_BOARD_BootClockRUN) for sysPll2Config_BOARD_BootClockRUN
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_InitSysPll2) for CLOCK_InitSysPll2
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_InitPfd) for CLOCK_InitPfd
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_InitSysPll3) for CLOCK_InitSysPll3
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_DeinitAudioPll) for CLOCK_DeinitAudioPll
    clock_config.o(.text.BOARD_BootClockRUN) refers to clock_config.o(.rodata.videoPllConfig_BOARD_BootClockRUN) for videoPllConfig_BOARD_BootClockRUN
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_InitVideoPll) for CLOCK_InitVideoPll
    clock_config.o(.text.BOARD_BootClockRUN) refers to clock_config.o(.text.IOMUXC_SetSaiMClkClockSource) for IOMUXC_SetSaiMClkClockSource
    clock_config.o(.text.BOARD_BootClockRUN) refers to clock_config.o(.text.IOMUXC_MQSConfig) for IOMUXC_MQSConfig
    clock_config.o(.text.BOARD_BootClockRUN) refers to clock_config.o(.text.CLOCK_GetRootClockFreq) for CLOCK_GetRootClockFreq
    clock_config.o(.text.BOARD_BootClockRUN) refers to system_mimxrt1176_cm7.o(.data.SystemCoreClock) for SystemCoreClock
    clock_config.o(.ARM.exidx.text.BOARD_BootClockRUN) refers to clock_config.o(.text.BOARD_BootClockRUN) for [Anonymous Symbol]
    clock_config.o(.ARM.exidx.text.DCDC_SetVDD1P0BuckModeTargetVoltage) refers to clock_config.o(.text.DCDC_SetVDD1P0BuckModeTargetVoltage) for [Anonymous Symbol]
    clock_config.o(.ARM.exidx.text.CLOCK_OSC_GateOscRc400M) refers to clock_config.o(.text.CLOCK_OSC_GateOscRc400M) for [Anonymous Symbol]
    clock_config.o(.ARM.exidx.text.CLOCK_OSC_EnableOsc48M) refers to clock_config.o(.text.CLOCK_OSC_EnableOsc48M) for [Anonymous Symbol]
    clock_config.o(.ARM.exidx.text.CLOCK_OSC_EnableOsc48MDiv2) refers to clock_config.o(.text.CLOCK_OSC_EnableOsc48MDiv2) for [Anonymous Symbol]
    clock_config.o(.text.CLOCK_SetRootClock) refers to clock_config.o(.rodata.str1.1) for .L.str
    clock_config.o(.text.CLOCK_SetRootClock) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    clock_config.o(.ARM.exidx.text.CLOCK_SetRootClock) refers to clock_config.o(.text.CLOCK_SetRootClock) for [Anonymous Symbol]
    clock_config.o(.ARM.exidx.text.IOMUXC_SetSaiMClkClockSource) refers to clock_config.o(.text.IOMUXC_SetSaiMClkClockSource) for [Anonymous Symbol]
    clock_config.o(.ARM.exidx.text.IOMUXC_MQSConfig) refers to clock_config.o(.text.IOMUXC_MQSConfig) for [Anonymous Symbol]
    clock_config.o(.text.CLOCK_GetRootClockFreq) refers to clock_config.o(.text.CLOCK_GetRootClockMux) for CLOCK_GetRootClockMux
    clock_config.o(.text.CLOCK_GetRootClockFreq) refers to clock_config.o(.rodata.s_clockSourceName) for s_clockSourceName
    clock_config.o(.text.CLOCK_GetRootClockFreq) refers to fsl_clock.o(.text.CLOCK_GetFreq) for CLOCK_GetFreq
    clock_config.o(.text.CLOCK_GetRootClockFreq) refers to clock_config.o(.text.CLOCK_GetRootClockDiv) for CLOCK_GetRootClockDiv
    clock_config.o(.text.CLOCK_GetRootClockFreq) refers to clock_config.o(.rodata.str1.1) for .L.str.2
    clock_config.o(.text.CLOCK_GetRootClockFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    clock_config.o(.ARM.exidx.text.CLOCK_GetRootClockFreq) refers to clock_config.o(.text.CLOCK_GetRootClockFreq) for [Anonymous Symbol]
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_dcdc.o(.text.DCDC_BootIntoDCM) for DCDC_BootIntoDCM
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to clock_config.o(.text.DCDC_SetVDD1P0BuckModeTargetVoltage) for DCDC_SetVDD1P0BuckModeTargetVoltage
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_pmu.o(.text.PMU_EnableBodyBias) for PMU_EnableBodyBias
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_pmu.o(.text.PMU_StaticEnableLpsrAnaLdoBypassMode) for PMU_StaticEnableLpsrAnaLdoBypassMode
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_pmu.o(.text.PMU_StaticEnableLpsrDigLdoBypassMode) for PMU_StaticEnableLpsrDigLdoBypassMode
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_clock.o(.text.CLOCK_OSC_Set1MHzOutputBehavior) for CLOCK_OSC_Set1MHzOutputBehavior
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_clock.o(.text.CLOCK_OSC_EnableOscRc400M) for CLOCK_OSC_EnableOscRc400M
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to clock_config.o(.text.CLOCK_OSC_GateOscRc400M) for CLOCK_OSC_GateOscRc400M
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to clock_config.o(.text.CLOCK_OSC_EnableOsc48M) for CLOCK_OSC_EnableOsc48M
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to clock_config.o(.text.CLOCK_OSC_EnableOsc48MDiv2) for CLOCK_OSC_EnableOsc48MDiv2
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to clock_config.o(.text.CLOCK_SetRootClock) for CLOCK_SetRootClock
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to clock_config.o(.rodata.armPllConfig_BOARD_BootClockRUN_800M) for armPllConfig_BOARD_BootClockRUN_800M
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_clock.o(.text.CLOCK_InitArmPll) for CLOCK_InitArmPll
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_clock.o(.text.CLOCK_SetPllBypass) for CLOCK_SetPllBypass
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_clock.o(.text.CLOCK_DeinitSysPll1) for CLOCK_DeinitSysPll1
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to clock_config.o(.rodata.sysPll2Config_BOARD_BootClockRUN_800M) for sysPll2Config_BOARD_BootClockRUN_800M
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_clock.o(.text.CLOCK_InitSysPll2) for CLOCK_InitSysPll2
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_clock.o(.text.CLOCK_InitPfd) for CLOCK_InitPfd
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_clock.o(.text.CLOCK_InitSysPll3) for CLOCK_InitSysPll3
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_clock.o(.text.CLOCK_DeinitAudioPll) for CLOCK_DeinitAudioPll
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to clock_config.o(.rodata.videoPllConfig_BOARD_BootClockRUN_800M) for videoPllConfig_BOARD_BootClockRUN_800M
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to fsl_clock.o(.text.CLOCK_InitVideoPll) for CLOCK_InitVideoPll
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to clock_config.o(.text.IOMUXC_SetSaiMClkClockSource) for IOMUXC_SetSaiMClkClockSource
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to clock_config.o(.text.IOMUXC_MQSConfig) for IOMUXC_MQSConfig
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to clock_config.o(.text.CLOCK_GetRootClockFreq) for CLOCK_GetRootClockFreq
    clock_config.o(.text.BOARD_BootClockRUN_800M) refers to system_mimxrt1176_cm7.o(.data.SystemCoreClock) for SystemCoreClock
    clock_config.o(.ARM.exidx.text.BOARD_BootClockRUN_800M) refers to clock_config.o(.text.BOARD_BootClockRUN_800M) for [Anonymous Symbol]
    clock_config.o(.ARM.exidx.text.CLOCK_GetRootClockMux) refers to clock_config.o(.text.CLOCK_GetRootClockMux) for [Anonymous Symbol]
    clock_config.o(.ARM.exidx.text.CLOCK_GetRootClockDiv) refers to clock_config.o(.text.CLOCK_GetRootClockDiv) for [Anonymous Symbol]
    fsl_str.o(.text.StrFormatPrintf) refers to fsl_str.o(.text.PrintGetWidth) for PrintGetWidth
    fsl_str.o(.text.StrFormatPrintf) refers to fsl_str.o(.text.PrintGetPrecision) for PrintGetPrecision
    fsl_str.o(.text.StrFormatPrintf) refers to fsl_str.o(.text.PrintFilterLengthFlag) for PrintFilterLengthFlag
    fsl_str.o(.text.StrFormatPrintf) refers to fsl_str.o(.text.PrintIsdi) for PrintIsdi
    fsl_str.o(.text.StrFormatPrintf) refers to fsl_str.o(.text.ConvertRadixNumToString) for ConvertRadixNumToString
    fsl_str.o(.text.StrFormatPrintf) refers to fsl_str.o(.text.PrintOutputdifFobpu) for PrintOutputdifFobpu
    fsl_str.o(.text.StrFormatPrintf) refers to fsl_str.o(.text.PrintIsfF) for PrintIsfF
    fsl_str.o(.text.StrFormatPrintf) refers to fsl_str.o(.text.PrintIsxX) for PrintIsxX
    fsl_str.o(.text.StrFormatPrintf) refers to fsl_str.o(.text.PrintOutputxX) for PrintOutputxX
    fsl_str.o(.text.StrFormatPrintf) refers to fsl_str.o(.text.PrintIsobpu) for PrintIsobpu
    fsl_str.o(.text.StrFormatPrintf) refers to memcpy.o(.text) for memcpy
    fsl_str.o(.text.StrFormatPrintf) refers to fsl_str.o(.text.PrintGetRadixFromobpu) for PrintGetRadixFromobpu
    fsl_str.o(.text.StrFormatPrintf) refers to strlen.o(.text) for strlen
    fsl_str.o(.ARM.exidx.text.StrFormatPrintf) refers to fsl_str.o(.text.StrFormatPrintf) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.PrintGetWidth) refers to fsl_str.o(.text.PrintGetWidth) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.PrintGetPrecision) refers to fsl_str.o(.text.PrintGetPrecision) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.PrintFilterLengthFlag) refers to fsl_str.o(.text.PrintFilterLengthFlag) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.PrintIsdi) refers to fsl_str.o(.text.PrintIsdi) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.ConvertRadixNumToString) refers to fsl_str.o(.text.ConvertRadixNumToString) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.PrintOutputdifFobpu) refers to fsl_str.o(.text.PrintOutputdifFobpu) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.PrintIsfF) refers to fsl_str.o(.text.PrintIsfF) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.PrintIsxX) refers to fsl_str.o(.text.PrintIsxX) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.PrintOutputxX) refers to fsl_str.o(.text.PrintOutputxX) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.PrintIsobpu) refers to fsl_str.o(.text.PrintIsobpu) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.PrintGetRadixFromobpu) refers to fsl_str.o(.text.PrintGetRadixFromobpu) for [Anonymous Symbol]
    fsl_str.o(.text.StrFormatScanf) refers to fsl_str.o(.text.ScanIgnoreWhiteSpace) for ScanIgnoreWhiteSpace
    fsl_str.o(.text.StrFormatScanf) refers to fsl_str.o(.text.StrFormatScanIsFormatStarting) for StrFormatScanIsFormatStarting
    fsl_str.o(.text.StrFormatScanf) refers to fsl_str.o(.text.StrFormatScanfStringHandling) for StrFormatScanfStringHandling
    fsl_str.o(.text.StrFormatScanf) refers to fsl_str.o(.text.ScanIsWhiteSpace) for ScanIsWhiteSpace
    fsl_str.o(.text.StrFormatScanf) refers to fsl_str.o(.text.StrFormatScanGetBase) for StrFormatScanGetBase
    fsl_str.o(.text.StrFormatScanf) refers to fsl_str.o(.text.StrFormatScanCheckSymbol) for StrFormatScanCheckSymbol
    fsl_str.o(.text.StrFormatScanf) refers to strlen.o(.text) for strlen
    fsl_str.o(.text.StrFormatScanf) refers to memcpy.o(.text) for memcpy
    fsl_str.o(.text.StrFormatScanf) refers to errno.o(i.__aeabi_errno_addr) for __aeabi_errno_addr
    fsl_str.o(.text.StrFormatScanf) refers to strtoul.o(.text) for strtoul
    fsl_str.o(.text.StrFormatScanf) refers to fsl_str.o(.text.StrFormatScanFillInteger) for StrFormatScanFillInteger
    fsl_str.o(.ARM.exidx.text.StrFormatScanf) refers to fsl_str.o(.text.StrFormatScanf) for [Anonymous Symbol]
    fsl_str.o(.text.ScanIgnoreWhiteSpace) refers to fsl_str.o(.text.ScanIsWhiteSpace) for ScanIsWhiteSpace
    fsl_str.o(.ARM.exidx.text.ScanIgnoreWhiteSpace) refers to fsl_str.o(.text.ScanIgnoreWhiteSpace) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.StrFormatScanIsFormatStarting) refers to fsl_str.o(.text.StrFormatScanIsFormatStarting) for [Anonymous Symbol]
    fsl_str.o(.text.StrFormatScanfStringHandling) refers to errno.o(i.__aeabi_errno_addr) for __aeabi_errno_addr
    fsl_str.o(.text.StrFormatScanfStringHandling) refers to strtoul.o(.text) for strtoul
    fsl_str.o(.ARM.exidx.text.StrFormatScanfStringHandling) refers to fsl_str.o(.text.StrFormatScanfStringHandling) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.ScanIsWhiteSpace) refers to fsl_str.o(.text.ScanIsWhiteSpace) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.StrFormatScanGetBase) refers to fsl_str.o(.text.StrFormatScanGetBase) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.StrFormatScanCheckSymbol) refers to fsl_str.o(.text.StrFormatScanCheckSymbol) for [Anonymous Symbol]
    fsl_str.o(.ARM.exidx.text.StrFormatScanFillInteger) refers to fsl_str.o(.text.StrFormatScanFillInteger) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Init) refers to fsl_debug_console.o(.bss.s_debugConsole) for s_debugConsole
    fsl_debug_console.o(.text.DbgConsole_Init) refers to fsl_adapter_lpuart.o(.text.HAL_UartInit) for HAL_UartInit
    fsl_debug_console.o(.text.DbgConsole_Init) refers to fsl_adapter_lpuart.o(.text.HAL_UartSendBlocking) for HAL_UartSendBlocking
    fsl_debug_console.o(.text.DbgConsole_Init) refers to fsl_adapter_lpuart.o(.text.HAL_UartReceiveBlocking) for HAL_UartReceiveBlocking
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Init) refers to fsl_debug_console.o(.text.DbgConsole_Init) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Deinit) refers to fsl_debug_console.o(.bss.s_debugConsole) for s_debugConsole
    fsl_debug_console.o(.text.DbgConsole_Deinit) refers to fsl_adapter_lpuart.o(.text.HAL_UartDeinit) for HAL_UartDeinit
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Deinit) refers to fsl_debug_console.o(.text.DbgConsole_Deinit) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Printf) refers to fsl_debug_console.o(.text.DbgConsole_Vprintf) for DbgConsole_Vprintf
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Printf) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Vprintf) refers to fsl_debug_console.o(.bss.s_debugConsole) for s_debugConsole
    fsl_debug_console.o(.text.DbgConsole_Vprintf) refers to fsl_debug_console.o(.text.DbgConsole_Putchar) for DbgConsole_Putchar
    fsl_debug_console.o(.text.DbgConsole_Vprintf) refers to fsl_debug_console.o(.text.DbgConsole_PrintfFormattedData) for DbgConsole_PrintfFormattedData
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Vprintf) refers to fsl_debug_console.o(.text.DbgConsole_Vprintf) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_PrintfFormattedData) refers to fsl_debug_console.o(.text.DbgConsole_ConvertRadixNumToString) for DbgConsole_ConvertRadixNumToString
    fsl_debug_console.o(.text.DbgConsole_PrintfFormattedData) refers to memcpy.o(.text) for memcpy
    fsl_debug_console.o(.text.DbgConsole_PrintfFormattedData) refers to fsl_debug_console.o(.text.DbgConsole_PrintfPaddingCharacter) for DbgConsole_PrintfPaddingCharacter
    fsl_debug_console.o(.text.DbgConsole_PrintfFormattedData) refers to strlen.o(.text) for strlen
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_PrintfFormattedData) refers to fsl_debug_console.o(.text.DbgConsole_PrintfFormattedData) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Putchar) refers to fsl_debug_console.o(.bss.s_debugConsole) for s_debugConsole
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Putchar) refers to fsl_debug_console.o(.text.DbgConsole_Putchar) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Scanf) refers to fsl_debug_console.o(.bss.s_debugConsole) for s_debugConsole
    fsl_debug_console.o(.text.DbgConsole_Scanf) refers to fsl_debug_console.o(.text.DbgConsole_Getchar) for DbgConsole_Getchar
    fsl_debug_console.o(.text.DbgConsole_Scanf) refers to fsl_str.o(.text.StrFormatScanf) for StrFormatScanf
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Scanf) refers to fsl_debug_console.o(.text.DbgConsole_Scanf) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Getchar) refers to fsl_debug_console.o(.bss.s_debugConsole) for s_debugConsole
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Getchar) refers to fsl_debug_console.o(.text.DbgConsole_Getchar) for [Anonymous Symbol]
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_ConvertRadixNumToString) refers to fsl_debug_console.o(.text.DbgConsole_ConvertRadixNumToString) for [Anonymous Symbol]
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_PrintfPaddingCharacter) refers to fsl_debug_console.o(.text.DbgConsole_PrintfPaddingCharacter) for [Anonymous Symbol]
    fsl_assert.o(.text.__aeabi_assert) refers to fsl_assert.o(.rodata.str1.1) for .L.str
    fsl_assert.o(.text.__aeabi_assert) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    fsl_assert.o(.ARM.exidx.text.__aeabi_assert) refers to fsl_assert.o(.text.__aeabi_assert) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_GetInstance) refers to fsl_flexcan.o(.rodata.s_flexcanBases) for s_flexcanBases
    fsl_flexcan.o(.text.FLEXCAN_GetInstance) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str
    fsl_flexcan.o(.text.FLEXCAN_GetInstance) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_GetInstance) refers to fsl_flexcan.o(.text.FLEXCAN_GetInstance) for [Anonymous Symbol]
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_EnterFreezeMode) refers to fsl_flexcan.o(.text.FLEXCAN_EnterFreezeMode) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_ExitFreezeMode) refers to fsl_flexcan.o(.text.FLEXCAN_ClearStatusFlags) for FLEXCAN_ClearStatusFlags
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_ExitFreezeMode) refers to fsl_flexcan.o(.text.FLEXCAN_ExitFreezeMode) for [Anonymous Symbol]
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_ClearStatusFlags) refers to fsl_flexcan.o(.text.FLEXCAN_ClearStatusFlags) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_SetBitRate) refers to fsl_flexcan.o(.text.FLEXCAN_CalculateImprovedTimingValues) for FLEXCAN_CalculateImprovedTimingValues
    fsl_flexcan.o(.text.FLEXCAN_SetBitRate) refers to fsl_flexcan.o(.text.FLEXCAN_SetTimingConfig) for FLEXCAN_SetTimingConfig
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetBitRate) refers to fsl_flexcan.o(.text.FLEXCAN_SetBitRate) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_CalculateImprovedTimingValues) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.13
    fsl_flexcan.o(.text.FLEXCAN_CalculateImprovedTimingValues) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.text.FLEXCAN_CalculateImprovedTimingValues) refers to fsl_flexcan.o(.text.FLEXCAN_GetSegments) for FLEXCAN_GetSegments
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_CalculateImprovedTimingValues) refers to fsl_flexcan.o(.text.FLEXCAN_CalculateImprovedTimingValues) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_SetTimingConfig) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.2
    fsl_flexcan.o(.text.FLEXCAN_SetTimingConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.text.FLEXCAN_SetTimingConfig) refers to fsl_flexcan.o(.text.FLEXCAN_EnterFreezeMode) for FLEXCAN_EnterFreezeMode
    fsl_flexcan.o(.text.FLEXCAN_SetTimingConfig) refers to fsl_flexcan.o(.text.FLEXCAN_ExitFreezeMode) for FLEXCAN_ExitFreezeMode
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetTimingConfig) refers to fsl_flexcan.o(.text.FLEXCAN_SetTimingConfig) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_SetFDBitRate) refers to fsl_flexcan.o(.text.FLEXCAN_FDCalculateImprovedTimingValues) for FLEXCAN_FDCalculateImprovedTimingValues
    fsl_flexcan.o(.text.FLEXCAN_SetFDBitRate) refers to fsl_flexcan.o(.text.FLEXCAN_SetFDTimingConfig) for FLEXCAN_SetFDTimingConfig
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetFDBitRate) refers to fsl_flexcan.o(.text.FLEXCAN_SetFDBitRate) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_FDCalculateImprovedTimingValues) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.14
    fsl_flexcan.o(.text.FLEXCAN_FDCalculateImprovedTimingValues) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.text.FLEXCAN_FDCalculateImprovedTimingValues) refers to fsl_flexcan.o(.text.FLEXCAN_FDGetSegments) for FLEXCAN_FDGetSegments
    fsl_flexcan.o(.text.FLEXCAN_FDCalculateImprovedTimingValues) refers to fsl_flexcan.o(.text.FLEXCAN_CalculateImprovedNominalTimingValues) for FLEXCAN_CalculateImprovedNominalTimingValues
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_FDCalculateImprovedTimingValues) refers to fsl_flexcan.o(.text.FLEXCAN_FDCalculateImprovedTimingValues) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_SetFDTimingConfig) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.2
    fsl_flexcan.o(.text.FLEXCAN_SetFDTimingConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.text.FLEXCAN_SetFDTimingConfig) refers to fsl_flexcan.o(.text.FLEXCAN_EnterFreezeMode) for FLEXCAN_EnterFreezeMode
    fsl_flexcan.o(.text.FLEXCAN_SetFDTimingConfig) refers to fsl_flexcan.o(.text.FLEXCAN_ExitFreezeMode) for FLEXCAN_ExitFreezeMode
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetFDTimingConfig) refers to fsl_flexcan.o(.text.FLEXCAN_SetFDTimingConfig) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_Init) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.2
    fsl_flexcan.o(.text.FLEXCAN_Init) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.text.FLEXCAN_Init) refers to fsl_flexcan.o(.text.FLEXCAN_GetInstance) for FLEXCAN_GetInstance
    fsl_flexcan.o(.text.FLEXCAN_Init) refers to fsl_flexcan.o(.rodata.s_flexcanClock) for s_flexcanClock
    fsl_flexcan.o(.text.FLEXCAN_Init) refers to fsl_flexcan.o(.text.CLOCK_EnableClock) for CLOCK_EnableClock
    fsl_flexcan.o(.text.FLEXCAN_Init) refers to fsl_flexcan.o(.text.FLEXCAN_Enable) for FLEXCAN_Enable
    fsl_flexcan.o(.text.FLEXCAN_Init) refers to fsl_flexcan.o(.text.FLEXCAN_Reset) for FLEXCAN_Reset
    fsl_flexcan.o(.text.FLEXCAN_Init) refers to fsl_flexcan.o(.text.FLEXCAN_SetTimingConfig) for FLEXCAN_SetTimingConfig
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_Init) refers to fsl_flexcan.o(.text.FLEXCAN_Init) for [Anonymous Symbol]
    fsl_flexcan.o(.text.CLOCK_EnableClock) refers to fsl_flexcan.o(.text.CLOCK_ControlGate) for CLOCK_ControlGate
    fsl_flexcan.o(.ARM.exidx.text.CLOCK_EnableClock) refers to fsl_flexcan.o(.text.CLOCK_EnableClock) for [Anonymous Symbol]
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_Enable) refers to fsl_flexcan.o(.text.FLEXCAN_Enable) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_Reset) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.33
    fsl_flexcan.o(.text.FLEXCAN_Reset) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.text.FLEXCAN_Reset) refers to fsl_flexcan.o(.text.flexcan_memset) for flexcan_memset
    fsl_flexcan.o(.text.FLEXCAN_Reset) refers to fsl_flexcan.o(.text.FLEXCAN_ClearStatusFlags) for FLEXCAN_ClearStatusFlags
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_Reset) refers to fsl_flexcan.o(.text.FLEXCAN_Reset) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_FDInit) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.6
    fsl_flexcan.o(.text.FLEXCAN_FDInit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.text.FLEXCAN_FDInit) refers to fsl_flexcan.o(.text.FLEXCAN_Init) for FLEXCAN_Init
    fsl_flexcan.o(.text.FLEXCAN_FDInit) refers to fsl_flexcan.o(.text.FLEXCAN_SetFDTimingConfig) for FLEXCAN_SetFDTimingConfig
    fsl_flexcan.o(.text.FLEXCAN_FDInit) refers to fsl_flexcan.o(.text.FLEXCAN_EnterFreezeMode) for FLEXCAN_EnterFreezeMode
    fsl_flexcan.o(.text.FLEXCAN_FDInit) refers to fsl_flexcan.o(.text.FLEXCAN_ExitFreezeMode) for FLEXCAN_ExitFreezeMode
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_FDInit) refers to fsl_flexcan.o(.text.FLEXCAN_FDInit) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_Deinit) refers to fsl_flexcan.o(.text.FLEXCAN_Reset) for FLEXCAN_Reset
    fsl_flexcan.o(.text.FLEXCAN_Deinit) refers to fsl_flexcan.o(.text.FLEXCAN_Enable) for FLEXCAN_Enable
    fsl_flexcan.o(.text.FLEXCAN_Deinit) refers to fsl_flexcan.o(.text.FLEXCAN_GetInstance) for FLEXCAN_GetInstance
    fsl_flexcan.o(.text.FLEXCAN_Deinit) refers to fsl_flexcan.o(.rodata.s_flexcanClock) for s_flexcanClock
    fsl_flexcan.o(.text.FLEXCAN_Deinit) refers to fsl_flexcan.o(.text.CLOCK_DisableClock) for CLOCK_DisableClock
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_Deinit) refers to fsl_flexcan.o(.text.FLEXCAN_Deinit) for [Anonymous Symbol]
    fsl_flexcan.o(.text.CLOCK_DisableClock) refers to fsl_flexcan.o(.text.CLOCK_ControlGate) for CLOCK_ControlGate
    fsl_flexcan.o(.ARM.exidx.text.CLOCK_DisableClock) refers to fsl_flexcan.o(.text.CLOCK_DisableClock) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_GetDefaultConfig) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.2
    fsl_flexcan.o(.text.FLEXCAN_GetDefaultConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.text.FLEXCAN_GetDefaultConfig) refers to memset.o(.text) for memset
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_GetDefaultConfig) refers to fsl_flexcan.o(.text.FLEXCAN_GetDefaultConfig) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_SetRxMbGlobalMask) refers to fsl_flexcan.o(.text.FLEXCAN_EnterFreezeMode) for FLEXCAN_EnterFreezeMode
    fsl_flexcan.o(.text.FLEXCAN_SetRxMbGlobalMask) refers to fsl_flexcan.o(.text.FLEXCAN_ExitFreezeMode) for FLEXCAN_ExitFreezeMode
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetRxMbGlobalMask) refers to fsl_flexcan.o(.text.FLEXCAN_SetRxMbGlobalMask) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_SetRxFifoGlobalMask) refers to fsl_flexcan.o(.text.FLEXCAN_EnterFreezeMode) for FLEXCAN_EnterFreezeMode
    fsl_flexcan.o(.text.FLEXCAN_SetRxFifoGlobalMask) refers to fsl_flexcan.o(.text.FLEXCAN_ExitFreezeMode) for FLEXCAN_ExitFreezeMode
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetRxFifoGlobalMask) refers to fsl_flexcan.o(.text.FLEXCAN_SetRxFifoGlobalMask) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_SetRxIndividualMask) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.10
    fsl_flexcan.o(.text.FLEXCAN_SetRxIndividualMask) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.text.FLEXCAN_SetRxIndividualMask) refers to fsl_flexcan.o(.text.FLEXCAN_EnterFreezeMode) for FLEXCAN_EnterFreezeMode
    fsl_flexcan.o(.text.FLEXCAN_SetRxIndividualMask) refers to fsl_flexcan.o(.text.FLEXCAN_ExitFreezeMode) for FLEXCAN_ExitFreezeMode
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetRxIndividualMask) refers to fsl_flexcan.o(.text.FLEXCAN_SetRxIndividualMask) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_SetTxMbConfig) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.11
    fsl_flexcan.o(.text.FLEXCAN_SetTxMbConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.text.FLEXCAN_SetTxMbConfig) refers to fsl_flexcan.o(.text.FLEXCAN_IsMbOccupied) for FLEXCAN_IsMbOccupied
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetTxMbConfig) refers to fsl_flexcan.o(.text.FLEXCAN_SetTxMbConfig) for [Anonymous Symbol]
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_IsMbOccupied) refers to fsl_flexcan.o(.text.FLEXCAN_IsMbOccupied) for [Anonymous Symbol]
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_GetSegments) refers to fsl_flexcan.o(.text.FLEXCAN_GetSegments) for [Anonymous Symbol]
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_FDGetSegments) refers to fsl_flexcan.o(.text.FLEXCAN_FDGetSegments) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_CalculateImprovedNominalTimingValues) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.13
    fsl_flexcan.o(.text.FLEXCAN_CalculateImprovedNominalTimingValues) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_CalculateImprovedNominalTimingValues) refers to fsl_flexcan.o(.text.FLEXCAN_CalculateImprovedNominalTimingValues) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_SetFDTxMbConfig) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.11
    fsl_flexcan.o(.text.FLEXCAN_SetFDTxMbConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.text.FLEXCAN_SetFDTxMbConfig) refers to fsl_flexcan.o(.text.FLEXCAN_IsMbOccupied) for FLEXCAN_IsMbOccupied
    fsl_flexcan.o(.text.FLEXCAN_SetFDTxMbConfig) refers to fsl_flexcan.o(.text.FLEXCAN_GetFDMailboxOffset) for FLEXCAN_GetFDMailboxOffset
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetFDTxMbConfig) refers to fsl_flexcan.o(.text.FLEXCAN_SetFDTxMbConfig) for [Anonymous Symbol]
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_GetFDMailboxOffset) refers to fsl_flexcan.o(.text.FLEXCAN_GetFDMailboxOffset) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_SetRxMbConfig) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.11
    fsl_flexcan.o(.text.FLEXCAN_SetRxMbConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.text.FLEXCAN_SetRxMbConfig) refers to fsl_flexcan.o(.text.FLEXCAN_IsMbOccupied) for FLEXCAN_IsMbOccupied
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetRxMbConfig) refers to fsl_flexcan.o(.text.FLEXCAN_SetRxMbConfig) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_SetFDRxMbConfig) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.11
    fsl_flexcan.o(.text.FLEXCAN_SetFDRxMbConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.text.FLEXCAN_SetFDRxMbConfig) refers to fsl_flexcan.o(.text.FLEXCAN_IsMbOccupied) for FLEXCAN_IsMbOccupied
    fsl_flexcan.o(.text.FLEXCAN_SetFDRxMbConfig) refers to fsl_flexcan.o(.text.FLEXCAN_GetFDMailboxOffset) for FLEXCAN_GetFDMailboxOffset
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetFDRxMbConfig) refers to fsl_flexcan.o(.text.FLEXCAN_SetFDRxMbConfig) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_SetRxFifoConfig) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.18
    fsl_flexcan.o(.text.FLEXCAN_SetRxFifoConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.text.FLEXCAN_SetRxFifoConfig) refers to fsl_flexcan.o(.text.FLEXCAN_EnterFreezeMode) for FLEXCAN_EnterFreezeMode
    fsl_flexcan.o(.text.FLEXCAN_SetRxFifoConfig) refers to fsl_flexcan.o(.text.FLEXCAN_SetRxMbConfig) for FLEXCAN_SetRxMbConfig
    fsl_flexcan.o(.text.FLEXCAN_SetRxFifoConfig) refers to fsl_flexcan.o(.text.FLEXCAN_ExitFreezeMode) for FLEXCAN_ExitFreezeMode
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetRxFifoConfig) refers to fsl_flexcan.o(.text.FLEXCAN_SetRxFifoConfig) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_EnableRxFifoDMA) refers to fsl_flexcan.o(.text.FLEXCAN_EnterFreezeMode) for FLEXCAN_EnterFreezeMode
    fsl_flexcan.o(.text.FLEXCAN_EnableRxFifoDMA) refers to fsl_flexcan.o(.text.FLEXCAN_ExitFreezeMode) for FLEXCAN_ExitFreezeMode
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_EnableRxFifoDMA) refers to fsl_flexcan.o(.text.FLEXCAN_EnableRxFifoDMA) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_GetMemoryErrorReportStatus) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.21
    fsl_flexcan.o(.text.FLEXCAN_GetMemoryErrorReportStatus) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_GetMemoryErrorReportStatus) refers to fsl_flexcan.o(.text.FLEXCAN_GetMemoryErrorReportStatus) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_WriteTxMb) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.11
    fsl_flexcan.o(.text.FLEXCAN_WriteTxMb) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.text.FLEXCAN_WriteTxMb) refers to fsl_flexcan.o(.text.FLEXCAN_IsMbOccupied) for FLEXCAN_IsMbOccupied
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_WriteTxMb) refers to fsl_flexcan.o(.text.FLEXCAN_WriteTxMb) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_WriteFDTxMb) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.11
    fsl_flexcan.o(.text.FLEXCAN_WriteFDTxMb) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.text.FLEXCAN_WriteFDTxMb) refers to fsl_flexcan.o(.text.FLEXCAN_IsMbOccupied) for FLEXCAN_IsMbOccupied
    fsl_flexcan.o(.text.FLEXCAN_WriteFDTxMb) refers to fsl_flexcan.o(.text.FLEXCAN_GetFDMailboxOffset) for FLEXCAN_GetFDMailboxOffset
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_WriteFDTxMb) refers to fsl_flexcan.o(.text.FLEXCAN_WriteFDTxMb) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_ReadRxMb) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.11
    fsl_flexcan.o(.text.FLEXCAN_ReadRxMb) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.text.FLEXCAN_ReadRxMb) refers to fsl_flexcan.o(.text.FLEXCAN_IsMbOccupied) for FLEXCAN_IsMbOccupied
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_ReadRxMb) refers to fsl_flexcan.o(.text.FLEXCAN_ReadRxMb) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_ReadFDRxMb) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.11
    fsl_flexcan.o(.text.FLEXCAN_ReadFDRxMb) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.text.FLEXCAN_ReadFDRxMb) refers to fsl_flexcan.o(.text.FLEXCAN_IsMbOccupied) for FLEXCAN_IsMbOccupied
    fsl_flexcan.o(.text.FLEXCAN_ReadFDRxMb) refers to fsl_flexcan.o(.text.FLEXCAN_GetFDMailboxOffset) for FLEXCAN_GetFDMailboxOffset
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_ReadFDRxMb) refers to fsl_flexcan.o(.text.FLEXCAN_ReadFDRxMb) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_ReadRxFifo) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.24
    fsl_flexcan.o(.text.FLEXCAN_ReadRxFifo) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_ReadRxFifo) refers to fsl_flexcan.o(.text.FLEXCAN_ReadRxFifo) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferSendBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_WriteTxMb) for FLEXCAN_WriteTxMb
    fsl_flexcan.o(.text.FLEXCAN_TransferSendBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_GetMbStatusFlags) for FLEXCAN_GetMbStatusFlags
    fsl_flexcan.o(.text.FLEXCAN_TransferSendBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_ClearMbStatusFlags) for FLEXCAN_ClearMbStatusFlags
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferSendBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_TransferSendBlocking) for [Anonymous Symbol]
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_GetMbStatusFlags) refers to fsl_flexcan.o(.text.FLEXCAN_GetMbStatusFlags) for [Anonymous Symbol]
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_ClearMbStatusFlags) refers to fsl_flexcan.o(.text.FLEXCAN_ClearMbStatusFlags) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferReceiveBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_GetMbStatusFlags) for FLEXCAN_GetMbStatusFlags
    fsl_flexcan.o(.text.FLEXCAN_TransferReceiveBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_ClearMbStatusFlags) for FLEXCAN_ClearMbStatusFlags
    fsl_flexcan.o(.text.FLEXCAN_TransferReceiveBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_ReadRxMb) for FLEXCAN_ReadRxMb
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferReceiveBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_TransferReceiveBlocking) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferFDSendBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_WriteFDTxMb) for FLEXCAN_WriteFDTxMb
    fsl_flexcan.o(.text.FLEXCAN_TransferFDSendBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_GetMbStatusFlags) for FLEXCAN_GetMbStatusFlags
    fsl_flexcan.o(.text.FLEXCAN_TransferFDSendBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_ClearMbStatusFlags) for FLEXCAN_ClearMbStatusFlags
    fsl_flexcan.o(.text.FLEXCAN_TransferFDSendBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_GetFDMailboxOffset) for FLEXCAN_GetFDMailboxOffset
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferFDSendBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_TransferFDSendBlocking) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferFDReceiveBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_GetMbStatusFlags) for FLEXCAN_GetMbStatusFlags
    fsl_flexcan.o(.text.FLEXCAN_TransferFDReceiveBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_ClearMbStatusFlags) for FLEXCAN_ClearMbStatusFlags
    fsl_flexcan.o(.text.FLEXCAN_TransferFDReceiveBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_ReadFDRxMb) for FLEXCAN_ReadFDRxMb
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferFDReceiveBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_TransferFDReceiveBlocking) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferReceiveFifoBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_GetMbStatusFlags) for FLEXCAN_GetMbStatusFlags
    fsl_flexcan.o(.text.FLEXCAN_TransferReceiveFifoBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_ReadRxFifo) for FLEXCAN_ReadRxFifo
    fsl_flexcan.o(.text.FLEXCAN_TransferReceiveFifoBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_ClearMbStatusFlags) for FLEXCAN_ClearMbStatusFlags
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferReceiveFifoBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_TransferReceiveFifoBlocking) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.25
    fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle) refers to memset.o(.text) for memset
    fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle) refers to fsl_flexcan.o(.text.FLEXCAN_GetInstance) for FLEXCAN_GetInstance
    fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle) refers to fsl_flexcan.o(.bss.s_flexcanHandle) for s_flexcanHandle
    fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle) refers to fsl_flexcan.o(.data.s_flexcanIsr) for s_flexcanIsr
    fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle) refers to fsl_flexcan.o(.text.FLEXCAN_TransferHandleIRQ) for FLEXCAN_TransferHandleIRQ
    fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle) refers to fsl_flexcan.o(.text.FLEXCAN_EnableInterrupts) for FLEXCAN_EnableInterrupts
    fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle) refers to fsl_flexcan.o(.text.FLEXCAN_DisableInterrupts) for FLEXCAN_DisableInterrupts
    fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle) refers to fsl_flexcan.o(.rodata.s_flexcanRxWarningIRQ) for s_flexcanRxWarningIRQ
    fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle) refers to fsl_flexcan.o(.text.EnableIRQ) for EnableIRQ
    fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle) refers to fsl_flexcan.o(.rodata.s_flexcanTxWarningIRQ) for s_flexcanTxWarningIRQ
    fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle) refers to fsl_flexcan.o(.rodata.s_flexcanWakeUpIRQ) for s_flexcanWakeUpIRQ
    fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle) refers to fsl_flexcan.o(.rodata.s_flexcanErrorIRQ) for s_flexcanErrorIRQ
    fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle) refers to fsl_flexcan.o(.rodata.s_flexcanBusOffIRQ) for s_flexcanBusOffIRQ
    fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle) refers to fsl_flexcan.o(.rodata.s_flexcanMbIRQ) for s_flexcanMbIRQ
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferCreateHandle) refers to fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferHandleIRQ) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.25
    fsl_flexcan.o(.text.FLEXCAN_TransferHandleIRQ) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.text.FLEXCAN_TransferHandleIRQ) refers to fsl_flexcan.o(.text.FLEXCAN_GetStatusFlags) for FLEXCAN_GetStatusFlags
    fsl_flexcan.o(.text.FLEXCAN_TransferHandleIRQ) refers to fsl_flexcan.o(.text.FLEXCAN_ClearStatusFlags) for FLEXCAN_ClearStatusFlags
    fsl_flexcan.o(.text.FLEXCAN_TransferHandleIRQ) refers to fsl_flexcan.o(.text.FLEXCAN_SubHandlerForDataTransfered) for FLEXCAN_SubHandlerForDataTransfered
    fsl_flexcan.o(.text.FLEXCAN_TransferHandleIRQ) refers to fsl_flexcan.o(.text.FLEXCAN_CheckUnhandleInterruptEvents) for FLEXCAN_CheckUnhandleInterruptEvents
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferHandleIRQ) refers to fsl_flexcan.o(.text.FLEXCAN_TransferHandleIRQ) for [Anonymous Symbol]
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_EnableInterrupts) refers to fsl_flexcan.o(.text.FLEXCAN_EnableInterrupts) for [Anonymous Symbol]
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_DisableInterrupts) refers to fsl_flexcan.o(.text.FLEXCAN_DisableInterrupts) for [Anonymous Symbol]
    fsl_flexcan.o(.text.EnableIRQ) refers to fsl_flexcan.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    fsl_flexcan.o(.ARM.exidx.text.EnableIRQ) refers to fsl_flexcan.o(.text.EnableIRQ) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferSendNonBlocking) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.25
    fsl_flexcan.o(.text.FLEXCAN_TransferSendNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.text.FLEXCAN_TransferSendNonBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_IsMbOccupied) for FLEXCAN_IsMbOccupied
    fsl_flexcan.o(.text.FLEXCAN_TransferSendNonBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_WriteTxMb) for FLEXCAN_WriteTxMb
    fsl_flexcan.o(.text.FLEXCAN_TransferSendNonBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_EnableMbInterrupts) for FLEXCAN_EnableMbInterrupts
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferSendNonBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_TransferSendNonBlocking) for [Anonymous Symbol]
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_EnableMbInterrupts) refers to fsl_flexcan.o(.text.FLEXCAN_EnableMbInterrupts) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferReceiveNonBlocking) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.25
    fsl_flexcan.o(.text.FLEXCAN_TransferReceiveNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.text.FLEXCAN_TransferReceiveNonBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_IsMbOccupied) for FLEXCAN_IsMbOccupied
    fsl_flexcan.o(.text.FLEXCAN_TransferReceiveNonBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_EnableMbInterrupts) for FLEXCAN_EnableMbInterrupts
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferReceiveNonBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_TransferReceiveNonBlocking) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferFDSendNonBlocking) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.25
    fsl_flexcan.o(.text.FLEXCAN_TransferFDSendNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.text.FLEXCAN_TransferFDSendNonBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_IsMbOccupied) for FLEXCAN_IsMbOccupied
    fsl_flexcan.o(.text.FLEXCAN_TransferFDSendNonBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_WriteFDTxMb) for FLEXCAN_WriteFDTxMb
    fsl_flexcan.o(.text.FLEXCAN_TransferFDSendNonBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_EnableMbInterrupts) for FLEXCAN_EnableMbInterrupts
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferFDSendNonBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_TransferFDSendNonBlocking) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferFDReceiveNonBlocking) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.25
    fsl_flexcan.o(.text.FLEXCAN_TransferFDReceiveNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.text.FLEXCAN_TransferFDReceiveNonBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_IsMbOccupied) for FLEXCAN_IsMbOccupied
    fsl_flexcan.o(.text.FLEXCAN_TransferFDReceiveNonBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_EnableMbInterrupts) for FLEXCAN_EnableMbInterrupts
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferFDReceiveNonBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_TransferFDReceiveNonBlocking) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferReceiveFifoNonBlocking) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.25
    fsl_flexcan.o(.text.FLEXCAN_TransferReceiveFifoNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.text.FLEXCAN_TransferReceiveFifoNonBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_EnableMbInterrupts) for FLEXCAN_EnableMbInterrupts
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferReceiveFifoNonBlocking) refers to fsl_flexcan.o(.text.FLEXCAN_TransferReceiveFifoNonBlocking) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferGetReceiveFifoCount) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.25
    fsl_flexcan.o(.text.FLEXCAN_TransferGetReceiveFifoCount) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferGetReceiveFifoCount) refers to fsl_flexcan.o(.text.FLEXCAN_TransferGetReceiveFifoCount) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferAbortSend) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.25
    fsl_flexcan.o(.text.FLEXCAN_TransferAbortSend) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.text.FLEXCAN_TransferAbortSend) refers to fsl_flexcan.o(.text.FLEXCAN_IsMbOccupied) for FLEXCAN_IsMbOccupied
    fsl_flexcan.o(.text.FLEXCAN_TransferAbortSend) refers to fsl_flexcan.o(.text.FLEXCAN_DisableMbInterrupts) for FLEXCAN_DisableMbInterrupts
    fsl_flexcan.o(.text.FLEXCAN_TransferAbortSend) refers to fsl_flexcan.o(.text.FLEXCAN_SetTxMbConfig) for FLEXCAN_SetTxMbConfig
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferAbortSend) refers to fsl_flexcan.o(.text.FLEXCAN_TransferAbortSend) for [Anonymous Symbol]
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_DisableMbInterrupts) refers to fsl_flexcan.o(.text.FLEXCAN_DisableMbInterrupts) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortSend) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.25
    fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortSend) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortSend) refers to fsl_flexcan.o(.text.FLEXCAN_IsMbOccupied) for FLEXCAN_IsMbOccupied
    fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortSend) refers to fsl_flexcan.o(.text.FLEXCAN_DisableMbInterrupts) for FLEXCAN_DisableMbInterrupts
    fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortSend) refers to fsl_flexcan.o(.text.FLEXCAN_GetFDMailboxOffset) for FLEXCAN_GetFDMailboxOffset
    fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortSend) refers to fsl_flexcan.o(.text.FLEXCAN_SetFDTxMbConfig) for FLEXCAN_SetFDTxMbConfig
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferFDAbortSend) refers to fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortSend) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortReceive) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.25
    fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortReceive) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortReceive) refers to fsl_flexcan.o(.text.FLEXCAN_IsMbOccupied) for FLEXCAN_IsMbOccupied
    fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortReceive) refers to fsl_flexcan.o(.text.FLEXCAN_DisableMbInterrupts) for FLEXCAN_DisableMbInterrupts
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferFDAbortReceive) refers to fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortReceive) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferAbortReceive) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.25
    fsl_flexcan.o(.text.FLEXCAN_TransferAbortReceive) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.text.FLEXCAN_TransferAbortReceive) refers to fsl_flexcan.o(.text.FLEXCAN_IsMbOccupied) for FLEXCAN_IsMbOccupied
    fsl_flexcan.o(.text.FLEXCAN_TransferAbortReceive) refers to fsl_flexcan.o(.text.FLEXCAN_DisableMbInterrupts) for FLEXCAN_DisableMbInterrupts
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferAbortReceive) refers to fsl_flexcan.o(.text.FLEXCAN_TransferAbortReceive) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_TransferAbortReceiveFifo) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.25
    fsl_flexcan.o(.text.FLEXCAN_TransferAbortReceiveFifo) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.text.FLEXCAN_TransferAbortReceiveFifo) refers to fsl_flexcan.o(.text.FLEXCAN_DisableMbInterrupts) for FLEXCAN_DisableMbInterrupts
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferAbortReceiveFifo) refers to fsl_flexcan.o(.text.FLEXCAN_TransferAbortReceiveFifo) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_GetTimeStamp) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.25
    fsl_flexcan.o(.text.FLEXCAN_GetTimeStamp) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_GetTimeStamp) refers to fsl_flexcan.o(.text.FLEXCAN_GetTimeStamp) for [Anonymous Symbol]
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_GetStatusFlags) refers to fsl_flexcan.o(.text.FLEXCAN_GetStatusFlags) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_SubHandlerForDataTransfered) refers to fsl_flexcan.o(.text.FLEXCAN_ReadRxFifo) for FLEXCAN_ReadRxFifo
    fsl_flexcan.o(.text.FLEXCAN_SubHandlerForDataTransfered) refers to fsl_flexcan.o(.text.FLEXCAN_ClearMbStatusFlags) for FLEXCAN_ClearMbStatusFlags
    fsl_flexcan.o(.text.FLEXCAN_SubHandlerForDataTransfered) refers to fsl_flexcan.o(.text.FLEXCAN_EnableMbInterrupts) for FLEXCAN_EnableMbInterrupts
    fsl_flexcan.o(.text.FLEXCAN_SubHandlerForDataTransfered) refers to fsl_flexcan.o(.text.FLEXCAN_TransferAbortReceiveFifo) for FLEXCAN_TransferAbortReceiveFifo
    fsl_flexcan.o(.text.FLEXCAN_SubHandlerForDataTransfered) refers to fsl_flexcan.o(.text.FLEXCAN_ReadFDRxMb) for FLEXCAN_ReadFDRxMb
    fsl_flexcan.o(.text.FLEXCAN_SubHandlerForDataTransfered) refers to fsl_flexcan.o(.text.FLEXCAN_ReadRxMb) for FLEXCAN_ReadRxMb
    fsl_flexcan.o(.text.FLEXCAN_SubHandlerForDataTransfered) refers to fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortReceive) for FLEXCAN_TransferFDAbortReceive
    fsl_flexcan.o(.text.FLEXCAN_SubHandlerForDataTransfered) refers to fsl_flexcan.o(.text.FLEXCAN_TransferAbortReceive) for FLEXCAN_TransferAbortReceive
    fsl_flexcan.o(.text.FLEXCAN_SubHandlerForDataTransfered) refers to fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortSend) for FLEXCAN_TransferFDAbortSend
    fsl_flexcan.o(.text.FLEXCAN_SubHandlerForDataTransfered) refers to fsl_flexcan.o(.text.FLEXCAN_TransferAbortSend) for FLEXCAN_TransferAbortSend
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SubHandlerForDataTransfered) refers to fsl_flexcan.o(.text.FLEXCAN_SubHandlerForDataTransfered) for [Anonymous Symbol]
    fsl_flexcan.o(.text.FLEXCAN_CheckUnhandleInterruptEvents) refers to fsl_flexcan.o(.text.FLEXCAN_GetStatusFlags) for FLEXCAN_GetStatusFlags
    fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_CheckUnhandleInterruptEvents) refers to fsl_flexcan.o(.text.FLEXCAN_CheckUnhandleInterruptEvents) for [Anonymous Symbol]
    fsl_flexcan.o(.text.CAN1_DriverIRQHandler) refers to fsl_flexcan.o(.bss.s_flexcanHandle) for s_flexcanHandle
    fsl_flexcan.o(.text.CAN1_DriverIRQHandler) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.30
    fsl_flexcan.o(.text.CAN1_DriverIRQHandler) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.text.CAN1_DriverIRQHandler) refers to fsl_flexcan.o(.data.s_flexcanIsr) for s_flexcanIsr
    fsl_flexcan.o(.ARM.exidx.text.CAN1_DriverIRQHandler) refers to fsl_flexcan.o(.text.CAN1_DriverIRQHandler) for [Anonymous Symbol]
    fsl_flexcan.o(.text.CAN2_DriverIRQHandler) refers to fsl_flexcan.o(.bss.s_flexcanHandle) for s_flexcanHandle
    fsl_flexcan.o(.text.CAN2_DriverIRQHandler) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.31
    fsl_flexcan.o(.text.CAN2_DriverIRQHandler) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.text.CAN2_DriverIRQHandler) refers to fsl_flexcan.o(.data.s_flexcanIsr) for s_flexcanIsr
    fsl_flexcan.o(.ARM.exidx.text.CAN2_DriverIRQHandler) refers to fsl_flexcan.o(.text.CAN2_DriverIRQHandler) for [Anonymous Symbol]
    fsl_flexcan.o(.text.CAN3_DriverIRQHandler) refers to fsl_flexcan.o(.bss.s_flexcanHandle) for s_flexcanHandle
    fsl_flexcan.o(.text.CAN3_DriverIRQHandler) refers to fsl_flexcan.o(.rodata.str1.1) for .L.str.32
    fsl_flexcan.o(.text.CAN3_DriverIRQHandler) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_flexcan.o(.text.CAN3_DriverIRQHandler) refers to fsl_flexcan.o(.data.s_flexcanIsr) for s_flexcanIsr
    fsl_flexcan.o(.ARM.exidx.text.CAN3_DriverIRQHandler) refers to fsl_flexcan.o(.text.CAN3_DriverIRQHandler) for [Anonymous Symbol]
    fsl_flexcan.o(.ARM.exidx.text.CLOCK_ControlGate) refers to fsl_flexcan.o(.text.CLOCK_ControlGate) for [Anonymous Symbol]
    fsl_flexcan.o(.ARM.exidx.text.flexcan_memset) refers to fsl_flexcan.o(.text.flexcan_memset) for [Anonymous Symbol]
    fsl_flexcan.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to fsl_flexcan.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    fsl_flexcan.o(.data.s_flexcanIsr) refers to startup_mimxrt1176_cm7.o(.text) for DefaultISR
    fsl_clock.o(.text.CLOCK_InitArmPll) refers to fsl_clock.o(.rodata.str1.1) for .L.str
    fsl_clock.o(.text.CLOCK_InitArmPll) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.text.CLOCK_InitArmPll) refers to fsl_pmu.o(.text.PMU_StaticEnablePllLdo) for PMU_StaticEnablePllLdo
    fsl_clock.o(.text.CLOCK_InitArmPll) refers to fsl_common_arm.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_clock.o(.ARM.exidx.text.CLOCK_InitArmPll) refers to fsl_clock.o(.text.CLOCK_InitArmPll) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitArmPll) refers to fsl_clock.o(.text.CLOCK_DeinitArmPll) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_CalcPllSpreadSpectrum) refers to fsl_clock.o(.rodata.str1.1) for .L.str.2
    fsl_clock.o(.text.CLOCK_CalcPllSpreadSpectrum) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_CalcPllSpreadSpectrum) refers to fsl_clock.o(.text.CLOCK_CalcPllSpreadSpectrum) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_InitSysPll2) refers to fsl_pmu.o(.text.PMU_StaticEnablePllLdo) for PMU_StaticEnablePllLdo
    fsl_clock.o(.text.CLOCK_InitSysPll2) refers to fsl_common_arm.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_clock.o(.ARM.exidx.text.CLOCK_InitSysPll2) refers to fsl_clock.o(.text.CLOCK_InitSysPll2) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitSysPll2) refers to fsl_clock.o(.text.CLOCK_DeinitSysPll2) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_IsSysPll2PfdEnabled) refers to fsl_clock.o(.text.CLOCK_IsSysPll2PfdEnabled) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_InitPfd) refers to fsl_clock.o(.rodata.str1.1) for .L.str.3
    fsl_clock.o(.text.CLOCK_InitPfd) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_InitPfd) refers to fsl_clock.o(.text.CLOCK_InitPfd) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_DeinitPfd) refers to fsl_clock.o(.rodata.str1.1) for .L.str.5
    fsl_clock.o(.text.CLOCK_DeinitPfd) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitPfd) refers to fsl_clock.o(.text.CLOCK_DeinitPfd) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetPfdFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.6
    fsl_clock.o(.text.CLOCK_GetPfdFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetPfdFreq) refers to fsl_clock.o(.text.CLOCK_GetPfdFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_InitSysPll3) refers to fsl_pmu.o(.text.PMU_StaticEnablePllLdo) for PMU_StaticEnablePllLdo
    fsl_clock.o(.text.CLOCK_InitSysPll3) refers to fsl_common_arm.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_clock.o(.ARM.exidx.text.CLOCK_InitSysPll3) refers to fsl_clock.o(.text.CLOCK_InitSysPll3) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitSysPll3) refers to fsl_clock.o(.text.CLOCK_DeinitSysPll3) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_IsSysPll3PfdEnabled) refers to fsl_clock.o(.text.CLOCK_IsSysPll3PfdEnabled) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetPllBypass) refers to fsl_clock.o(.text.ANATOP_PllBypass) for ANATOP_PllBypass
    fsl_clock.o(.text.CLOCK_SetPllBypass) refers to fsl_clock.o(.rodata.str1.1) for .L.str.5
    fsl_clock.o(.text.CLOCK_SetPllBypass) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetPllBypass) refers to fsl_clock.o(.text.CLOCK_SetPllBypass) for [Anonymous Symbol]
    fsl_clock.o(.text.ANATOP_PllBypass) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.ARM.exidx.text.ANATOP_PllBypass) refers to fsl_clock.o(.text.ANATOP_PllBypass) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_InitAudioPllWithFreq) refers to fsl_clock.o(.text.CLOCK_CalcAvPllFreq) for CLOCK_CalcAvPllFreq
    fsl_clock.o(.text.CLOCK_InitAudioPllWithFreq) refers to fsl_clock.o(.text.CLOCK_CalcPllSpreadSpectrum) for CLOCK_CalcPllSpreadSpectrum
    fsl_clock.o(.text.CLOCK_InitAudioPllWithFreq) refers to fsl_clock.o(.text.CLOCK_InitAudioPll) for CLOCK_InitAudioPll
    fsl_clock.o(.ARM.exidx.text.CLOCK_InitAudioPllWithFreq) refers to fsl_clock.o(.text.CLOCK_InitAudioPllWithFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_CalcAvPllFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.9
    fsl_clock.o(.text.CLOCK_CalcAvPllFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_CalcAvPllFreq) refers to fsl_clock.o(.text.CLOCK_CalcAvPllFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_InitAudioPll) refers to fsl_pmu.o(.text.PMU_StaticEnablePllLdo) for PMU_StaticEnablePllLdo
    fsl_clock.o(.text.CLOCK_InitAudioPll) refers to fsl_clock.o(.text.ANATOP_PllBypass) for ANATOP_PllBypass
    fsl_clock.o(.text.CLOCK_InitAudioPll) refers to fsl_clock.o(.text.ANATOP_AudioPllSwEnClk) for ANATOP_AudioPllSwEnClk
    fsl_clock.o(.text.CLOCK_InitAudioPll) refers to fsl_clock.o(.text.ANATOP_AudioPllGate) for ANATOP_AudioPllGate
    fsl_clock.o(.text.CLOCK_InitAudioPll) refers to fsl_clock.o(.text.ANATOP_PllEnableClk) for ANATOP_PllEnableClk
    fsl_clock.o(.text.CLOCK_InitAudioPll) refers to fsl_clock.o(.text.ANATOP_PllSetPower) for ANATOP_PllSetPower
    fsl_clock.o(.text.CLOCK_InitAudioPll) refers to fsl_clock.o(.text.ANATOP_PllEnablePllReg) for ANATOP_PllEnablePllReg
    fsl_clock.o(.text.CLOCK_InitAudioPll) refers to fsl_clock.o(.text.ANATOP_PllConfigure) for ANATOP_PllConfigure
    fsl_clock.o(.text.CLOCK_InitAudioPll) refers to fsl_clock.o(.text.ANATOP_PllToggleHoldRingOff) for ANATOP_PllToggleHoldRingOff
    fsl_clock.o(.ARM.exidx.text.CLOCK_InitAudioPll) refers to fsl_clock.o(.text.CLOCK_InitAudioPll) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.ANATOP_AudioPllSwEnClk) refers to fsl_clock.o(.text.ANATOP_AudioPllSwEnClk) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.ANATOP_AudioPllGate) refers to fsl_clock.o(.text.ANATOP_AudioPllGate) for [Anonymous Symbol]
    fsl_clock.o(.text.ANATOP_PllEnableClk) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.ARM.exidx.text.ANATOP_PllEnableClk) refers to fsl_clock.o(.text.ANATOP_PllEnableClk) for [Anonymous Symbol]
    fsl_clock.o(.text.ANATOP_PllSetPower) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.ARM.exidx.text.ANATOP_PllSetPower) refers to fsl_clock.o(.text.ANATOP_PllSetPower) for [Anonymous Symbol]
    fsl_clock.o(.text.ANATOP_PllEnablePllReg) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.ARM.exidx.text.ANATOP_PllEnablePllReg) refers to fsl_clock.o(.text.ANATOP_PllEnablePllReg) for [Anonymous Symbol]
    fsl_clock.o(.text.ANATOP_PllConfigure) refers to fsl_clock.o(.text.ANATOP_PllSetPower) for ANATOP_PllSetPower
    fsl_clock.o(.text.ANATOP_PllConfigure) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.text.ANATOP_PllConfigure) refers to fsl_anatop_ai.o(.text.ANATOP_AI_WriteWithMaskShift) for ANATOP_AI_WriteWithMaskShift
    fsl_clock.o(.text.ANATOP_PllConfigure) refers to fsl_clock.o(.text.ANATOP_PllEnablePllReg) for ANATOP_PllEnablePllReg
    fsl_clock.o(.text.ANATOP_PllConfigure) refers to fsl_common_arm.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_clock.o(.ARM.exidx.text.ANATOP_PllConfigure) refers to fsl_clock.o(.text.ANATOP_PllConfigure) for [Anonymous Symbol]
    fsl_clock.o(.text.ANATOP_PllToggleHoldRingOff) refers to fsl_clock.o(.text.ANATOP_PllHoldRingOff) for ANATOP_PllHoldRingOff
    fsl_clock.o(.text.ANATOP_PllToggleHoldRingOff) refers to fsl_common_arm.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_clock.o(.ARM.exidx.text.ANATOP_PllToggleHoldRingOff) refers to fsl_clock.o(.text.ANATOP_PllToggleHoldRingOff) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_DeinitAudioPll) refers to fsl_clock.o(.text.ANATOP_AudioPllSwEnClk) for ANATOP_AudioPllSwEnClk
    fsl_clock.o(.text.CLOCK_DeinitAudioPll) refers to fsl_clock.o(.text.ANATOP_AudioPllGate) for ANATOP_AudioPllGate
    fsl_clock.o(.text.CLOCK_DeinitAudioPll) refers to fsl_clock.o(.text.ANATOP_PllEnableClk) for ANATOP_PllEnableClk
    fsl_clock.o(.text.CLOCK_DeinitAudioPll) refers to fsl_clock.o(.text.ANATOP_PllSetPower) for ANATOP_PllSetPower
    fsl_clock.o(.text.CLOCK_DeinitAudioPll) refers to fsl_clock.o(.text.ANATOP_PllEnableSs) for ANATOP_PllEnableSs
    fsl_clock.o(.text.CLOCK_DeinitAudioPll) refers to fsl_clock.o(.text.ANATOP_PllEnablePllReg) for ANATOP_PllEnablePllReg
    fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitAudioPll) refers to fsl_clock.o(.text.CLOCK_DeinitAudioPll) for [Anonymous Symbol]
    fsl_clock.o(.text.ANATOP_PllEnableSs) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.ARM.exidx.text.ANATOP_PllEnableSs) refers to fsl_clock.o(.text.ANATOP_PllEnableSs) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GPC_SetAudioPllOutputFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.9
    fsl_clock.o(.text.CLOCK_GPC_SetAudioPllOutputFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_GPC_SetAudioPllOutputFreq) refers to fsl_clock.o(.text.CLOCK_GPC_SetAudioPllOutputFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_CalcArmPllFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.9
    fsl_clock.o(.text.CLOCK_CalcArmPllFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_CalcArmPllFreq) refers to fsl_clock.o(.text.CLOCK_CalcArmPllFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_InitArmPllWithFreq) refers to fsl_clock.o(.text.CLOCK_CalcArmPllFreq) for CLOCK_CalcArmPllFreq
    fsl_clock.o(.text.CLOCK_InitArmPllWithFreq) refers to fsl_clock.o(.text.CLOCK_InitArmPll) for CLOCK_InitArmPll
    fsl_clock.o(.ARM.exidx.text.CLOCK_InitArmPllWithFreq) refers to fsl_clock.o(.text.CLOCK_InitArmPllWithFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_InitVideoPllWithFreq) refers to fsl_clock.o(.text.CLOCK_CalcAvPllFreq) for CLOCK_CalcAvPllFreq
    fsl_clock.o(.text.CLOCK_InitVideoPllWithFreq) refers to fsl_clock.o(.text.CLOCK_CalcPllSpreadSpectrum) for CLOCK_CalcPllSpreadSpectrum
    fsl_clock.o(.text.CLOCK_InitVideoPllWithFreq) refers to fsl_clock.o(.text.CLOCK_InitVideoPll) for CLOCK_InitVideoPll
    fsl_clock.o(.ARM.exidx.text.CLOCK_InitVideoPllWithFreq) refers to fsl_clock.o(.text.CLOCK_InitVideoPllWithFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_InitVideoPll) refers to fsl_pmu.o(.text.PMU_StaticEnablePllLdo) for PMU_StaticEnablePllLdo
    fsl_clock.o(.text.CLOCK_InitVideoPll) refers to fsl_clock.o(.text.ANATOP_PllBypass) for ANATOP_PllBypass
    fsl_clock.o(.text.CLOCK_InitVideoPll) refers to fsl_clock.o(.text.ANATOP_VideoPllSwEnClk) for ANATOP_VideoPllSwEnClk
    fsl_clock.o(.text.CLOCK_InitVideoPll) refers to fsl_clock.o(.text.ANATOP_VideoPllGate) for ANATOP_VideoPllGate
    fsl_clock.o(.text.CLOCK_InitVideoPll) refers to fsl_clock.o(.text.ANATOP_PllEnableClk) for ANATOP_PllEnableClk
    fsl_clock.o(.text.CLOCK_InitVideoPll) refers to fsl_clock.o(.text.ANATOP_PllSetPower) for ANATOP_PllSetPower
    fsl_clock.o(.text.CLOCK_InitVideoPll) refers to fsl_clock.o(.text.ANATOP_PllEnablePllReg) for ANATOP_PllEnablePllReg
    fsl_clock.o(.text.CLOCK_InitVideoPll) refers to fsl_clock.o(.text.ANATOP_PllConfigure) for ANATOP_PllConfigure
    fsl_clock.o(.text.CLOCK_InitVideoPll) refers to fsl_clock.o(.text.ANATOP_PllToggleHoldRingOff) for ANATOP_PllToggleHoldRingOff
    fsl_clock.o(.ARM.exidx.text.CLOCK_InitVideoPll) refers to fsl_clock.o(.text.CLOCK_InitVideoPll) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.ANATOP_VideoPllSwEnClk) refers to fsl_clock.o(.text.ANATOP_VideoPllSwEnClk) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.ANATOP_VideoPllGate) refers to fsl_clock.o(.text.ANATOP_VideoPllGate) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_DeinitVideoPll) refers to fsl_clock.o(.text.ANATOP_VideoPllSwEnClk) for ANATOP_VideoPllSwEnClk
    fsl_clock.o(.text.CLOCK_DeinitVideoPll) refers to fsl_clock.o(.text.ANATOP_VideoPllGate) for ANATOP_VideoPllGate
    fsl_clock.o(.text.CLOCK_DeinitVideoPll) refers to fsl_clock.o(.text.ANATOP_PllEnableClk) for ANATOP_PllEnableClk
    fsl_clock.o(.text.CLOCK_DeinitVideoPll) refers to fsl_clock.o(.text.ANATOP_PllSetPower) for ANATOP_PllSetPower
    fsl_clock.o(.text.CLOCK_DeinitVideoPll) refers to fsl_clock.o(.text.ANATOP_PllEnableSs) for ANATOP_PllEnableSs
    fsl_clock.o(.text.CLOCK_DeinitVideoPll) refers to fsl_clock.o(.text.ANATOP_PllEnablePllReg) for ANATOP_PllEnablePllReg
    fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitVideoPll) refers to fsl_clock.o(.text.CLOCK_DeinitVideoPll) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GPC_SetVideoPllOutputFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.9
    fsl_clock.o(.text.CLOCK_GPC_SetVideoPllOutputFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_GPC_SetVideoPllOutputFreq) refers to fsl_clock.o(.text.CLOCK_GPC_SetVideoPllOutputFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_InitSysPll1) refers to fsl_pmu.o(.text.PMU_StaticEnablePllLdo) for PMU_StaticEnablePllLdo
    fsl_clock.o(.text.CLOCK_InitSysPll1) refers to fsl_clock.o(.text.ANATOP_PllBypass) for ANATOP_PllBypass
    fsl_clock.o(.text.CLOCK_InitSysPll1) refers to fsl_clock.o(.text.ANATOP_SysPll1SwEnClk) for ANATOP_SysPll1SwEnClk
    fsl_clock.o(.text.CLOCK_InitSysPll1) refers to fsl_clock.o(.text.ANATOP_PllConfigure) for ANATOP_PllConfigure
    fsl_clock.o(.text.CLOCK_InitSysPll1) refers to fsl_clock.o(.text.ANATOP_PllToggleHoldRingOff) for ANATOP_PllToggleHoldRingOff
    fsl_clock.o(.text.CLOCK_InitSysPll1) refers to fsl_clock.o(.text.ANATOP_SysPll1WaitStable) for ANATOP_SysPll1WaitStable
    fsl_clock.o(.text.CLOCK_InitSysPll1) refers to fsl_clock.o(.text.ANATOP_PllEnableClk) for ANATOP_PllEnableClk
    fsl_clock.o(.text.CLOCK_InitSysPll1) refers to fsl_clock.o(.text.ANATOP_SysPll1Gate) for ANATOP_SysPll1Gate
    fsl_clock.o(.text.CLOCK_InitSysPll1) refers to fsl_clock.o(.text.ANATOP_SysPll1Div2En) for ANATOP_SysPll1Div2En
    fsl_clock.o(.text.CLOCK_InitSysPll1) refers to fsl_clock.o(.text.ANATOP_SysPll1Div5En) for ANATOP_SysPll1Div5En
    fsl_clock.o(.ARM.exidx.text.CLOCK_InitSysPll1) refers to fsl_clock.o(.text.CLOCK_InitSysPll1) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.ANATOP_SysPll1SwEnClk) refers to fsl_clock.o(.text.ANATOP_SysPll1SwEnClk) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.ANATOP_SysPll1WaitStable) refers to fsl_clock.o(.text.ANATOP_SysPll1WaitStable) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.ANATOP_SysPll1Gate) refers to fsl_clock.o(.text.ANATOP_SysPll1Gate) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.ANATOP_SysPll1Div2En) refers to fsl_clock.o(.text.ANATOP_SysPll1Div2En) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.ANATOP_SysPll1Div5En) refers to fsl_clock.o(.text.ANATOP_SysPll1Div5En) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_DeinitSysPll1) refers to fsl_clock.o(.text.ANATOP_SysPll1SwEnClk) for ANATOP_SysPll1SwEnClk
    fsl_clock.o(.text.CLOCK_DeinitSysPll1) refers to fsl_clock.o(.text.ANATOP_SysPll1Div2En) for ANATOP_SysPll1Div2En
    fsl_clock.o(.text.CLOCK_DeinitSysPll1) refers to fsl_clock.o(.text.ANATOP_SysPll1Div5En) for ANATOP_SysPll1Div5En
    fsl_clock.o(.text.CLOCK_DeinitSysPll1) refers to fsl_clock.o(.text.ANATOP_SysPll1Gate) for ANATOP_SysPll1Gate
    fsl_clock.o(.text.CLOCK_DeinitSysPll1) refers to fsl_clock.o(.text.ANATOP_PllEnableClk) for ANATOP_PllEnableClk
    fsl_clock.o(.text.CLOCK_DeinitSysPll1) refers to fsl_clock.o(.text.ANATOP_PllSetPower) for ANATOP_PllSetPower
    fsl_clock.o(.text.CLOCK_DeinitSysPll1) refers to fsl_clock.o(.text.ANATOP_PllEnableSs) for ANATOP_PllEnableSs
    fsl_clock.o(.text.CLOCK_DeinitSysPll1) refers to fsl_clock.o(.text.ANATOP_PllEnablePllReg) for ANATOP_PllEnablePllReg
    fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitSysPll1) refers to fsl_clock.o(.text.CLOCK_DeinitSysPll1) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GPC_SetSysPll1OutputFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.9
    fsl_clock.o(.text.CLOCK_GPC_SetSysPll1OutputFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_GPC_SetSysPll1OutputFreq) refers to fsl_clock.o(.text.CLOCK_GPC_SetSysPll1OutputFreq) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_EnableOsc24M) refers to fsl_clock.o(.text.CLOCK_OSC_EnableOsc24M) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_SetOsc24MWorkMode) refers to fsl_clock.o(.text.CLOCK_OSC_SetOsc24MWorkMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_SetOsc16MConfig) refers to fsl_clock.o(.text.CLOCK_OSC_SetOsc16MConfig) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MRefClkDiv) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MRefClkDiv) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_SetOscRc400MRefClkDiv) refers to fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MRefClkDiv) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MFastClkCount) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MFastClkCount) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_SetOscRc400MFastClkCount) refers to fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MFastClkCount) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MHysteresisValue) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MHysteresisValue) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_SetOscRc400MHysteresisValue) refers to fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MHysteresisValue) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_OSC_BypassOscRc400MTuneLogic) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_BypassOscRc400MTuneLogic) refers to fsl_clock.o(.text.CLOCK_OSC_BypassOscRc400MTuneLogic) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_OSC_EnableOscRc400MTuneLogic) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_EnableOscRc400MTuneLogic) refers to fsl_clock.o(.text.CLOCK_OSC_EnableOscRc400MTuneLogic) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_OSC_FreezeOscRc400MTuneValue) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_FreezeOscRc400MTuneValue) refers to fsl_clock.o(.text.CLOCK_OSC_FreezeOscRc400MTuneValue) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MTuneValue) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MTuneValue) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_SetOscRc400MTuneValue) refers to fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MTuneValue) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_OSC_Set1MHzOutputBehavior) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_clock.o(.text.CLOCK_OSC_Set1MHzOutputBehavior) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_Set1MHzOutputBehavior) refers to fsl_clock.o(.text.CLOCK_OSC_Set1MHzOutputBehavior) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_OSC_SetLocked1MHzCount) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_clock.o(.text.CLOCK_OSC_SetLocked1MHzCount) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_SetLocked1MHzCount) refers to fsl_clock.o(.text.CLOCK_OSC_SetLocked1MHzCount) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_OSC_CheckLocked1MHzErrorFlag) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_CheckLocked1MHzErrorFlag) refers to fsl_clock.o(.text.CLOCK_OSC_CheckLocked1MHzErrorFlag) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_OSC_ClearLocked1MHzErrorFlag) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_ClearLocked1MHzErrorFlag) refers to fsl_clock.o(.text.CLOCK_OSC_ClearLocked1MHzErrorFlag) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_OSC_GetCurrentOscRc400MFastClockCount) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_GetCurrentOscRc400MFastClockCount) refers to fsl_clock.o(.text.CLOCK_OSC_GetCurrentOscRc400MFastClockCount) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_OSC_GetCurrentOscRc400MTuneValue) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_GetCurrentOscRc400MTuneValue) refers to fsl_clock.o(.text.CLOCK_OSC_GetCurrentOscRc400MTuneValue) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetPllFreq) refers to fsl_clock.o(.text.CLOCK_GetAvPllFreq) for CLOCK_GetAvPllFreq
    fsl_clock.o(.text.CLOCK_GetPllFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.5
    fsl_clock.o(.text.CLOCK_GetPllFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetPllFreq) refers to fsl_clock.o(.text.CLOCK_GetPllFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetAvPllFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.14
    fsl_clock.o(.text.CLOCK_GetAvPllFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.text.CLOCK_GetAvPllFreq) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetAvPllFreq) refers to fsl_clock.o(.text.CLOCK_GetAvPllFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetPllFreq) for CLOCK_GetPllFreq
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetPfdFreq) for CLOCK_GetPfdFreq
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetM7Freq) for CLOCK_GetM7Freq
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.5
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetM7Freq) refers to fsl_clock.o(.text.CLOCK_GetRootClockFreq) for CLOCK_GetRootClockFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetM7Freq) refers to fsl_clock.o(.text.CLOCK_GetM7Freq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetGroupConfig) refers to fsl_clock.o(.rodata.str1.1) for .L.str.13
    fsl_clock.o(.text.CLOCK_SetGroupConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetGroupConfig) refers to fsl_clock.o(.text.CLOCK_SetGroupConfig) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_OSC_TrimOscRc400M) refers to fsl_common_arm.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_TrimOscRc400M) refers to fsl_clock.o(.text.CLOCK_OSC_TrimOscRc400M) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_EnableOscRc400M) refers to fsl_clock.o(.text.CLOCK_OSC_EnableOscRc400M) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetFreqFromObs) refers to fsl_clock.o(.text.CLOCK_GetFreqFromObs) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbhs0Clock) refers to fsl_clock.o(.text.CLOCK_EnableUsbhs0Clock) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_EnableUsbhs0PhyPllClock) refers to fsl_clock.o(.text.CLOCK_EnableClock) for CLOCK_EnableClock
    fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbhs0PhyPllClock) refers to fsl_clock.o(.text.CLOCK_EnableUsbhs0PhyPllClock) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_EnableClock) refers to fsl_clock.o(.text.CLOCK_ControlGate) for CLOCK_ControlGate
    fsl_clock.o(.ARM.exidx.text.CLOCK_EnableClock) refers to fsl_clock.o(.text.CLOCK_EnableClock) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_DisableUsbhs0PhyPllClock) refers to fsl_clock.o(.text.CLOCK_DisableUsbhs0PhyPllClock) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbhs1Clock) refers to fsl_clock.o(.text.CLOCK_EnableUsbhs1Clock) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_EnableUsbhs1PhyPllClock) refers to fsl_clock.o(.text.CLOCK_EnableClock) for CLOCK_EnableClock
    fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbhs1PhyPllClock) refers to fsl_clock.o(.text.CLOCK_EnableUsbhs1PhyPllClock) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_DisableUsbhs1PhyPllClock) refers to fsl_clock.o(.text.CLOCK_DisableUsbhs1PhyPllClock) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSCPLL_ControlBySetPointMode) refers to fsl_clock.o(.text.CLOCK_OSCPLL_ControlBySetPointMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_OSCPLL_ControlByCpuLowPowerMode) refers to fsl_clock.o(.text.CLOCK_OSCPLL_ControlByCpuLowPowerMode) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_ROOT_ControlBySetPointMode) refers to fsl_clock.o(.text.CLOCK_ROOT_ControlByUnassignedMode) for CLOCK_ROOT_ControlByUnassignedMode
    fsl_clock.o(.text.CLOCK_ROOT_ControlBySetPointMode) refers to fsl_clock.o(.text.CLOCK_ROOT_ConfigSetPoint) for CLOCK_ROOT_ConfigSetPoint
    fsl_clock.o(.text.CLOCK_ROOT_ControlBySetPointMode) refers to fsl_clock.o(.text.CLOCK_ROOT_EnableSetPointControl) for CLOCK_ROOT_EnableSetPointControl
    fsl_clock.o(.ARM.exidx.text.CLOCK_ROOT_ControlBySetPointMode) refers to fsl_clock.o(.text.CLOCK_ROOT_ControlBySetPointMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_ROOT_ControlByUnassignedMode) refers to fsl_clock.o(.text.CLOCK_ROOT_ControlByUnassignedMode) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_ROOT_ConfigSetPoint) refers to fsl_clock.o(.rodata.str1.1) for .L.str.9
    fsl_clock.o(.text.CLOCK_ROOT_ConfigSetPoint) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_ROOT_ConfigSetPoint) refers to fsl_clock.o(.text.CLOCK_ROOT_ConfigSetPoint) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_ROOT_EnableSetPointControl) refers to fsl_clock.o(.text.CLOCK_ROOT_EnableSetPointControl) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_LPCG_ControlBySetPointMode) refers to fsl_clock.o(.text.CLOCK_LPCG_ControlBySetPointMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_LPCG_ControlByCpuLowPowerMode) refers to fsl_clock.o(.text.CLOCK_LPCG_ControlByCpuLowPowerMode) for [Anonymous Symbol]
    fsl_clock.o(.text.ANATOP_PllHoldRingOff) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_clock.o(.ARM.exidx.text.ANATOP_PllHoldRingOff) refers to fsl_clock.o(.text.ANATOP_PllHoldRingOff) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetRootClockFreq) refers to fsl_clock.o(.text.CLOCK_GetRootClockMux) for CLOCK_GetRootClockMux
    fsl_clock.o(.text.CLOCK_GetRootClockFreq) refers to fsl_clock.o(.rodata.s_clockSourceName) for s_clockSourceName
    fsl_clock.o(.text.CLOCK_GetRootClockFreq) refers to fsl_clock.o(.text.CLOCK_GetFreq) for CLOCK_GetFreq
    fsl_clock.o(.text.CLOCK_GetRootClockFreq) refers to fsl_clock.o(.text.CLOCK_GetRootClockDiv) for CLOCK_GetRootClockDiv
    fsl_clock.o(.text.CLOCK_GetRootClockFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.15
    fsl_clock.o(.text.CLOCK_GetRootClockFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetRootClockFreq) refers to fsl_clock.o(.text.CLOCK_GetRootClockFreq) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetRootClockMux) refers to fsl_clock.o(.text.CLOCK_GetRootClockMux) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetRootClockDiv) refers to fsl_clock.o(.text.CLOCK_GetRootClockDiv) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_ControlGate) refers to fsl_clock.o(.text.CLOCK_ControlGate) for [Anonymous Symbol]
    fsl_common.o(.text.SDK_Malloc) refers to malloc2.o(i.__malloc$2region) for malloc
    fsl_common.o(.ARM.exidx.text.SDK_Malloc) refers to fsl_common.o(.text.SDK_Malloc) for [Anonymous Symbol]
    fsl_common.o(.text.SDK_Free) refers to malloc2.o(i.__free$2region) for free
    fsl_common.o(.ARM.exidx.text.SDK_Free) refers to fsl_common.o(.text.SDK_Free) for [Anonymous Symbol]
    fsl_common_arm.o(.text.MSDK_EnableCpuCycleCounter) refers to fsl_common_arm.o(.rodata.str1.1) for .L.str
    fsl_common_arm.o(.text.MSDK_EnableCpuCycleCounter) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_common_arm.o(.ARM.exidx.text.MSDK_EnableCpuCycleCounter) refers to fsl_common_arm.o(.text.MSDK_EnableCpuCycleCounter) for [Anonymous Symbol]
    fsl_common_arm.o(.ARM.exidx.text.MSDK_GetCpuCycleCount) refers to fsl_common_arm.o(.text.MSDK_GetCpuCycleCount) for [Anonymous Symbol]
    fsl_common_arm.o(.text.SDK_DelayAtLeastUs) refers to uldiv.o(.text) for __aeabi_uldivmod
    fsl_common_arm.o(.text.SDK_DelayAtLeastUs) refers to fsl_common_arm.o(.rodata.str1.1) for .L.str.2
    fsl_common_arm.o(.text.SDK_DelayAtLeastUs) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_common_arm.o(.text.SDK_DelayAtLeastUs) refers to fsl_common_arm.o(.text.DelayLoop) for DelayLoop
    fsl_common_arm.o(.ARM.exidx.text.SDK_DelayAtLeastUs) refers to fsl_common_arm.o(.text.SDK_DelayAtLeastUs) for [Anonymous Symbol]
    fsl_common_arm.o(.ARM.exidx.text.DelayLoop) refers to fsl_common_arm.o(.text.DelayLoop) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_GetInstance) refers to fsl_lpuart.o(.rodata.s_lpuartBases) for s_lpuartBases
    fsl_lpuart.o(.text.LPUART_GetInstance) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str
    fsl_lpuart.o(.text.LPUART_GetInstance) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_GetInstance) refers to fsl_lpuart.o(.text.LPUART_GetInstance) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferGetRxRingBufferLength) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.2
    fsl_lpuart.o(.text.LPUART_TransferGetRxRingBufferLength) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferGetRxRingBufferLength) refers to fsl_lpuart.o(.text.LPUART_TransferGetRxRingBufferLength) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_Init) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.3
    fsl_lpuart.o(.text.LPUART_Init) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.text.LPUART_Init) refers to fsl_lpuart.o(.text.LPUART_GetInstance) for LPUART_GetInstance
    fsl_lpuart.o(.text.LPUART_Init) refers to fsl_lpuart.o(.rodata.s_lpuartClock) for s_lpuartClock
    fsl_lpuart.o(.text.LPUART_Init) refers to fsl_lpuart.o(.text.CLOCK_EnableClock) for CLOCK_EnableClock
    fsl_lpuart.o(.text.LPUART_Init) refers to fsl_lpuart.o(.text.LPUART_SoftwareReset) for LPUART_SoftwareReset
    fsl_lpuart.o(.ARM.exidx.text.LPUART_Init) refers to fsl_lpuart.o(.text.LPUART_Init) for [Anonymous Symbol]
    fsl_lpuart.o(.text.CLOCK_EnableClock) refers to fsl_lpuart.o(.text.CLOCK_ControlGate) for CLOCK_ControlGate
    fsl_lpuart.o(.ARM.exidx.text.CLOCK_EnableClock) refers to fsl_lpuart.o(.text.CLOCK_EnableClock) for [Anonymous Symbol]
    fsl_lpuart.o(.ARM.exidx.text.LPUART_SoftwareReset) refers to fsl_lpuart.o(.text.LPUART_SoftwareReset) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_Deinit) refers to fsl_lpuart.o(.text.LPUART_GetInstance) for LPUART_GetInstance
    fsl_lpuart.o(.text.LPUART_Deinit) refers to fsl_lpuart.o(.rodata.s_lpuartClock) for s_lpuartClock
    fsl_lpuart.o(.text.LPUART_Deinit) refers to fsl_lpuart.o(.text.CLOCK_DisableClock) for CLOCK_DisableClock
    fsl_lpuart.o(.ARM.exidx.text.LPUART_Deinit) refers to fsl_lpuart.o(.text.LPUART_Deinit) for [Anonymous Symbol]
    fsl_lpuart.o(.text.CLOCK_DisableClock) refers to fsl_lpuart.o(.text.CLOCK_ControlGate) for CLOCK_ControlGate
    fsl_lpuart.o(.ARM.exidx.text.CLOCK_DisableClock) refers to fsl_lpuart.o(.text.CLOCK_DisableClock) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_GetDefaultConfig) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.3
    fsl_lpuart.o(.text.LPUART_GetDefaultConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.text.LPUART_GetDefaultConfig) refers to memset.o(.text) for memset
    fsl_lpuart.o(.ARM.exidx.text.LPUART_GetDefaultConfig) refers to fsl_lpuart.o(.text.LPUART_GetDefaultConfig) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_SetBaudRate) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.7
    fsl_lpuart.o(.text.LPUART_SetBaudRate) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_SetBaudRate) refers to fsl_lpuart.o(.text.LPUART_SetBaudRate) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_Enable9bitMode) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.8
    fsl_lpuart.o(.text.LPUART_Enable9bitMode) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_Enable9bitMode) refers to fsl_lpuart.o(.text.LPUART_Enable9bitMode) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_SendAddress) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.8
    fsl_lpuart.o(.text.LPUART_SendAddress) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_SendAddress) refers to fsl_lpuart.o(.text.LPUART_SendAddress) for [Anonymous Symbol]
    fsl_lpuart.o(.ARM.exidx.text.LPUART_EnableInterrupts) refers to fsl_lpuart.o(.text.LPUART_EnableInterrupts) for [Anonymous Symbol]
    fsl_lpuart.o(.ARM.exidx.text.LPUART_DisableInterrupts) refers to fsl_lpuart.o(.text.LPUART_DisableInterrupts) for [Anonymous Symbol]
    fsl_lpuart.o(.ARM.exidx.text.LPUART_GetEnabledInterrupts) refers to fsl_lpuart.o(.text.LPUART_GetEnabledInterrupts) for [Anonymous Symbol]
    fsl_lpuart.o(.ARM.exidx.text.LPUART_GetStatusFlags) refers to fsl_lpuart.o(.text.LPUART_GetStatusFlags) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_ClearStatusFlags) refers to fsl_lpuart.o(.text.LPUART_GetStatusFlags) for LPUART_GetStatusFlags
    fsl_lpuart.o(.ARM.exidx.text.LPUART_ClearStatusFlags) refers to fsl_lpuart.o(.text.LPUART_ClearStatusFlags) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_WriteBlocking) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.9
    fsl_lpuart.o(.text.LPUART_WriteBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_WriteBlocking) refers to fsl_lpuart.o(.text.LPUART_WriteBlocking) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_ReadBlocking) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.9
    fsl_lpuart.o(.text.LPUART_ReadBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.text.LPUART_ReadBlocking) refers to fsl_lpuart.o(.text.LPUART_GetStatusFlags) for LPUART_GetStatusFlags
    fsl_lpuart.o(.text.LPUART_ReadBlocking) refers to fsl_lpuart.o(.text.LPUART_ClearStatusFlags) for LPUART_ClearStatusFlags
    fsl_lpuart.o(.ARM.exidx.text.LPUART_ReadBlocking) refers to fsl_lpuart.o(.text.LPUART_ReadBlocking) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferCreateHandle) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.2
    fsl_lpuart.o(.text.LPUART_TransferCreateHandle) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.text.LPUART_TransferCreateHandle) refers to memset.o(.text) for memset
    fsl_lpuart.o(.text.LPUART_TransferCreateHandle) refers to fsl_lpuart.o(.text.LPUART_GetInstance) for LPUART_GetInstance
    fsl_lpuart.o(.text.LPUART_TransferCreateHandle) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.text.LPUART_TransferCreateHandle) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART_TransferCreateHandle) refers to fsl_lpuart.o(.text.LPUART_TransferHandleIRQ) for LPUART_TransferHandleIRQ
    fsl_lpuart.o(.text.LPUART_TransferCreateHandle) refers to fsl_lpuart.o(.rodata.s_lpuartIRQ) for s_lpuartIRQ
    fsl_lpuart.o(.text.LPUART_TransferCreateHandle) refers to fsl_lpuart.o(.text.EnableIRQ) for EnableIRQ
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferCreateHandle) refers to fsl_lpuart.o(.text.LPUART_TransferCreateHandle) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferHandleIRQ) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.16
    fsl_lpuart.o(.text.LPUART_TransferHandleIRQ) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.text.LPUART_TransferHandleIRQ) refers to fsl_lpuart.o(.text.LPUART_GetStatusFlags) for LPUART_GetStatusFlags
    fsl_lpuart.o(.text.LPUART_TransferHandleIRQ) refers to fsl_lpuart.o(.text.LPUART_GetEnabledInterrupts) for LPUART_GetEnabledInterrupts
    fsl_lpuart.o(.text.LPUART_TransferHandleIRQ) refers to fsl_lpuart.o(.text.LPUART_TransferHandleIDLEReady) for LPUART_TransferHandleIDLEReady
    fsl_lpuart.o(.text.LPUART_TransferHandleIRQ) refers to fsl_lpuart.o(.text.LPUART_TransferHandleReceiveDataFull) for LPUART_TransferHandleReceiveDataFull
    fsl_lpuart.o(.text.LPUART_TransferHandleIRQ) refers to fsl_lpuart.o(.text.LPUART_TransferHandleSendDataEmpty) for LPUART_TransferHandleSendDataEmpty
    fsl_lpuart.o(.text.LPUART_TransferHandleIRQ) refers to fsl_lpuart.o(.text.LPUART_TransferHandleTransmissionComplete) for LPUART_TransferHandleTransmissionComplete
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferHandleIRQ) refers to fsl_lpuart.o(.text.LPUART_TransferHandleIRQ) for [Anonymous Symbol]
    fsl_lpuart.o(.text.EnableIRQ) refers to fsl_lpuart.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    fsl_lpuart.o(.ARM.exidx.text.EnableIRQ) refers to fsl_lpuart.o(.text.EnableIRQ) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferStartRingBuffer) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.2
    fsl_lpuart.o(.text.LPUART_TransferStartRingBuffer) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.text.LPUART_TransferStartRingBuffer) refers to fsl_lpuart.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_lpuart.o(.text.LPUART_TransferStartRingBuffer) refers to fsl_lpuart.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferStartRingBuffer) refers to fsl_lpuart.o(.text.LPUART_TransferStartRingBuffer) for [Anonymous Symbol]
    fsl_lpuart.o(.ARM.exidx.text.DisableGlobalIRQ) refers to fsl_lpuart.o(.text.DisableGlobalIRQ) for [Anonymous Symbol]
    fsl_lpuart.o(.ARM.exidx.text.EnableGlobalIRQ) refers to fsl_lpuart.o(.text.EnableGlobalIRQ) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferStopRingBuffer) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.2
    fsl_lpuart.o(.text.LPUART_TransferStopRingBuffer) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.text.LPUART_TransferStopRingBuffer) refers to fsl_lpuart.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_lpuart.o(.text.LPUART_TransferStopRingBuffer) refers to fsl_lpuart.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferStopRingBuffer) refers to fsl_lpuart.o(.text.LPUART_TransferStopRingBuffer) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferSendNonBlocking) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.2
    fsl_lpuart.o(.text.LPUART_TransferSendNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.text.LPUART_TransferSendNonBlocking) refers to fsl_lpuart.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_lpuart.o(.text.LPUART_TransferSendNonBlocking) refers to fsl_lpuart.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferSendNonBlocking) refers to fsl_lpuart.o(.text.LPUART_TransferSendNonBlocking) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferAbortSend) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.2
    fsl_lpuart.o(.text.LPUART_TransferAbortSend) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.text.LPUART_TransferAbortSend) refers to fsl_lpuart.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_lpuart.o(.text.LPUART_TransferAbortSend) refers to fsl_lpuart.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferAbortSend) refers to fsl_lpuart.o(.text.LPUART_TransferAbortSend) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferGetSendCount) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.2
    fsl_lpuart.o(.text.LPUART_TransferGetSendCount) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferGetSendCount) refers to fsl_lpuart.o(.text.LPUART_TransferGetSendCount) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferReceiveNonBlocking) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.2
    fsl_lpuart.o(.text.LPUART_TransferReceiveNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.text.LPUART_TransferReceiveNonBlocking) refers to fsl_lpuart.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_lpuart.o(.text.LPUART_TransferReceiveNonBlocking) refers to fsl_lpuart.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_lpuart.o(.text.LPUART_TransferReceiveNonBlocking) refers to fsl_lpuart.o(.text.LPUART_TransferGetRxRingBufferLength) for LPUART_TransferGetRxRingBufferLength
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferReceiveNonBlocking) refers to fsl_lpuart.o(.text.LPUART_TransferReceiveNonBlocking) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferAbortReceive) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.2
    fsl_lpuart.o(.text.LPUART_TransferAbortReceive) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.text.LPUART_TransferAbortReceive) refers to fsl_lpuart.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_lpuart.o(.text.LPUART_TransferAbortReceive) refers to fsl_lpuart.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferAbortReceive) refers to fsl_lpuart.o(.text.LPUART_TransferAbortReceive) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferGetReceiveCount) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.2
    fsl_lpuart.o(.text.LPUART_TransferGetReceiveCount) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferGetReceiveCount) refers to fsl_lpuart.o(.text.LPUART_TransferGetReceiveCount) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferHandleIDLEReady) refers to fsl_lpuart.o(.text.LPUART_ReadNonBlocking) for LPUART_ReadNonBlocking
    fsl_lpuart.o(.text.LPUART_TransferHandleIDLEReady) refers to fsl_lpuart.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_lpuart.o(.text.LPUART_TransferHandleIDLEReady) refers to fsl_lpuart.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferHandleIDLEReady) refers to fsl_lpuart.o(.text.LPUART_TransferHandleIDLEReady) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferHandleReceiveDataFull) refers to fsl_lpuart.o(.text.LPUART_ReadNonBlocking) for LPUART_ReadNonBlocking
    fsl_lpuart.o(.text.LPUART_TransferHandleReceiveDataFull) refers to fsl_lpuart.o(.text.LPUART_TransferIsRxRingBufferFull) for LPUART_TransferIsRxRingBufferFull
    fsl_lpuart.o(.text.LPUART_TransferHandleReceiveDataFull) refers to fsl_lpuart.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_lpuart.o(.text.LPUART_TransferHandleReceiveDataFull) refers to fsl_lpuart.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferHandleReceiveDataFull) refers to fsl_lpuart.o(.text.LPUART_TransferHandleReceiveDataFull) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferHandleSendDataEmpty) refers to fsl_lpuart.o(.text.LPUART_WriteNonBlocking) for LPUART_WriteNonBlocking
    fsl_lpuart.o(.text.LPUART_TransferHandleSendDataEmpty) refers to fsl_lpuart.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_lpuart.o(.text.LPUART_TransferHandleSendDataEmpty) refers to fsl_lpuart.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferHandleSendDataEmpty) refers to fsl_lpuart.o(.text.LPUART_TransferHandleSendDataEmpty) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferHandleTransmissionComplete) refers to fsl_lpuart.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_lpuart.o(.text.LPUART_TransferHandleTransmissionComplete) refers to fsl_lpuart.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferHandleTransmissionComplete) refers to fsl_lpuart.o(.text.LPUART_TransferHandleTransmissionComplete) for [Anonymous Symbol]
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferHandleErrorIRQ) refers to fsl_lpuart.o(.text.LPUART_TransferHandleErrorIRQ) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART1_DriverIRQHandler) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART1_DriverIRQHandler) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.ARM.exidx.text.LPUART1_DriverIRQHandler) refers to fsl_lpuart.o(.text.LPUART1_DriverIRQHandler) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART2_DriverIRQHandler) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART2_DriverIRQHandler) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.ARM.exidx.text.LPUART2_DriverIRQHandler) refers to fsl_lpuart.o(.text.LPUART2_DriverIRQHandler) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART3_DriverIRQHandler) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART3_DriverIRQHandler) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.ARM.exidx.text.LPUART3_DriverIRQHandler) refers to fsl_lpuart.o(.text.LPUART3_DriverIRQHandler) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART4_DriverIRQHandler) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART4_DriverIRQHandler) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.ARM.exidx.text.LPUART4_DriverIRQHandler) refers to fsl_lpuart.o(.text.LPUART4_DriverIRQHandler) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART5_DriverIRQHandler) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART5_DriverIRQHandler) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.ARM.exidx.text.LPUART5_DriverIRQHandler) refers to fsl_lpuart.o(.text.LPUART5_DriverIRQHandler) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART6_DriverIRQHandler) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART6_DriverIRQHandler) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.ARM.exidx.text.LPUART6_DriverIRQHandler) refers to fsl_lpuart.o(.text.LPUART6_DriverIRQHandler) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART7_DriverIRQHandler) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART7_DriverIRQHandler) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.ARM.exidx.text.LPUART7_DriverIRQHandler) refers to fsl_lpuart.o(.text.LPUART7_DriverIRQHandler) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART8_DriverIRQHandler) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART8_DriverIRQHandler) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.ARM.exidx.text.LPUART8_DriverIRQHandler) refers to fsl_lpuart.o(.text.LPUART8_DriverIRQHandler) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART9_DriverIRQHandler) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART9_DriverIRQHandler) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.ARM.exidx.text.LPUART9_DriverIRQHandler) refers to fsl_lpuart.o(.text.LPUART9_DriverIRQHandler) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART10_DriverIRQHandler) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART10_DriverIRQHandler) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.ARM.exidx.text.LPUART10_DriverIRQHandler) refers to fsl_lpuart.o(.text.LPUART10_DriverIRQHandler) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART11_DriverIRQHandler) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART11_DriverIRQHandler) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.ARM.exidx.text.LPUART11_DriverIRQHandler) refers to fsl_lpuart.o(.text.LPUART11_DriverIRQHandler) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART12_DriverIRQHandler) refers to fsl_lpuart.o(.data.s_lpuartIsr) for s_lpuartIsr
    fsl_lpuart.o(.text.LPUART12_DriverIRQHandler) refers to fsl_lpuart.o(.bss.s_lpuartHandle) for s_lpuartHandle
    fsl_lpuart.o(.ARM.exidx.text.LPUART12_DriverIRQHandler) refers to fsl_lpuart.o(.text.LPUART12_DriverIRQHandler) for [Anonymous Symbol]
    fsl_lpuart.o(.ARM.exidx.text.CLOCK_ControlGate) refers to fsl_lpuart.o(.text.CLOCK_ControlGate) for [Anonymous Symbol]
    fsl_lpuart.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to fsl_lpuart.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_ReadNonBlocking) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.9
    fsl_lpuart.o(.text.LPUART_ReadNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_ReadNonBlocking) refers to fsl_lpuart.o(.text.LPUART_ReadNonBlocking) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_TransferIsRxRingBufferFull) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.2
    fsl_lpuart.o(.text.LPUART_TransferIsRxRingBufferFull) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.text.LPUART_TransferIsRxRingBufferFull) refers to fsl_lpuart.o(.text.LPUART_TransferGetRxRingBufferLength) for LPUART_TransferGetRxRingBufferLength
    fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferIsRxRingBufferFull) refers to fsl_lpuart.o(.text.LPUART_TransferIsRxRingBufferFull) for [Anonymous Symbol]
    fsl_lpuart.o(.text.LPUART_WriteNonBlocking) refers to fsl_lpuart.o(.rodata.str1.1) for .L.str.9
    fsl_lpuart.o(.text.LPUART_WriteNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_lpuart.o(.ARM.exidx.text.LPUART_WriteNonBlocking) refers to fsl_lpuart.o(.text.LPUART_WriteNonBlocking) for [Anonymous Symbol]
    fsl_lpuart.o(.data.s_lpuartIsr) refers to startup_mimxrt1176_cm7.o(.text) for DefaultISR
    fsl_gpio.o(.text.GPIO_PinInit) refers to fsl_gpio.o(.text.GPIO_GetInstance) for GPIO_GetInstance
    fsl_gpio.o(.text.GPIO_PinInit) refers to fsl_gpio.o(.rodata.s_gpioClock) for s_gpioClock
    fsl_gpio.o(.text.GPIO_PinInit) refers to fsl_gpio.o(.text.CLOCK_EnableClock) for CLOCK_EnableClock
    fsl_gpio.o(.text.GPIO_PinInit) refers to fsl_gpio.o(.text.GPIO_PinWrite) for GPIO_PinWrite
    fsl_gpio.o(.text.GPIO_PinInit) refers to fsl_gpio.o(.text.GPIO_SetPinInterruptConfig) for GPIO_SetPinInterruptConfig
    fsl_gpio.o(.ARM.exidx.text.GPIO_PinInit) refers to fsl_gpio.o(.text.GPIO_PinInit) for [Anonymous Symbol]
    fsl_gpio.o(.text.GPIO_GetInstance) refers to fsl_gpio.o(.rodata.s_gpioBases) for s_gpioBases
    fsl_gpio.o(.text.GPIO_GetInstance) refers to fsl_gpio.o(.rodata.str1.1) for .L.str.2
    fsl_gpio.o(.text.GPIO_GetInstance) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_gpio.o(.ARM.exidx.text.GPIO_GetInstance) refers to fsl_gpio.o(.text.GPIO_GetInstance) for [Anonymous Symbol]
    fsl_gpio.o(.text.CLOCK_EnableClock) refers to fsl_gpio.o(.text.CLOCK_ControlGate) for CLOCK_ControlGate
    fsl_gpio.o(.ARM.exidx.text.CLOCK_EnableClock) refers to fsl_gpio.o(.text.CLOCK_EnableClock) for [Anonymous Symbol]
    fsl_gpio.o(.text.GPIO_PinWrite) refers to fsl_gpio.o(.rodata.str1.1) for .L.str
    fsl_gpio.o(.text.GPIO_PinWrite) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_gpio.o(.ARM.exidx.text.GPIO_PinWrite) refers to fsl_gpio.o(.text.GPIO_PinWrite) for [Anonymous Symbol]
    fsl_gpio.o(.text.GPIO_SetPinInterruptConfig) refers to fsl_gpio.o(.text.GPIO_PinSetInterruptConfig) for GPIO_PinSetInterruptConfig
    fsl_gpio.o(.ARM.exidx.text.GPIO_SetPinInterruptConfig) refers to fsl_gpio.o(.text.GPIO_SetPinInterruptConfig) for [Anonymous Symbol]
    fsl_gpio.o(.ARM.exidx.text.GPIO_PinSetInterruptConfig) refers to fsl_gpio.o(.text.GPIO_PinSetInterruptConfig) for [Anonymous Symbol]
    fsl_gpio.o(.ARM.exidx.text.CLOCK_ControlGate) refers to fsl_gpio.o(.text.CLOCK_ControlGate) for [Anonymous Symbol]
    fsl_pmu.o(.ARM.exidx.text.PMU_SetPllLdoControlMode) refers to fsl_pmu.o(.text.PMU_SetPllLdoControlMode) for [Anonymous Symbol]
    fsl_pmu.o(.ARM.exidx.text.PMU_SwitchPllLdoToGPCMode) refers to fsl_pmu.o(.text.PMU_SwitchPllLdoToGPCMode) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_StaticEnablePllLdo) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_pmu.o(.text.PMU_StaticEnablePllLdo) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_pmu.o(.text.PMU_StaticEnablePllLdo) refers to fsl_common_arm.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_pmu.o(.ARM.exidx.text.PMU_StaticEnablePllLdo) refers to fsl_pmu.o(.text.PMU_StaticEnablePllLdo) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_StaticDisablePllLdo) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_pmu.o(.ARM.exidx.text.PMU_StaticDisablePllLdo) refers to fsl_pmu.o(.text.PMU_StaticDisablePllLdo) for [Anonymous Symbol]
    fsl_pmu.o(.ARM.exidx.text.PMU_SetLpsrAnaLdoControlMode) refers to fsl_pmu.o(.text.PMU_SetLpsrAnaLdoControlMode) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_StaticEnableLpsrAnaLdoBypassMode) refers to fsl_common_arm.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_pmu.o(.ARM.exidx.text.PMU_StaticEnableLpsrAnaLdoBypassMode) refers to fsl_pmu.o(.text.PMU_StaticEnableLpsrAnaLdoBypassMode) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_StaticGetLpsrAnaLdoDefaultConfig) refers to fsl_pmu.o(.rodata.str1.1) for .L.str
    fsl_pmu.o(.text.PMU_StaticGetLpsrAnaLdoDefaultConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.text.PMU_StaticGetLpsrAnaLdoDefaultConfig) refers to memset.o(.text) for memset
    fsl_pmu.o(.ARM.exidx.text.PMU_StaticGetLpsrAnaLdoDefaultConfig) refers to fsl_pmu.o(.text.PMU_StaticGetLpsrAnaLdoDefaultConfig) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_StaticLpsrAnaLdoInit) refers to fsl_pmu.o(.rodata.str1.1) for .L.str
    fsl_pmu.o(.text.PMU_StaticLpsrAnaLdoInit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.ARM.exidx.text.PMU_StaticLpsrAnaLdoInit) refers to fsl_pmu.o(.text.PMU_StaticLpsrAnaLdoInit) for [Anonymous Symbol]
    fsl_pmu.o(.ARM.exidx.text.PMU_StaticLpsrAnaLdoDeinit) refers to fsl_pmu.o(.text.PMU_StaticLpsrAnaLdoDeinit) for [Anonymous Symbol]
    fsl_pmu.o(.ARM.exidx.text.PMU_SetLpsrDigLdoControlMode) refers to fsl_pmu.o(.text.PMU_SetLpsrDigLdoControlMode) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_StaticEnableLpsrDigLdoBypassMode) refers to fsl_common_arm.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_pmu.o(.ARM.exidx.text.PMU_StaticEnableLpsrDigLdoBypassMode) refers to fsl_pmu.o(.text.PMU_StaticEnableLpsrDigLdoBypassMode) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_StaticGetLpsrDigLdoDefaultConfig) refers to fsl_pmu.o(.rodata.str1.1) for .L.str
    fsl_pmu.o(.text.PMU_StaticGetLpsrDigLdoDefaultConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.text.PMU_StaticGetLpsrDigLdoDefaultConfig) refers to memset.o(.text) for memset
    fsl_pmu.o(.ARM.exidx.text.PMU_StaticGetLpsrDigLdoDefaultConfig) refers to fsl_pmu.o(.text.PMU_StaticGetLpsrDigLdoDefaultConfig) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_StaticLpsrDigLdoInit) refers to fsl_pmu.o(.rodata.str1.1) for .L.str
    fsl_pmu.o(.text.PMU_StaticLpsrDigLdoInit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.text.PMU_StaticLpsrDigLdoInit) refers to fsl_common_arm.o(.text.SDK_DelayAtLeastUs) for SDK_DelayAtLeastUs
    fsl_pmu.o(.ARM.exidx.text.PMU_StaticLpsrDigLdoInit) refers to fsl_pmu.o(.text.PMU_StaticLpsrDigLdoInit) for [Anonymous Symbol]
    fsl_pmu.o(.ARM.exidx.text.PMU_StaticLpsrDigLdoDeinit) refers to fsl_pmu.o(.text.PMU_StaticLpsrDigLdoDeinit) for [Anonymous Symbol]
    fsl_pmu.o(.ARM.exidx.text.PMU_GPCSetLpsrDigLdoTargetVoltage) refers to fsl_pmu.o(.text.PMU_GPCSetLpsrDigLdoTargetVoltage) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_GetSnvsDigLdoDefaultConfig) refers to fsl_pmu.o(.rodata.str1.1) for .L.str
    fsl_pmu.o(.text.PMU_GetSnvsDigLdoDefaultConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.text.PMU_GetSnvsDigLdoDefaultConfig) refers to memset.o(.text) for memset
    fsl_pmu.o(.ARM.exidx.text.PMU_GetSnvsDigLdoDefaultConfig) refers to fsl_pmu.o(.text.PMU_GetSnvsDigLdoDefaultConfig) for [Anonymous Symbol]
    fsl_pmu.o(.ARM.exidx.text.PMU_SnvsDigLdoInit) refers to fsl_pmu.o(.text.PMU_SnvsDigLdoInit) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_GPCEnableLdo) refers to fsl_pmu.o(.rodata.str1.1) for .L.str.2
    fsl_pmu.o(.text.PMU_GPCEnableLdo) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.ARM.exidx.text.PMU_GPCEnableLdo) refers to fsl_pmu.o(.text.PMU_GPCEnableLdo) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_GPCSetLdoOperateMode) refers to fsl_pmu.o(.rodata.str1.1) for .L.str.3
    fsl_pmu.o(.text.PMU_GPCSetLdoOperateMode) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.ARM.exidx.text.PMU_GPCSetLdoOperateMode) refers to fsl_pmu.o(.text.PMU_GPCSetLdoOperateMode) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_GPCEnableLdoTrackingMode) refers to fsl_pmu.o(.rodata.str1.1) for .L.str.3
    fsl_pmu.o(.text.PMU_GPCEnableLdoTrackingMode) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.ARM.exidx.text.PMU_GPCEnableLdoTrackingMode) refers to fsl_pmu.o(.text.PMU_GPCEnableLdoTrackingMode) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_GPCEnableLdoBypassMode) refers to fsl_pmu.o(.rodata.str1.1) for .L.str.3
    fsl_pmu.o(.text.PMU_GPCEnableLdoBypassMode) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.ARM.exidx.text.PMU_GPCEnableLdoBypassMode) refers to fsl_pmu.o(.text.PMU_GPCEnableLdoBypassMode) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_GPCEnableLdoStandbyMode) refers to fsl_pmu.o(.rodata.str1.1) for .L.str.2
    fsl_pmu.o(.text.PMU_GPCEnableLdoStandbyMode) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.ARM.exidx.text.PMU_GPCEnableLdoStandbyMode) refers to fsl_pmu.o(.text.PMU_GPCEnableLdoStandbyMode) for [Anonymous Symbol]
    fsl_pmu.o(.ARM.exidx.text.PMU_SetBandgapControlMode) refers to fsl_pmu.o(.text.PMU_SetBandgapControlMode) for [Anonymous Symbol]
    fsl_pmu.o(.ARM.exidx.text.PMU_SwitchBandgapToGPCMode) refers to fsl_pmu.o(.text.PMU_SwitchBandgapToGPCMode) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_DisableBandgapSelfBiasAfterPowerUp) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_pmu.o(.text.PMU_DisableBandgapSelfBiasAfterPowerUp) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_pmu.o(.ARM.exidx.text.PMU_DisableBandgapSelfBiasAfterPowerUp) refers to fsl_pmu.o(.text.PMU_DisableBandgapSelfBiasAfterPowerUp) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_EnableBandgapSelfBiasBeforePowerDown) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_pmu.o(.text.PMU_EnableBandgapSelfBiasBeforePowerDown) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_pmu.o(.ARM.exidx.text.PMU_EnableBandgapSelfBiasBeforePowerDown) refers to fsl_pmu.o(.text.PMU_EnableBandgapSelfBiasBeforePowerDown) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_StaticBandgapInit) refers to fsl_pmu.o(.rodata.str1.1) for .L.str
    fsl_pmu.o(.text.PMU_StaticBandgapInit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.text.PMU_StaticBandgapInit) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_pmu.o(.text.PMU_StaticBandgapInit) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_pmu.o(.ARM.exidx.text.PMU_StaticBandgapInit) refers to fsl_pmu.o(.text.PMU_StaticBandgapInit) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_WellBiasInit) refers to fsl_pmu.o(.rodata.str1.1) for .L.str
    fsl_pmu.o(.text.PMU_WellBiasInit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.ARM.exidx.text.PMU_WellBiasInit) refers to fsl_pmu.o(.text.PMU_WellBiasInit) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_GetWellBiasDefaultConfig) refers to fsl_pmu.o(.rodata.str1.1) for .L.str
    fsl_pmu.o(.text.PMU_GetWellBiasDefaultConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.text.PMU_GetWellBiasDefaultConfig) refers to memset.o(.text) for memset
    fsl_pmu.o(.ARM.exidx.text.PMU_GetWellBiasDefaultConfig) refers to fsl_pmu.o(.text.PMU_GetWellBiasDefaultConfig) for [Anonymous Symbol]
    fsl_pmu.o(.ARM.exidx.text.PMU_SetBodyBiasControlMode) refers to fsl_pmu.o(.text.PMU_SetBodyBiasControlMode) for [Anonymous Symbol]
    fsl_pmu.o(.ARM.exidx.text.PMU_EnableBodyBias) refers to fsl_pmu.o(.text.PMU_EnableBodyBias) for [Anonymous Symbol]
    fsl_pmu.o(.ARM.exidx.text.PMU_GPCEnableBodyBias) refers to fsl_pmu.o(.text.PMU_GPCEnableBodyBias) for [Anonymous Symbol]
    fsl_pmu.o(.ARM.exidx.text.PMU_GPCEnableBodyBiasStandbyMode) refers to fsl_pmu.o(.text.PMU_GPCEnableBodyBiasStandbyMode) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_GPCGetBodyBiasDefaultConfig) refers to fsl_pmu.o(.rodata.str1.1) for .L.str
    fsl_pmu.o(.text.PMU_GPCGetBodyBiasDefaultConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.ARM.exidx.text.PMU_GPCGetBodyBiasDefaultConfig) refers to fsl_pmu.o(.text.PMU_GPCGetBodyBiasDefaultConfig) for [Anonymous Symbol]
    fsl_pmu.o(.text.PMU_GPCSetBodyBiasConfig) refers to fsl_pmu.o(.rodata.str1.1) for .L.str
    fsl_pmu.o(.text.PMU_GPCSetBodyBiasConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_pmu.o(.ARM.exidx.text.PMU_GPCSetBodyBiasConfig) refers to fsl_pmu.o(.text.PMU_GPCSetBodyBiasConfig) for [Anonymous Symbol]
    fsl_dcdc.o(.text.DCDC_Init) refers to fsl_dcdc.o(.text.DCDC_GetInstance) for DCDC_GetInstance
    fsl_dcdc.o(.text.DCDC_Init) refers to fsl_dcdc.o(.rodata.s_dcdcClocks) for s_dcdcClocks
    fsl_dcdc.o(.text.DCDC_Init) refers to fsl_dcdc.o(.text.CLOCK_EnableClock) for CLOCK_EnableClock
    fsl_dcdc.o(.ARM.exidx.text.DCDC_Init) refers to fsl_dcdc.o(.text.DCDC_Init) for [Anonymous Symbol]
    fsl_dcdc.o(.text.CLOCK_EnableClock) refers to fsl_dcdc.o(.text.CLOCK_ControlGate) for CLOCK_ControlGate
    fsl_dcdc.o(.ARM.exidx.text.CLOCK_EnableClock) refers to fsl_dcdc.o(.text.CLOCK_EnableClock) for [Anonymous Symbol]
    fsl_dcdc.o(.text.DCDC_GetInstance) refers to fsl_dcdc.o(.rodata.s_dcdcBases) for s_dcdcBases
    fsl_dcdc.o(.text.DCDC_GetInstance) refers to fsl_dcdc.o(.rodata.str1.1) for .L.str.4
    fsl_dcdc.o(.text.DCDC_GetInstance) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dcdc.o(.ARM.exidx.text.DCDC_GetInstance) refers to fsl_dcdc.o(.text.DCDC_GetInstance) for [Anonymous Symbol]
    fsl_dcdc.o(.text.DCDC_Deinit) refers to fsl_dcdc.o(.text.DCDC_GetInstance) for DCDC_GetInstance
    fsl_dcdc.o(.text.DCDC_Deinit) refers to fsl_dcdc.o(.rodata.s_dcdcClocks) for s_dcdcClocks
    fsl_dcdc.o(.text.DCDC_Deinit) refers to fsl_dcdc.o(.text.CLOCK_DisableClock) for CLOCK_DisableClock
    fsl_dcdc.o(.ARM.exidx.text.DCDC_Deinit) refers to fsl_dcdc.o(.text.DCDC_Deinit) for [Anonymous Symbol]
    fsl_dcdc.o(.text.CLOCK_DisableClock) refers to fsl_dcdc.o(.text.CLOCK_ControlGate) for CLOCK_ControlGate
    fsl_dcdc.o(.ARM.exidx.text.CLOCK_DisableClock) refers to fsl_dcdc.o(.text.CLOCK_DisableClock) for [Anonymous Symbol]
    fsl_dcdc.o(.text.DCDC_GetDefaultConfig) refers to fsl_dcdc.o(.rodata.str1.1) for .L.str
    fsl_dcdc.o(.text.DCDC_GetDefaultConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dcdc.o(.text.DCDC_GetDefaultConfig) refers to memset.o(.text) for memset
    fsl_dcdc.o(.ARM.exidx.text.DCDC_GetDefaultConfig) refers to fsl_dcdc.o(.text.DCDC_GetDefaultConfig) for [Anonymous Symbol]
    fsl_dcdc.o(.text.DCDC_GetDefaultDetectionConfig) refers to fsl_dcdc.o(.rodata.str1.1) for .L.str
    fsl_dcdc.o(.text.DCDC_GetDefaultDetectionConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dcdc.o(.text.DCDC_GetDefaultDetectionConfig) refers to memset.o(.text) for memset
    fsl_dcdc.o(.ARM.exidx.text.DCDC_GetDefaultDetectionConfig) refers to fsl_dcdc.o(.text.DCDC_GetDefaultDetectionConfig) for [Anonymous Symbol]
    fsl_dcdc.o(.text.DCDC_SetDetectionConfig) refers to fsl_dcdc.o(.rodata.str1.1) for .L.str
    fsl_dcdc.o(.text.DCDC_SetDetectionConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dcdc.o(.ARM.exidx.text.DCDC_SetDetectionConfig) refers to fsl_dcdc.o(.text.DCDC_SetDetectionConfig) for [Anonymous Symbol]
    fsl_dcdc.o(.text.DCDC_SetClockSource) refers to fsl_dcdc.o(.rodata.str1.1) for .L.str.2
    fsl_dcdc.o(.text.DCDC_SetClockSource) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dcdc.o(.ARM.exidx.text.DCDC_SetClockSource) refers to fsl_dcdc.o(.text.DCDC_SetClockSource) for [Anonymous Symbol]
    fsl_dcdc.o(.text.DCDC_GetDefaultLowPowerConfig) refers to fsl_dcdc.o(.rodata.str1.1) for .L.str
    fsl_dcdc.o(.text.DCDC_GetDefaultLowPowerConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dcdc.o(.text.DCDC_GetDefaultLowPowerConfig) refers to memset.o(.text) for memset
    fsl_dcdc.o(.ARM.exidx.text.DCDC_GetDefaultLowPowerConfig) refers to fsl_dcdc.o(.text.DCDC_GetDefaultLowPowerConfig) for [Anonymous Symbol]
    fsl_dcdc.o(.text.DCDC_SetLowPowerConfig) refers to fsl_dcdc.o(.rodata.str1.1) for .L.str
    fsl_dcdc.o(.text.DCDC_SetLowPowerConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dcdc.o(.ARM.exidx.text.DCDC_SetLowPowerConfig) refers to fsl_dcdc.o(.text.DCDC_SetLowPowerConfig) for [Anonymous Symbol]
    fsl_dcdc.o(.text.DCDC_GetDefaultLoopControlConfig) refers to fsl_dcdc.o(.rodata.str1.1) for .L.str
    fsl_dcdc.o(.text.DCDC_GetDefaultLoopControlConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dcdc.o(.text.DCDC_GetDefaultLoopControlConfig) refers to memset.o(.text) for memset
    fsl_dcdc.o(.ARM.exidx.text.DCDC_GetDefaultLoopControlConfig) refers to fsl_dcdc.o(.text.DCDC_GetDefaultLoopControlConfig) for [Anonymous Symbol]
    fsl_dcdc.o(.text.DCDC_SetLoopControlConfig) refers to fsl_dcdc.o(.rodata.str1.1) for .L.str
    fsl_dcdc.o(.text.DCDC_SetLoopControlConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dcdc.o(.ARM.exidx.text.DCDC_SetLoopControlConfig) refers to fsl_dcdc.o(.text.DCDC_SetLoopControlConfig) for [Anonymous Symbol]
    fsl_dcdc.o(.text.DCDC_SetMinPowerConfig) refers to fsl_dcdc.o(.rodata.str1.1) for .L.str
    fsl_dcdc.o(.text.DCDC_SetMinPowerConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dcdc.o(.ARM.exidx.text.DCDC_SetMinPowerConfig) refers to fsl_dcdc.o(.text.DCDC_SetMinPowerConfig) for [Anonymous Symbol]
    fsl_dcdc.o(.text.DCDC_SetInternalRegulatorConfig) refers to fsl_dcdc.o(.rodata.str1.1) for .L.str
    fsl_dcdc.o(.text.DCDC_SetInternalRegulatorConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dcdc.o(.ARM.exidx.text.DCDC_SetInternalRegulatorConfig) refers to fsl_dcdc.o(.text.DCDC_SetInternalRegulatorConfig) for [Anonymous Symbol]
    fsl_dcdc.o(.text.DCDC_SetPointInit) refers to fsl_dcdc.o(.rodata.str1.1) for .L.str.3
    fsl_dcdc.o(.text.DCDC_SetPointInit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dcdc.o(.text.DCDC_SetPointInit) refers to fsl_dcdc.o(.text.DCDC_ConvertByteArrayToWord) for DCDC_ConvertByteArrayToWord
    fsl_dcdc.o(.ARM.exidx.text.DCDC_SetPointInit) refers to fsl_dcdc.o(.text.DCDC_SetPointInit) for [Anonymous Symbol]
    fsl_dcdc.o(.text.DCDC_ConvertByteArrayToWord) refers to fsl_dcdc.o(.rodata.str1.1) for .L.str.5
    fsl_dcdc.o(.text.DCDC_ConvertByteArrayToWord) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_dcdc.o(.ARM.exidx.text.DCDC_ConvertByteArrayToWord) refers to fsl_dcdc.o(.text.DCDC_ConvertByteArrayToWord) for [Anonymous Symbol]
    fsl_dcdc.o(.ARM.exidx.text.DCDC_BootIntoDCM) refers to fsl_dcdc.o(.text.DCDC_BootIntoDCM) for [Anonymous Symbol]
    fsl_dcdc.o(.ARM.exidx.text.DCDC_BootIntoCCM) refers to fsl_dcdc.o(.text.DCDC_BootIntoCCM) for [Anonymous Symbol]
    fsl_dcdc.o(.ARM.exidx.text.CLOCK_ControlGate) refers to fsl_dcdc.o(.text.CLOCK_ControlGate) for [Anonymous Symbol]
    fsl_cache.o(.ARM.exidx.text.L1CACHE_InvalidateICacheByRange) refers to fsl_cache.o(.text.L1CACHE_InvalidateICacheByRange) for [Anonymous Symbol]
    fsl_cache.o(.text.ICACHE_InvalidateByRange) refers to fsl_cache.o(.text.L1CACHE_InvalidateICacheByRange) for L1CACHE_InvalidateICacheByRange
    fsl_cache.o(.ARM.exidx.text.ICACHE_InvalidateByRange) refers to fsl_cache.o(.text.ICACHE_InvalidateByRange) for [Anonymous Symbol]
    fsl_cache.o(.text.DCACHE_InvalidateByRange) refers to fsl_cache.o(.text.L1CACHE_InvalidateDCacheByRange) for L1CACHE_InvalidateDCacheByRange
    fsl_cache.o(.ARM.exidx.text.DCACHE_InvalidateByRange) refers to fsl_cache.o(.text.DCACHE_InvalidateByRange) for [Anonymous Symbol]
    fsl_cache.o(.ARM.exidx.text.L1CACHE_InvalidateDCacheByRange) refers to fsl_cache.o(.text.L1CACHE_InvalidateDCacheByRange) for [Anonymous Symbol]
    fsl_cache.o(.text.DCACHE_CleanByRange) refers to fsl_cache.o(.text.L1CACHE_CleanDCacheByRange) for L1CACHE_CleanDCacheByRange
    fsl_cache.o(.ARM.exidx.text.DCACHE_CleanByRange) refers to fsl_cache.o(.text.DCACHE_CleanByRange) for [Anonymous Symbol]
    fsl_cache.o(.ARM.exidx.text.L1CACHE_CleanDCacheByRange) refers to fsl_cache.o(.text.L1CACHE_CleanDCacheByRange) for [Anonymous Symbol]
    fsl_cache.o(.text.DCACHE_CleanInvalidateByRange) refers to fsl_cache.o(.text.L1CACHE_CleanInvalidateDCacheByRange) for L1CACHE_CleanInvalidateDCacheByRange
    fsl_cache.o(.ARM.exidx.text.DCACHE_CleanInvalidateByRange) refers to fsl_cache.o(.text.DCACHE_CleanInvalidateByRange) for [Anonymous Symbol]
    fsl_cache.o(.ARM.exidx.text.L1CACHE_CleanInvalidateDCacheByRange) refers to fsl_cache.o(.text.L1CACHE_CleanInvalidateDCacheByRange) for [Anonymous Symbol]
    fsl_anatop_ai.o(.ARM.exidx.text.ANATOP_AI_Access) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Access) for [Anonymous Symbol]
    fsl_anatop_ai.o(.text.ANATOP_AI_Write) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Access) for ANATOP_AI_Access
    fsl_anatop_ai.o(.ARM.exidx.text.ANATOP_AI_Write) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for [Anonymous Symbol]
    fsl_anatop_ai.o(.text.ANATOP_AI_Read) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Access) for ANATOP_AI_Access
    fsl_anatop_ai.o(.ARM.exidx.text.ANATOP_AI_Read) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for [Anonymous Symbol]
    fsl_anatop_ai.o(.text.ANATOP_AI_WriteWithMaskShift) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Read) for ANATOP_AI_Read
    fsl_anatop_ai.o(.text.ANATOP_AI_WriteWithMaskShift) refers to fsl_anatop_ai.o(.text.ANATOP_AI_Write) for ANATOP_AI_Write
    fsl_anatop_ai.o(.ARM.exidx.text.ANATOP_AI_WriteWithMaskShift) refers to fsl_anatop_ai.o(.text.ANATOP_AI_WriteWithMaskShift) for [Anonymous Symbol]
    fsl_gpt.o(.text.GPT_Init) refers to fsl_gpt.o(.rodata.str1.1) for .L.str
    fsl_gpt.o(.text.GPT_Init) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_gpt.o(.text.GPT_Init) refers to fsl_gpt.o(.text.GPT_GetInstance) for GPT_GetInstance
    fsl_gpt.o(.text.GPT_Init) refers to fsl_gpt.o(.rodata.s_gptClocks) for s_gptClocks
    fsl_gpt.o(.text.GPT_Init) refers to fsl_gpt.o(.text.CLOCK_EnableClock) for CLOCK_EnableClock
    fsl_gpt.o(.text.GPT_Init) refers to fsl_gpt.o(.text.GPT_SoftwareReset) for GPT_SoftwareReset
    fsl_gpt.o(.text.GPT_Init) refers to fsl_gpt.o(.text.GPT_SetClockSource) for GPT_SetClockSource
    fsl_gpt.o(.text.GPT_Init) refers to fsl_gpt.o(.text.GPT_SetClockDivider) for GPT_SetClockDivider
    fsl_gpt.o(.ARM.exidx.text.GPT_Init) refers to fsl_gpt.o(.text.GPT_Init) for [Anonymous Symbol]
    fsl_gpt.o(.text.CLOCK_EnableClock) refers to fsl_gpt.o(.text.CLOCK_ControlGate) for CLOCK_ControlGate
    fsl_gpt.o(.ARM.exidx.text.CLOCK_EnableClock) refers to fsl_gpt.o(.text.CLOCK_EnableClock) for [Anonymous Symbol]
    fsl_gpt.o(.text.GPT_GetInstance) refers to fsl_gpt.o(.rodata.s_gptBases) for s_gptBases
    fsl_gpt.o(.text.GPT_GetInstance) refers to fsl_gpt.o(.rodata.str1.1) for .L.str.3
    fsl_gpt.o(.text.GPT_GetInstance) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_gpt.o(.ARM.exidx.text.GPT_GetInstance) refers to fsl_gpt.o(.text.GPT_GetInstance) for [Anonymous Symbol]
    fsl_gpt.o(.ARM.exidx.text.GPT_SoftwareReset) refers to fsl_gpt.o(.text.GPT_SoftwareReset) for [Anonymous Symbol]
    fsl_gpt.o(.ARM.exidx.text.GPT_SetClockSource) refers to fsl_gpt.o(.text.GPT_SetClockSource) for [Anonymous Symbol]
    fsl_gpt.o(.text.GPT_SetClockDivider) refers to fsl_gpt.o(.rodata.str1.1) for .L.str.4
    fsl_gpt.o(.text.GPT_SetClockDivider) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_gpt.o(.ARM.exidx.text.GPT_SetClockDivider) refers to fsl_gpt.o(.text.GPT_SetClockDivider) for [Anonymous Symbol]
    fsl_gpt.o(.text.GPT_Deinit) refers to fsl_gpt.o(.text.GPT_GetInstance) for GPT_GetInstance
    fsl_gpt.o(.text.GPT_Deinit) refers to fsl_gpt.o(.rodata.s_gptClocks) for s_gptClocks
    fsl_gpt.o(.text.GPT_Deinit) refers to fsl_gpt.o(.text.CLOCK_DisableClock) for CLOCK_DisableClock
    fsl_gpt.o(.ARM.exidx.text.GPT_Deinit) refers to fsl_gpt.o(.text.GPT_Deinit) for [Anonymous Symbol]
    fsl_gpt.o(.text.CLOCK_DisableClock) refers to fsl_gpt.o(.text.CLOCK_ControlGate) for CLOCK_ControlGate
    fsl_gpt.o(.ARM.exidx.text.CLOCK_DisableClock) refers to fsl_gpt.o(.text.CLOCK_DisableClock) for [Anonymous Symbol]
    fsl_gpt.o(.text.GPT_GetDefaultConfig) refers to fsl_gpt.o(.rodata.str1.1) for .L.str.2
    fsl_gpt.o(.text.GPT_GetDefaultConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_gpt.o(.text.GPT_GetDefaultConfig) refers to memset.o(.text) for memset
    fsl_gpt.o(.ARM.exidx.text.GPT_GetDefaultConfig) refers to fsl_gpt.o(.text.GPT_GetDefaultConfig) for [Anonymous Symbol]
    fsl_gpt.o(.ARM.exidx.text.CLOCK_ControlGate) refers to fsl_gpt.o(.text.CLOCK_ControlGate) for [Anonymous Symbol]
    system_mimxrt1176_cm7.o(.text.SystemInit) refers to system_mimxrt1176_cm7.o(.text.SystemInitHook) for SystemInitHook
    system_mimxrt1176_cm7.o(.ARM.exidx.text.SystemInit) refers to system_mimxrt1176_cm7.o(.text.SystemInit) for [Anonymous Symbol]
    system_mimxrt1176_cm7.o(.ARM.exidx.text.SystemInitHook) refers to system_mimxrt1176_cm7.o(.text.SystemInitHook) for [Anonymous Symbol]
    system_mimxrt1176_cm7.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_mimxrt1176_cm7.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    fsl_adapter_lpuart.o(.text.HAL_UartInit) refers to fsl_adapter_lpuart.o(.rodata.str1.1) for .L.str
    fsl_adapter_lpuart.o(.text.HAL_UartInit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_lpuart.o(.text.HAL_UartInit) refers to fsl_adapter_lpuart.o(.rodata.s_LpuartAdapterBase) for s_LpuartAdapterBase
    fsl_adapter_lpuart.o(.text.HAL_UartInit) refers to fsl_adapter_lpuart.o(.text.HAL_UartInitCommon) for HAL_UartInitCommon
    fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartInit) refers to fsl_adapter_lpuart.o(.text.HAL_UartInit) for [Anonymous Symbol]
    fsl_adapter_lpuart.o(.text.HAL_UartInitCommon) refers to fsl_lpuart.o(.text.LPUART_GetDefaultConfig) for LPUART_GetDefaultConfig
    fsl_adapter_lpuart.o(.text.HAL_UartInitCommon) refers to fsl_adapter_lpuart.o(.rodata.s_LpuartAdapterBase) for s_LpuartAdapterBase
    fsl_adapter_lpuart.o(.text.HAL_UartInitCommon) refers to fsl_lpuart.o(.text.LPUART_Init) for LPUART_Init
    fsl_adapter_lpuart.o(.text.HAL_UartInitCommon) refers to fsl_adapter_lpuart.o(.text.HAL_UartGetStatus) for HAL_UartGetStatus
    fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartInitCommon) refers to fsl_adapter_lpuart.o(.text.HAL_UartInitCommon) for [Anonymous Symbol]
    fsl_adapter_lpuart.o(.text.HAL_UartDeinit) refers to fsl_adapter_lpuart.o(.rodata.str1.1) for .L.str
    fsl_adapter_lpuart.o(.text.HAL_UartDeinit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_lpuart.o(.text.HAL_UartDeinit) refers to fsl_adapter_lpuart.o(.rodata.s_LpuartAdapterBase) for s_LpuartAdapterBase
    fsl_adapter_lpuart.o(.text.HAL_UartDeinit) refers to fsl_lpuart.o(.text.LPUART_Deinit) for LPUART_Deinit
    fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartDeinit) refers to fsl_adapter_lpuart.o(.text.HAL_UartDeinit) for [Anonymous Symbol]
    fsl_adapter_lpuart.o(.text.HAL_UartReceiveBlocking) refers to fsl_adapter_lpuart.o(.rodata.str1.1) for .L.str
    fsl_adapter_lpuart.o(.text.HAL_UartReceiveBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_lpuart.o(.text.HAL_UartReceiveBlocking) refers to fsl_adapter_lpuart.o(.rodata.s_LpuartAdapterBase) for s_LpuartAdapterBase
    fsl_adapter_lpuart.o(.text.HAL_UartReceiveBlocking) refers to fsl_lpuart.o(.text.LPUART_ReadBlocking) for LPUART_ReadBlocking
    fsl_adapter_lpuart.o(.text.HAL_UartReceiveBlocking) refers to fsl_adapter_lpuart.o(.text.HAL_UartGetStatus) for HAL_UartGetStatus
    fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartReceiveBlocking) refers to fsl_adapter_lpuart.o(.text.HAL_UartReceiveBlocking) for [Anonymous Symbol]
    fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartGetStatus) refers to fsl_adapter_lpuart.o(.text.HAL_UartGetStatus) for [Anonymous Symbol]
    fsl_adapter_lpuart.o(.text.HAL_UartSendBlocking) refers to fsl_adapter_lpuart.o(.rodata.str1.1) for .L.str
    fsl_adapter_lpuart.o(.text.HAL_UartSendBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_lpuart.o(.text.HAL_UartSendBlocking) refers to fsl_adapter_lpuart.o(.rodata.s_LpuartAdapterBase) for s_LpuartAdapterBase
    fsl_adapter_lpuart.o(.text.HAL_UartSendBlocking) refers to fsl_lpuart.o(.text.LPUART_WriteBlocking) for LPUART_WriteBlocking
    fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartSendBlocking) refers to fsl_adapter_lpuart.o(.text.HAL_UartSendBlocking) for [Anonymous Symbol]
    fsl_adapter_lpuart.o(.text.HAL_UartEnterLowpower) refers to fsl_adapter_lpuart.o(.rodata.str1.1) for .L.str
    fsl_adapter_lpuart.o(.text.HAL_UartEnterLowpower) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartEnterLowpower) refers to fsl_adapter_lpuart.o(.text.HAL_UartEnterLowpower) for [Anonymous Symbol]
    fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartExitLowpower) refers to fsl_adapter_lpuart.o(.text.HAL_UartExitLowpower) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_Init) refers to fsl_component_generic_list.o(.text.LIST_Init) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetList) refers to fsl_component_generic_list.o(.text.LIST_GetList) for [Anonymous Symbol]
    fsl_component_generic_list.o(.text.LIST_AddTail) refers to fsl_component_generic_list.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_component_generic_list.o(.text.LIST_AddTail) refers to fsl_component_generic_list.o(.text.LIST_Error_Check) for LIST_Error_Check
    fsl_component_generic_list.o(.text.LIST_AddTail) refers to fsl_component_generic_list.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddTail) refers to fsl_component_generic_list.o(.text.LIST_AddTail) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.DisableGlobalIRQ) refers to fsl_component_generic_list.o(.text.DisableGlobalIRQ) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_Error_Check) refers to fsl_component_generic_list.o(.text.LIST_Error_Check) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.EnableGlobalIRQ) refers to fsl_component_generic_list.o(.text.EnableGlobalIRQ) for [Anonymous Symbol]
    fsl_component_generic_list.o(.text.LIST_AddHead) refers to fsl_component_generic_list.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_component_generic_list.o(.text.LIST_AddHead) refers to fsl_component_generic_list.o(.text.LIST_Error_Check) for LIST_Error_Check
    fsl_component_generic_list.o(.text.LIST_AddHead) refers to fsl_component_generic_list.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddHead) refers to fsl_component_generic_list.o(.text.LIST_AddHead) for [Anonymous Symbol]
    fsl_component_generic_list.o(.text.LIST_RemoveHead) refers to fsl_component_generic_list.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_component_generic_list.o(.text.LIST_RemoveHead) refers to fsl_component_generic_list.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_RemoveHead) refers to fsl_component_generic_list.o(.text.LIST_RemoveHead) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetHead) refers to fsl_component_generic_list.o(.text.LIST_GetHead) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetNext) refers to fsl_component_generic_list.o(.text.LIST_GetNext) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetPrev) refers to fsl_component_generic_list.o(.text.LIST_GetPrev) for [Anonymous Symbol]
    fsl_component_generic_list.o(.text.LIST_RemoveElement) refers to fsl_component_generic_list.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_component_generic_list.o(.text.LIST_RemoveElement) refers to fsl_component_generic_list.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_RemoveElement) refers to fsl_component_generic_list.o(.text.LIST_RemoveElement) for [Anonymous Symbol]
    fsl_component_generic_list.o(.text.LIST_AddPrevElement) refers to fsl_component_generic_list.o(.text.DisableGlobalIRQ) for DisableGlobalIRQ
    fsl_component_generic_list.o(.text.LIST_AddPrevElement) refers to fsl_component_generic_list.o(.text.LIST_Error_Check) for LIST_Error_Check
    fsl_component_generic_list.o(.text.LIST_AddPrevElement) refers to fsl_component_generic_list.o(.text.EnableGlobalIRQ) for EnableGlobalIRQ
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddPrevElement) refers to fsl_component_generic_list.o(.text.LIST_AddPrevElement) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetSize) refers to fsl_component_generic_list.o(.text.LIST_GetSize) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetAvailableSize) refers to fsl_component_generic_list.o(.text.LIST_GetAvailableSize) for [Anonymous Symbol]
    startup_mimxrt1176_cm7.o(.text) refers to startup_mimxrt1176_cm7.o(.isr_vector) for __Vectors
    startup_mimxrt1176_cm7.o(.text) refers to system_mimxrt1176_cm7.o(.text.SystemInit) for SystemInit
    startup_mimxrt1176_cm7.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    startup_mimxrt1176_cm7.o(.text) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_mimxrt1176_cm7.o(.text) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_mimxrt1176_cm7.o(.text) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_lpuart.o(.text.LPUART1_DriverIRQHandler) for LPUART1_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_lpuart.o(.text.LPUART2_DriverIRQHandler) for LPUART2_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_lpuart.o(.text.LPUART3_DriverIRQHandler) for LPUART3_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_lpuart.o(.text.LPUART4_DriverIRQHandler) for LPUART4_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_lpuart.o(.text.LPUART5_DriverIRQHandler) for LPUART5_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_lpuart.o(.text.LPUART6_DriverIRQHandler) for LPUART6_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_lpuart.o(.text.LPUART7_DriverIRQHandler) for LPUART7_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_lpuart.o(.text.LPUART8_DriverIRQHandler) for LPUART8_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_lpuart.o(.text.LPUART9_DriverIRQHandler) for LPUART9_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_lpuart.o(.text.LPUART10_DriverIRQHandler) for LPUART10_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_lpuart.o(.text.LPUART11_DriverIRQHandler) for LPUART11_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_lpuart.o(.text.LPUART12_DriverIRQHandler) for LPUART12_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_flexcan.o(.text.CAN1_DriverIRQHandler) for CAN1_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_flexcan.o(.text.CAN2_DriverIRQHandler) for CAN2_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.text) refers to fsl_flexcan.o(.text.CAN3_DriverIRQHandler) for CAN3_DriverIRQHandler
    startup_mimxrt1176_cm7.o(.isr_vector) refers to startup_mimxrt1176_cm7.o(.text) for Reset_Handler
    startup_mimxrt1176_cm7.o(.isr_vector) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_mimxrt1176_cm7.o(.isr_vector) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_mimxrt1176_cm7.o(.isr_vector) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    startup_mimxrt1176_cm7.o(.isr_vector) refers to flexcan_interrupt_transfer.o(.text.GPT2_IRQHandler) for GPT2_IRQHandler
    fsl_flexspi_nor_boot.o(.boot_hdr.ivt) refers to startup_mimxrt1176_cm7.o(.text) for Reset_Handler
    fsl_flexspi_nor_boot.o(.boot_hdr.ivt) refers to fsl_flexspi_nor_boot.o(.boot_hdr.boot_data) for g_boot_data
    dcf.o(.text.start_node) refers to nmtmaster.o(.text.masterSendNMTstateChange) for masterSendNMTstateChange
    dcf.o(.ARM.exidx.text.start_node) refers to dcf.o(.text.start_node) for [Anonymous Symbol]
    dcf.o(.text.check_and_start_node) refers to dcf.o(.text.init_consise_dcf) for init_consise_dcf
    dcf.o(.text.check_and_start_node) refers to dcf.o(.text.read_consise_dcf_next_entry) for read_consise_dcf_next_entry
    dcf.o(.text.check_and_start_node) refers to dcf.o(.text.start_node) for start_node
    dcf.o(.ARM.exidx.text.check_and_start_node) refers to dcf.o(.text.check_and_start_node) for [Anonymous Symbol]
    dcf.o(.ARM.exidx.text.init_consise_dcf) refers to dcf.o(.text.init_consise_dcf) for [Anonymous Symbol]
    dcf.o(.text.read_consise_dcf_next_entry) refers to dcf.o(.text.get_next_DCF_data) for get_next_DCF_data
    dcf.o(.text.read_consise_dcf_next_entry) refers to dcf.o(.text.CheckSDOAndContinue) for CheckSDOAndContinue
    dcf.o(.text.read_consise_dcf_next_entry) refers to sdo.o(.text.readNetworkDictCallbackAI) for readNetworkDictCallbackAI
    dcf.o(.ARM.exidx.text.read_consise_dcf_next_entry) refers to dcf.o(.text.read_consise_dcf_next_entry) for [Anonymous Symbol]
    dcf.o(.text.start_and_seek_node) refers to dcf.o(.text.start_node) for start_node
    dcf.o(.text.start_and_seek_node) refers to dcf.o(.text.check_and_start_node) for check_and_start_node
    dcf.o(.ARM.exidx.text.start_and_seek_node) refers to dcf.o(.text.start_and_seek_node) for [Anonymous Symbol]
    dcf.o(.text.get_next_DCF_data) refers to memcpy.o(.text) for memcpy
    dcf.o(.ARM.exidx.text.get_next_DCF_data) refers to dcf.o(.text.get_next_DCF_data) for [Anonymous Symbol]
    dcf.o(.text.SaveNode) refers to dcf.o(.text.CheckSDOAndContinue) for CheckSDOAndContinue
    dcf.o(.text.SaveNode) refers to sdo.o(.text.writeNetworkDictCallBackAI) for writeNetworkDictCallBackAI
    dcf.o(.ARM.exidx.text.SaveNode) refers to dcf.o(.text.SaveNode) for [Anonymous Symbol]
    dcf.o(.text.CheckSDOAndContinue) refers to sdo.o(.text.getReadResultNetworkDict) for getReadResultNetworkDict
    dcf.o(.text.CheckSDOAndContinue) refers to dcf.o(.text.read_consise_dcf_next_entry) for read_consise_dcf_next_entry
    dcf.o(.text.CheckSDOAndContinue) refers to dcf.o(.text.start_and_seek_node) for start_and_seek_node
    dcf.o(.text.CheckSDOAndContinue) refers to dcf.o(.text.init_consise_dcf) for init_consise_dcf
    dcf.o(.text.CheckSDOAndContinue) refers to dcf.o(.text.write_consise_dcf_next_entry) for write_consise_dcf_next_entry
    dcf.o(.text.CheckSDOAndContinue) refers to sdo.o(.text.getWriteResultNetworkDict) for getWriteResultNetworkDict
    dcf.o(.text.CheckSDOAndContinue) refers to nmtmaster.o(.text.masterSendNMTstateChange) for masterSendNMTstateChange
    dcf.o(.text.CheckSDOAndContinue) refers to sdo.o(.text.resetClientSDOLineFromNodeId) for resetClientSDOLineFromNodeId
    dcf.o(.ARM.exidx.text.CheckSDOAndContinue) refers to dcf.o(.text.CheckSDOAndContinue) for [Anonymous Symbol]
    dcf.o(.text.write_consise_dcf_next_entry) refers to dcf.o(.text.get_next_DCF_data) for get_next_DCF_data
    dcf.o(.text.write_consise_dcf_next_entry) refers to dcf.o(.text.CheckSDOAndContinue) for CheckSDOAndContinue
    dcf.o(.text.write_consise_dcf_next_entry) refers to sdo.o(.text.writeNetworkDictCallBackAI) for writeNetworkDictCallBackAI
    dcf.o(.ARM.exidx.text.write_consise_dcf_next_entry) refers to dcf.o(.text.write_consise_dcf_next_entry) for [Anonymous Symbol]
    emcy.o(.ARM.exidx.text.OnNumberOfErrorsUpdate) refers to emcy.o(.text.OnNumberOfErrorsUpdate) for [Anonymous Symbol]
    emcy.o(.text.emergencyInit) refers to emcy.o(.text.OnNumberOfErrorsUpdate) for OnNumberOfErrorsUpdate
    emcy.o(.text.emergencyInit) refers to objacces.o(.text.RegisterSetODentryCallBack) for RegisterSetODentryCallBack
    emcy.o(.ARM.exidx.text.emergencyInit) refers to emcy.o(.text.emergencyInit) for [Anonymous Symbol]
    emcy.o(.ARM.exidx.text.emergencyStop) refers to emcy.o(.text.emergencyStop) for [Anonymous Symbol]
    emcy.o(.text.sendEMCY) refers to memset.o(.text) for memset
    emcy.o(.text.sendEMCY) refers to memcpy.o(.text) for memcpy
    emcy.o(.text.sendEMCY) refers to flexcan_interrupt_transfer.o(.text.canSend) for canSend
    emcy.o(.ARM.exidx.text.sendEMCY) refers to emcy.o(.text.sendEMCY) for [Anonymous Symbol]
    emcy.o(.text.EMCY_setError) refers to emcy.o(.text.sendEMCY) for sendEMCY
    emcy.o(.ARM.exidx.text.EMCY_setError) refers to emcy.o(.text.EMCY_setError) for [Anonymous Symbol]
    emcy.o(.text.EMCY_errorRecovered) refers to emcy.o(.text.sendEMCY) for sendEMCY
    emcy.o(.ARM.exidx.text.EMCY_errorRecovered) refers to emcy.o(.text.EMCY_errorRecovered) for [Anonymous Symbol]
    emcy.o(.ARM.exidx.text.proceedEMCY) refers to emcy.o(.text.proceedEMCY) for [Anonymous Symbol]
    emcy.o(.ARM.exidx.text._post_emcy) refers to emcy.o(.text._post_emcy) for [Anonymous Symbol]
    lifegrd.o(.ARM.exidx.text.getNodeState) refers to lifegrd.o(.text.getNodeState) for [Anonymous Symbol]
    lifegrd.o(.ARM.exidx.text.ConsumerHeartbeatAlarm) refers to lifegrd.o(.text.ConsumerHeartbeatAlarm) for [Anonymous Symbol]
    lifegrd.o(.text.proceedNODE_GUARD) refers to flexcan_interrupt_transfer.o(.text.canSend) for canSend
    lifegrd.o(.text.proceedNODE_GUARD) refers to timer.o(.text.DelAlarm) for DelAlarm
    lifegrd.o(.text.proceedNODE_GUARD) refers to lifegrd.o(.text.ConsumerHeartbeatAlarm) for ConsumerHeartbeatAlarm
    lifegrd.o(.text.proceedNODE_GUARD) refers to timer.o(.text.SetAlarm) for SetAlarm
    lifegrd.o(.ARM.exidx.text.proceedNODE_GUARD) refers to lifegrd.o(.text.proceedNODE_GUARD) for [Anonymous Symbol]
    lifegrd.o(.text.ProducerHeartbeatAlarm) refers to flexcan_interrupt_transfer.o(.text.canSend) for canSend
    lifegrd.o(.text.ProducerHeartbeatAlarm) refers to timer.o(.text.DelAlarm) for DelAlarm
    lifegrd.o(.ARM.exidx.text.ProducerHeartbeatAlarm) refers to lifegrd.o(.text.ProducerHeartbeatAlarm) for [Anonymous Symbol]
    lifegrd.o(.text.GuardTimeAlarm) refers to nmtmaster.o(.text.masterSendNMTnodeguard) for masterSendNMTnodeguard
    lifegrd.o(.text.GuardTimeAlarm) refers to timer.o(.text.DelAlarm) for DelAlarm
    lifegrd.o(.ARM.exidx.text.GuardTimeAlarm) refers to lifegrd.o(.text.GuardTimeAlarm) for [Anonymous Symbol]
    lifegrd.o(.text.OnNodeGuardUpdate) refers to lifegrd.o(.text.nodeguardStop) for nodeguardStop
    lifegrd.o(.text.OnNodeGuardUpdate) refers to lifegrd.o(.text.nodeguardInit) for nodeguardInit
    lifegrd.o(.ARM.exidx.text.OnNodeGuardUpdate) refers to lifegrd.o(.text.OnNodeGuardUpdate) for [Anonymous Symbol]
    lifegrd.o(.text.nodeguardStop) refers to timer.o(.text.DelAlarm) for DelAlarm
    lifegrd.o(.ARM.exidx.text.nodeguardStop) refers to lifegrd.o(.text.nodeguardStop) for [Anonymous Symbol]
    lifegrd.o(.text.nodeguardInit) refers to lifegrd.o(.text.OnNodeGuardUpdate) for OnNodeGuardUpdate
    lifegrd.o(.text.nodeguardInit) refers to objacces.o(.text.RegisterSetODentryCallBack) for RegisterSetODentryCallBack
    lifegrd.o(.text.nodeguardInit) refers to lifegrd.o(.text.GuardTimeAlarm) for GuardTimeAlarm
    lifegrd.o(.text.nodeguardInit) refers to timer.o(.text.SetAlarm) for SetAlarm
    lifegrd.o(.ARM.exidx.text.nodeguardInit) refers to lifegrd.o(.text.nodeguardInit) for [Anonymous Symbol]
    lifegrd.o(.text.OnHeartbeatProducerUpdate) refers to timer.o(.text.DelAlarm) for DelAlarm
    lifegrd.o(.text.OnHeartbeatProducerUpdate) refers to lifegrd.o(.text.ProducerHeartbeatAlarm) for ProducerHeartbeatAlarm
    lifegrd.o(.text.OnHeartbeatProducerUpdate) refers to timer.o(.text.SetAlarm) for SetAlarm
    lifegrd.o(.ARM.exidx.text.OnHeartbeatProducerUpdate) refers to lifegrd.o(.text.OnHeartbeatProducerUpdate) for [Anonymous Symbol]
    lifegrd.o(.text.heartbeatInit) refers to lifegrd.o(.text.OnHeartbeatProducerUpdate) for OnHeartbeatProducerUpdate
    lifegrd.o(.text.heartbeatInit) refers to objacces.o(.text.RegisterSetODentryCallBack) for RegisterSetODentryCallBack
    lifegrd.o(.text.heartbeatInit) refers to lifegrd.o(.text.ConsumerHeartbeatAlarm) for ConsumerHeartbeatAlarm
    lifegrd.o(.text.heartbeatInit) refers to timer.o(.text.SetAlarm) for SetAlarm
    lifegrd.o(.text.heartbeatInit) refers to lifegrd.o(.text.ProducerHeartbeatAlarm) for ProducerHeartbeatAlarm
    lifegrd.o(.ARM.exidx.text.heartbeatInit) refers to lifegrd.o(.text.heartbeatInit) for [Anonymous Symbol]
    lifegrd.o(.text.heartbeatStop) refers to timer.o(.text.DelAlarm) for DelAlarm
    lifegrd.o(.ARM.exidx.text.heartbeatStop) refers to lifegrd.o(.text.heartbeatStop) for [Anonymous Symbol]
    lifegrd.o(.text.lifeGuardInit) refers to lifegrd.o(.text.heartbeatInit) for heartbeatInit
    lifegrd.o(.text.lifeGuardInit) refers to lifegrd.o(.text.nodeguardInit) for nodeguardInit
    lifegrd.o(.ARM.exidx.text.lifeGuardInit) refers to lifegrd.o(.text.lifeGuardInit) for [Anonymous Symbol]
    lifegrd.o(.text.lifeGuardStop) refers to lifegrd.o(.text.heartbeatStop) for heartbeatStop
    lifegrd.o(.text.lifeGuardStop) refers to lifegrd.o(.text.nodeguardStop) for nodeguardStop
    lifegrd.o(.ARM.exidx.text.lifeGuardStop) refers to lifegrd.o(.text.lifeGuardStop) for [Anonymous Symbol]
    lifegrd.o(.ARM.exidx.text._heartbeatError) refers to lifegrd.o(.text._heartbeatError) for [Anonymous Symbol]
    lifegrd.o(.ARM.exidx.text._post_SlaveBootup) refers to lifegrd.o(.text._post_SlaveBootup) for [Anonymous Symbol]
    lifegrd.o(.ARM.exidx.text._post_SlaveStateChange) refers to lifegrd.o(.text._post_SlaveStateChange) for [Anonymous Symbol]
    lifegrd.o(.ARM.exidx.text._nodeguardError) refers to lifegrd.o(.text._nodeguardError) for [Anonymous Symbol]
    nmtmaster.o(.text.masterSendNMTstateChange) refers to flexcan_interrupt_transfer.o(.text.canSend) for canSend
    nmtmaster.o(.ARM.exidx.text.masterSendNMTstateChange) refers to nmtmaster.o(.text.masterSendNMTstateChange) for [Anonymous Symbol]
    nmtmaster.o(.text.masterSendNMTnodeguard) refers to flexcan_interrupt_transfer.o(.text.canSend) for canSend
    nmtmaster.o(.ARM.exidx.text.masterSendNMTnodeguard) refers to nmtmaster.o(.text.masterSendNMTnodeguard) for [Anonymous Symbol]
    nmtmaster.o(.text.masterRequestNodeState) refers to nmtmaster.o(.text.masterSendNMTnodeguard) for masterSendNMTnodeguard
    nmtmaster.o(.ARM.exidx.text.masterRequestNodeState) refers to nmtmaster.o(.text.masterRequestNodeState) for [Anonymous Symbol]
    nmtslave.o(.text.proceedNMTstateChange) refers to states.o(.text.setState) for setState
    nmtslave.o(.text.proceedNMTstateChange) refers to states.o(.text.getNodeId) for getNodeId
    nmtslave.o(.text.proceedNMTstateChange) refers to states.o(.text.setNodeId) for setNodeId
    nmtslave.o(.ARM.exidx.text.proceedNMTstateChange) refers to nmtslave.o(.text.proceedNMTstateChange) for [Anonymous Symbol]
    nmtslave.o(.text.slaveSendBootUp) refers to flexcan_interrupt_transfer.o(.text.canSend) for canSend
    nmtslave.o(.ARM.exidx.text.slaveSendBootUp) refers to nmtslave.o(.text.slaveSendBootUp) for [Anonymous Symbol]
    objacces.o(.ARM.exidx.text.accessDictionaryError) refers to objacces.o(.text.accessDictionaryError) for [Anonymous Symbol]
    objacces.o(.text._getODentry) refers to objacces.o(.text.accessDictionaryError) for accessDictionaryError
    objacces.o(.text._getODentry) refers to memcpy.o(.text) for memcpy
    objacces.o(.ARM.exidx.text._getODentry) refers to objacces.o(.text._getODentry) for [Anonymous Symbol]
    objacces.o(.text._setODentry) refers to objacces.o(.text.accessDictionaryError) for accessDictionaryError
    objacces.o(.text._setODentry) refers to memcpy.o(.text) for memcpy
    objacces.o(.ARM.exidx.text._setODentry) refers to objacces.o(.text._setODentry) for [Anonymous Symbol]
    objacces.o(.ARM.exidx.text.RegisterSetODentryCallBack) refers to objacces.o(.text.RegisterSetODentryCallBack) for [Anonymous Symbol]
    objacces.o(.ARM.exidx.text._storeODSubIndex) refers to objacces.o(.text._storeODSubIndex) for [Anonymous Symbol]
    pdo.o(.text.buildPDO) refers to objacces.o(.text._getODentry) for _getODentry
    pdo.o(.text.buildPDO) refers to pdo.o(.text.CopyBits) for CopyBits
    pdo.o(.ARM.exidx.text.buildPDO) refers to pdo.o(.text.buildPDO) for [Anonymous Symbol]
    pdo.o(.ARM.exidx.text.CopyBits) refers to pdo.o(.text.CopyBits) for [Anonymous Symbol]
    pdo.o(.text.sendPDOrequest) refers to flexcan_interrupt_transfer.o(.text.canSend) for canSend
    pdo.o(.ARM.exidx.text.sendPDOrequest) refers to pdo.o(.text.sendPDOrequest) for [Anonymous Symbol]
    pdo.o(.text.proceedPDO) refers to pdo.o(.text.CopyBits) for CopyBits
    pdo.o(.text.proceedPDO) refers to objacces.o(.text._setODentry) for _setODentry
    pdo.o(.text.proceedPDO) refers to timer.o(.text.DelAlarm) for DelAlarm
    pdo.o(.text.proceedPDO) refers to timer.o(.text.SetAlarm) for SetAlarm
    pdo.o(.text.proceedPDO) refers to flexcan_interrupt_transfer.o(.text.canSend) for canSend
    pdo.o(.text.proceedPDO) refers to pdo.o(.text.PDOEventTimerAlarm) for PDOEventTimerAlarm
    pdo.o(.text.proceedPDO) refers to pdo.o(.text.buildPDO) for buildPDO
    pdo.o(.ARM.exidx.text.proceedPDO) refers to pdo.o(.text.proceedPDO) for [Anonymous Symbol]
    pdo.o(.text.PDOEventTimerAlarm) refers to pdo.o(.text.sendOnePDOevent) for sendOnePDOevent
    pdo.o(.ARM.exidx.text.PDOEventTimerAlarm) refers to pdo.o(.text.PDOEventTimerAlarm) for [Anonymous Symbol]
    pdo.o(.text.sendPDOevent) refers to pdo.o(.text._sendPDOevent) for _sendPDOevent
    pdo.o(.ARM.exidx.text.sendPDOevent) refers to pdo.o(.text.sendPDOevent) for [Anonymous Symbol]
    pdo.o(.text._sendPDOevent) refers to memset.o(.text) for memset
    pdo.o(.text._sendPDOevent) refers to pdo.o(.text.buildPDO) for buildPDO
    pdo.o(.text._sendPDOevent) refers to pdo.o(.text.sendOnePDOevent) for sendOnePDOevent
    pdo.o(.text._sendPDOevent) refers to pdo.o(.text.sendPdo) for sendPdo
    pdo.o(.ARM.exidx.text._sendPDOevent) refers to pdo.o(.text._sendPDOevent) for [Anonymous Symbol]
    pdo.o(.text.sendOnePDOevent) refers to memset.o(.text) for memset
    pdo.o(.text.sendOnePDOevent) refers to pdo.o(.text.buildPDO) for buildPDO
    pdo.o(.text.sendOnePDOevent) refers to memcmp.o(.text) for memcmp
    pdo.o(.text.sendOnePDOevent) refers to timer.o(.text.DelAlarm) for DelAlarm
    pdo.o(.text.sendOnePDOevent) refers to pdo.o(.text.PDOEventTimerAlarm) for PDOEventTimerAlarm
    pdo.o(.text.sendOnePDOevent) refers to timer.o(.text.SetAlarm) for SetAlarm
    pdo.o(.text.sendOnePDOevent) refers to pdo.o(.text.PDOInhibitTimerAlarm) for PDOInhibitTimerAlarm
    pdo.o(.text.sendOnePDOevent) refers to pdo.o(.text.sendPdo) for sendPdo
    pdo.o(.ARM.exidx.text.sendOnePDOevent) refers to pdo.o(.text.sendOnePDOevent) for [Anonymous Symbol]
    pdo.o(.text.PDOInhibitTimerAlarm) refers to pdo.o(.text.sendOnePDOevent) for sendOnePDOevent
    pdo.o(.ARM.exidx.text.PDOInhibitTimerAlarm) refers to pdo.o(.text.PDOInhibitTimerAlarm) for [Anonymous Symbol]
    pdo.o(.text.sendPdo) refers to flexcan_interrupt_transfer.o(.text.canSend) for canSend
    pdo.o(.ARM.exidx.text.sendPdo) refers to pdo.o(.text.sendPdo) for [Anonymous Symbol]
    pdo.o(.ARM.exidx.text._RxPDO_EventTimers_Handler) refers to pdo.o(.text._RxPDO_EventTimers_Handler) for [Anonymous Symbol]
    pdo.o(.text.TPDO_Communication_Parameter_Callback) refers to timer.o(.text.DelAlarm) for DelAlarm
    pdo.o(.text.TPDO_Communication_Parameter_Callback) refers to pdo.o(.text.PDOEventTimerAlarm) for PDOEventTimerAlarm
    pdo.o(.ARM.exidx.text.TPDO_Communication_Parameter_Callback) refers to pdo.o(.text.TPDO_Communication_Parameter_Callback) for [Anonymous Symbol]
    pdo.o(.text.PDOInit) refers to pdo.o(.text.TPDO_Communication_Parameter_Callback) for TPDO_Communication_Parameter_Callback
    pdo.o(.text.PDOInit) refers to pdo.o(.text._sendPDOevent) for _sendPDOevent
    pdo.o(.ARM.exidx.text.PDOInit) refers to pdo.o(.text.PDOInit) for [Anonymous Symbol]
    pdo.o(.text.PDOStop) refers to timer.o(.text.DelAlarm) for DelAlarm
    pdo.o(.ARM.exidx.text.PDOStop) refers to pdo.o(.text.PDOStop) for [Anonymous Symbol]
    pdo.o(.ARM.exidx.text.PDOEnable) refers to pdo.o(.text.PDOEnable) for [Anonymous Symbol]
    pdo.o(.ARM.exidx.text.PDODisable) refers to pdo.o(.text.PDODisable) for [Anonymous Symbol]
    sdo.o(.text.SDOTimeoutAlarm) refers to sdo.o(.text.sendSDOabort) for sendSDOabort
    sdo.o(.text.SDOTimeoutAlarm) refers to sdo.o(.text.resetSDOline) for resetSDOline
    sdo.o(.ARM.exidx.text.SDOTimeoutAlarm) refers to sdo.o(.text.SDOTimeoutAlarm) for [Anonymous Symbol]
    sdo.o(.text.sendSDOabort) refers to sdo.o(.text.sendSDO) for sendSDO
    sdo.o(.ARM.exidx.text.sendSDOabort) refers to sdo.o(.text.sendSDOabort) for [Anonymous Symbol]
    sdo.o(.text.resetSDOline) refers to sdo.o(.text.initSDOline) for initSDOline
    sdo.o(.ARM.exidx.text.resetSDOline) refers to sdo.o(.text.resetSDOline) for [Anonymous Symbol]
    sdo.o(.text.resetSDO) refers to sdo.o(.text.resetSDOline) for resetSDOline
    sdo.o(.ARM.exidx.text.resetSDO) refers to sdo.o(.text.resetSDO) for [Anonymous Symbol]
    sdo.o(.text.SDOlineToObjdict) refers to objacces.o(.text._setODentry) for _setODentry
    sdo.o(.ARM.exidx.text.SDOlineToObjdict) refers to sdo.o(.text.SDOlineToObjdict) for [Anonymous Symbol]
    sdo.o(.text.objdictToSDOline) refers to objacces.o(.text._getODentry) for _getODentry
    sdo.o(.ARM.exidx.text.objdictToSDOline) refers to sdo.o(.text.objdictToSDOline) for [Anonymous Symbol]
    sdo.o(.ARM.exidx.text.lineToSDO) refers to sdo.o(.text.lineToSDO) for [Anonymous Symbol]
    sdo.o(.ARM.exidx.text.SDOtoLine) refers to sdo.o(.text.SDOtoLine) for [Anonymous Symbol]
    sdo.o(.text.failedSDO) refers to sdo.o(.text.getSDOlineOnUse) for getSDOlineOnUse
    sdo.o(.text.failedSDO) refers to sdo.o(.text.resetSDOline) for resetSDOline
    sdo.o(.text.failedSDO) refers to timer.o(.text.DelAlarm) for DelAlarm
    sdo.o(.text.failedSDO) refers to sdo.o(.text.sendSDOabort) for sendSDOabort
    sdo.o(.ARM.exidx.text.failedSDO) refers to sdo.o(.text.failedSDO) for [Anonymous Symbol]
    sdo.o(.ARM.exidx.text.getSDOlineOnUse) refers to sdo.o(.text.getSDOlineOnUse) for [Anonymous Symbol]
    sdo.o(.text.initSDOline) refers to sdo.o(.text.SDOTimeoutAlarm) for SDOTimeoutAlarm
    sdo.o(.text.initSDOline) refers to timer.o(.text.SetAlarm) for SetAlarm
    sdo.o(.text.initSDOline) refers to timer.o(.text.DelAlarm) for DelAlarm
    sdo.o(.ARM.exidx.text.initSDOline) refers to sdo.o(.text.initSDOline) for [Anonymous Symbol]
    sdo.o(.ARM.exidx.text.getSDOfreeLine) refers to sdo.o(.text.getSDOfreeLine) for [Anonymous Symbol]
    sdo.o(.ARM.exidx.text.getSDOlineToClose) refers to sdo.o(.text.getSDOlineToClose) for [Anonymous Symbol]
    sdo.o(.text.closeSDOtransfer) refers to sdo.o(.text.GetSDOClientFromNodeId) for GetSDOClientFromNodeId
    sdo.o(.text.closeSDOtransfer) refers to sdo.o(.text.getSDOlineToClose) for getSDOlineToClose
    sdo.o(.text.closeSDOtransfer) refers to sdo.o(.text.resetSDOline) for resetSDOline
    sdo.o(.ARM.exidx.text.closeSDOtransfer) refers to sdo.o(.text.closeSDOtransfer) for [Anonymous Symbol]
    sdo.o(.ARM.exidx.text.GetSDOClientFromNodeId) refers to sdo.o(.text.GetSDOClientFromNodeId) for [Anonymous Symbol]
    sdo.o(.ARM.exidx.text.getSDOlineRestBytes) refers to sdo.o(.text.getSDOlineRestBytes) for [Anonymous Symbol]
    sdo.o(.ARM.exidx.text.setSDOlineRestBytes) refers to sdo.o(.text.setSDOlineRestBytes) for [Anonymous Symbol]
    sdo.o(.text.sendSDO) refers to flexcan_interrupt_transfer.o(.text.canSend) for canSend
    sdo.o(.ARM.exidx.text.sendSDO) refers to sdo.o(.text.sendSDO) for [Anonymous Symbol]
    sdo.o(.text.proceedSDO) refers to sdo.o(.text.failedSDO) for failedSDO
    sdo.o(.text.proceedSDO) refers to sdo.o(.text.getSDOlineOnUse) for getSDOlineOnUse
    sdo.o(.text.proceedSDO) refers to timer.o(.text.DelAlarm) for DelAlarm
    sdo.o(.text.proceedSDO) refers to sdo.o(.text.SDOTimeoutAlarm) for SDOTimeoutAlarm
    sdo.o(.text.proceedSDO) refers to timer.o(.text.SetAlarm) for SetAlarm
    sdo.o(.text.proceedSDO) refers to sdo.o(.text.SDOtoLine) for SDOtoLine
    sdo.o(.text.proceedSDO) refers to sdo.o(.text.sendSDO) for sendSDO
    sdo.o(.text.proceedSDO) refers to sdo.o(.text.SDOlineToObjdict) for SDOlineToObjdict
    sdo.o(.text.proceedSDO) refers to sdo.o(.text.resetSDOline) for resetSDOline
    sdo.o(.text.proceedSDO) refers to sdo.o(.text.getSDOfreeLine) for getSDOfreeLine
    sdo.o(.text.proceedSDO) refers to sdo.o(.text.initSDOline) for initSDOline
    sdo.o(.text.proceedSDO) refers to sdo.o(.text.setSDOlineRestBytes) for setSDOlineRestBytes
    sdo.o(.text.proceedSDO) refers to sdo.o(.text.getSDOlineRestBytes) for getSDOlineRestBytes
    sdo.o(.text.proceedSDO) refers to sdo.o(.text.lineToSDO) for lineToSDO
    sdo.o(.text.proceedSDO) refers to sdo.o(.text.objdictToSDOline) for objdictToSDOline
    sdo.o(.text.proceedSDO) refers to memcpy.o(.text) for memcpy
    sdo.o(.ARM.exidx.text.proceedSDO) refers to sdo.o(.text.proceedSDO) for [Anonymous Symbol]
    sdo.o(.text.resetClientSDOLineFromNodeId) refers to sdo.o(.text.GetSDOClientFromNodeId) for GetSDOClientFromNodeId
    sdo.o(.text.resetClientSDOLineFromNodeId) refers to sdo.o(.text.getSDOlineOnUse) for getSDOlineOnUse
    sdo.o(.text.resetClientSDOLineFromNodeId) refers to sdo.o(.text.resetSDOline) for resetSDOline
    sdo.o(.ARM.exidx.text.resetClientSDOLineFromNodeId) refers to sdo.o(.text.resetClientSDOLineFromNodeId) for [Anonymous Symbol]
    sdo.o(.text._writeNetworkDict) refers to sdo.o(.text.GetSDOClientFromNodeId) for GetSDOClientFromNodeId
    sdo.o(.text._writeNetworkDict) refers to sdo.o(.text.getSDOlineOnUse) for getSDOlineOnUse
    sdo.o(.text._writeNetworkDict) refers to sdo.o(.text.getSDOfreeLine) for getSDOfreeLine
    sdo.o(.text._writeNetworkDict) refers to sdo.o(.text.initSDOline) for initSDOline
    sdo.o(.text._writeNetworkDict) refers to sdo.o(.text.sendSDO) for sendSDO
    sdo.o(.text._writeNetworkDict) refers to sdo.o(.text.resetSDOline) for resetSDOline
    sdo.o(.ARM.exidx.text._writeNetworkDict) refers to sdo.o(.text._writeNetworkDict) for [Anonymous Symbol]
    sdo.o(.text.writeNetworkDict) refers to sdo.o(.text._writeNetworkDict) for _writeNetworkDict
    sdo.o(.ARM.exidx.text.writeNetworkDict) refers to sdo.o(.text.writeNetworkDict) for [Anonymous Symbol]
    sdo.o(.text.writeNetworkDictCallBack) refers to sdo.o(.text._writeNetworkDict) for _writeNetworkDict
    sdo.o(.ARM.exidx.text.writeNetworkDictCallBack) refers to sdo.o(.text.writeNetworkDictCallBack) for [Anonymous Symbol]
    sdo.o(.text.writeNetworkDictCallBackAI) refers to sdo.o(.text._writeNetworkDict) for _writeNetworkDict
    sdo.o(.ARM.exidx.text.writeNetworkDictCallBackAI) refers to sdo.o(.text.writeNetworkDictCallBackAI) for [Anonymous Symbol]
    sdo.o(.text._readNetworkDict) refers to sdo.o(.text.GetSDOClientFromNodeId) for GetSDOClientFromNodeId
    sdo.o(.text._readNetworkDict) refers to sdo.o(.text.getSDOlineOnUse) for getSDOlineOnUse
    sdo.o(.text._readNetworkDict) refers to sdo.o(.text.getSDOfreeLine) for getSDOfreeLine
    sdo.o(.text._readNetworkDict) refers to sdo.o(.text.initSDOline) for initSDOline
    sdo.o(.text._readNetworkDict) refers to sdo.o(.text.sendSDO) for sendSDO
    sdo.o(.text._readNetworkDict) refers to sdo.o(.text.resetSDOline) for resetSDOline
    sdo.o(.ARM.exidx.text._readNetworkDict) refers to sdo.o(.text._readNetworkDict) for [Anonymous Symbol]
    sdo.o(.text.readNetworkDict) refers to sdo.o(.text._readNetworkDict) for _readNetworkDict
    sdo.o(.ARM.exidx.text.readNetworkDict) refers to sdo.o(.text.readNetworkDict) for [Anonymous Symbol]
    sdo.o(.text.readNetworkDictCallback) refers to sdo.o(.text._readNetworkDict) for _readNetworkDict
    sdo.o(.ARM.exidx.text.readNetworkDictCallback) refers to sdo.o(.text.readNetworkDictCallback) for [Anonymous Symbol]
    sdo.o(.text.readNetworkDictCallbackAI) refers to sdo.o(.text._readNetworkDict) for _readNetworkDict
    sdo.o(.ARM.exidx.text.readNetworkDictCallbackAI) refers to sdo.o(.text.readNetworkDictCallbackAI) for [Anonymous Symbol]
    sdo.o(.text.getReadResultNetworkDict) refers to sdo.o(.text.GetSDOClientFromNodeId) for GetSDOClientFromNodeId
    sdo.o(.text.getReadResultNetworkDict) refers to sdo.o(.text.getSDOlineOnUse) for getSDOlineOnUse
    sdo.o(.text.getReadResultNetworkDict) refers to sdo.o(.text.resetSDOline) for resetSDOline
    sdo.o(.ARM.exidx.text.getReadResultNetworkDict) refers to sdo.o(.text.getReadResultNetworkDict) for [Anonymous Symbol]
    sdo.o(.text.getWriteResultNetworkDict) refers to sdo.o(.text.GetSDOClientFromNodeId) for GetSDOClientFromNodeId
    sdo.o(.text.getWriteResultNetworkDict) refers to sdo.o(.text.getSDOlineOnUse) for getSDOlineOnUse
    sdo.o(.text.getWriteResultNetworkDict) refers to sdo.o(.text.resetSDOline) for resetSDOline
    sdo.o(.ARM.exidx.text.getWriteResultNetworkDict) refers to sdo.o(.text.getWriteResultNetworkDict) for [Anonymous Symbol]
    states.o(.ARM.exidx.text.getState) refers to states.o(.text.getState) for [Anonymous Symbol]
    states.o(.text.canDispatch) refers to sync.o(.text.proceedSYNC) for proceedSYNC
    states.o(.text.canDispatch) refers to emcy.o(.text.proceedEMCY) for proceedEMCY
    states.o(.text.canDispatch) refers to pdo.o(.text.proceedPDO) for proceedPDO
    states.o(.text.canDispatch) refers to sdo.o(.text.proceedSDO) for proceedSDO
    states.o(.text.canDispatch) refers to lifegrd.o(.text.proceedNODE_GUARD) for proceedNODE_GUARD
    states.o(.text.canDispatch) refers to nmtslave.o(.text.proceedNMTstateChange) for proceedNMTstateChange
    states.o(.ARM.exidx.text.canDispatch) refers to states.o(.text.canDispatch) for [Anonymous Symbol]
    states.o(.text.switchCommunicationState) refers to sdo.o(.text.resetSDO) for resetSDO
    states.o(.text.switchCommunicationState) refers to sync.o(.text.startSYNC) for startSYNC
    states.o(.text.switchCommunicationState) refers to sync.o(.text.stopSYNC) for stopSYNC
    states.o(.text.switchCommunicationState) refers to lifegrd.o(.text.lifeGuardInit) for lifeGuardInit
    states.o(.text.switchCommunicationState) refers to lifegrd.o(.text.lifeGuardStop) for lifeGuardStop
    states.o(.text.switchCommunicationState) refers to emcy.o(.text.emergencyInit) for emergencyInit
    states.o(.text.switchCommunicationState) refers to emcy.o(.text.emergencyStop) for emergencyStop
    states.o(.text.switchCommunicationState) refers to pdo.o(.text.PDOInit) for PDOInit
    states.o(.text.switchCommunicationState) refers to pdo.o(.text.PDOStop) for PDOStop
    states.o(.text.switchCommunicationState) refers to nmtslave.o(.text.slaveSendBootUp) for slaveSendBootUp
    states.o(.ARM.exidx.text.switchCommunicationState) refers to states.o(.text.switchCommunicationState) for [Anonymous Symbol]
    states.o(.text.setState) refers to states.o(.text.switchCommunicationState) for switchCommunicationState
    states.o(.ARM.exidx.text.setState) refers to states.o(.text.setState) for [Anonymous Symbol]
    states.o(.ARM.exidx.text.getNodeId) refers to states.o(.text.getNodeId) for [Anonymous Symbol]
    states.o(.ARM.exidx.text.setNodeId) refers to states.o(.text.setNodeId) for [Anonymous Symbol]
    states.o(.ARM.exidx.text._initialisation) refers to states.o(.text._initialisation) for [Anonymous Symbol]
    states.o(.text._preOperational) refers to nmtmaster.o(.text.masterSendNMTstateChange) for masterSendNMTstateChange
    states.o(.ARM.exidx.text._preOperational) refers to states.o(.text._preOperational) for [Anonymous Symbol]
    states.o(.ARM.exidx.text._operational) refers to states.o(.text._operational) for [Anonymous Symbol]
    states.o(.ARM.exidx.text._stopped) refers to states.o(.text._stopped) for [Anonymous Symbol]
    sync.o(.text.SyncAlarm) refers to sync.o(.text.sendSYNC) for sendSYNC
    sync.o(.ARM.exidx.text.SyncAlarm) refers to sync.o(.text.SyncAlarm) for [Anonymous Symbol]
    sync.o(.text.sendSYNC) refers to sync.o(.text.sendSYNCMessage) for sendSYNCMessage
    sync.o(.text.sendSYNC) refers to sync.o(.text.proceedSYNC) for proceedSYNC
    sync.o(.ARM.exidx.text.sendSYNC) refers to sync.o(.text.sendSYNC) for [Anonymous Symbol]
    sync.o(.text.OnCOB_ID_SyncUpdate) refers to sync.o(.text.startSYNC) for startSYNC
    sync.o(.ARM.exidx.text.OnCOB_ID_SyncUpdate) refers to sync.o(.text.OnCOB_ID_SyncUpdate) for [Anonymous Symbol]
    sync.o(.text.startSYNC) refers to sync.o(.text.stopSYNC) for stopSYNC
    sync.o(.text.startSYNC) refers to sync.o(.text.OnCOB_ID_SyncUpdate) for OnCOB_ID_SyncUpdate
    sync.o(.text.startSYNC) refers to objacces.o(.text.RegisterSetODentryCallBack) for RegisterSetODentryCallBack
    sync.o(.text.startSYNC) refers to sync.o(.text.SyncAlarm) for SyncAlarm
    sync.o(.text.startSYNC) refers to timer.o(.text.SetAlarm) for SetAlarm
    sync.o(.ARM.exidx.text.startSYNC) refers to sync.o(.text.startSYNC) for [Anonymous Symbol]
    sync.o(.text.stopSYNC) refers to objacces.o(.text.RegisterSetODentryCallBack) for RegisterSetODentryCallBack
    sync.o(.text.stopSYNC) refers to timer.o(.text.DelAlarm) for DelAlarm
    sync.o(.ARM.exidx.text.stopSYNC) refers to sync.o(.text.stopSYNC) for [Anonymous Symbol]
    sync.o(.text.sendSYNCMessage) refers to flexcan_interrupt_transfer.o(.text.canSend) for canSend
    sync.o(.ARM.exidx.text.sendSYNCMessage) refers to sync.o(.text.sendSYNCMessage) for [Anonymous Symbol]
    sync.o(.text.proceedSYNC) refers to pdo.o(.text._sendPDOevent) for _sendPDOevent
    sync.o(.ARM.exidx.text.proceedSYNC) refers to sync.o(.text.proceedSYNC) for [Anonymous Symbol]
    sync.o(.ARM.exidx.text._post_sync) refers to sync.o(.text._post_sync) for [Anonymous Symbol]
    sync.o(.ARM.exidx.text._post_TPDO) refers to sync.o(.text._post_TPDO) for [Anonymous Symbol]
    timer.o(.text.SetAlarm) refers to timer.o(.bss.timers) for timers
    timer.o(.text.SetAlarm) refers to timer.o(.data.last_timer_raw) for last_timer_raw
    timer.o(.text.SetAlarm) refers to flexcan_interrupt_transfer.o(.text.getElapsedTime) for getElapsedTime
    timer.o(.text.SetAlarm) refers to timer.o(.data.total_sleep_time) for total_sleep_time
    timer.o(.text.SetAlarm) refers to flexcan_interrupt_transfer.o(.text.setTimer) for setTimer
    timer.o(.ARM.exidx.text.SetAlarm) refers to timer.o(.text.SetAlarm) for [Anonymous Symbol]
    timer.o(.text.DelAlarm) refers to timer.o(.data.last_timer_raw) for last_timer_raw
    timer.o(.text.DelAlarm) refers to timer.o(.bss.timers) for timers
    timer.o(.ARM.exidx.text.DelAlarm) refers to timer.o(.text.DelAlarm) for [Anonymous Symbol]
    timer.o(.text.TimeDispatch) refers to flexcan_interrupt_transfer.o(.text.getElapsedTime) for getElapsedTime
    timer.o(.text.TimeDispatch) refers to timer.o(.data.total_sleep_time) for total_sleep_time
    timer.o(.text.TimeDispatch) refers to timer.o(.bss.timers) for timers
    timer.o(.text.TimeDispatch) refers to timer.o(.data.last_timer_raw) for last_timer_raw
    timer.o(.text.TimeDispatch) refers to flexcan_interrupt_transfer.o(.text.setTimer) for setTimer
    timer.o(.ARM.exidx.text.TimeDispatch) refers to timer.o(.text.TimeDispatch) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    event_groups.o(.text.xEventGroupCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    event_groups.o(.ARM.exidx.text.xEventGroupCreate) refers to event_groups.o(.text.xEventGroupCreate) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSync) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.ARM.exidx.text.xEventGroupSetBits) refers to event_groups.o(.text.xEventGroupSetBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupWaitBits) refers to event_groups.o(.text.prvTestWaitCondition) for prvTestWaitCondition
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupWaitBits) refers to event_groups.o(.text.xEventGroupWaitBits) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.prvTestWaitCondition) refers to event_groups.o(.text.prvTestWaitCondition) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupClearBits) refers to event_groups.o(.text.xEventGroupClearBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBitsFromISR) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for vEventGroupClearBitsCallback
    event_groups.o(.text.xEventGroupClearBitsFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for xTimerPendFunctionCallFromISR
    event_groups.o(.ARM.exidx.text.xEventGroupClearBitsFromISR) refers to event_groups.o(.text.xEventGroupClearBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.vEventGroupDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    event_groups.o(.ARM.exidx.text.vEventGroupDelete) refers to event_groups.o(.text.vEventGroupDelete) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBitsFromISR) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for vEventGroupSetBitsCallback
    event_groups.o(.text.xEventGroupSetBitsFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for xTimerPendFunctionCallFromISR
    event_groups.o(.ARM.exidx.text.xEventGroupSetBitsFromISR) refers to event_groups.o(.text.xEventGroupSetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber) refers to event_groups.o(.text.uxEventGroupGetNumber) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.vEventGroupSetNumber) refers to event_groups.o(.text.vEventGroupSetNumber) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseNewQueue) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.prvInitialiseMutex) refers to queue.o(.text.prvInitialiseMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.prvCopyDataToQueue) refers to memcpy.o(.text) for memcpy
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueFull) refers to queue.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to memcpy.o(.text) for memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to queue.o(.text.vQueueUnregisterQueue) for vQueueUnregisterQueue
    queue.o(.text.vQueueDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.text.vQueueUnregisterQueue) refers to queue.o(.bss.xQueueRegistry) for xQueueRegistry
    queue.o(.ARM.exidx.text.vQueueUnregisterQueue) refers to queue.o(.text.vQueueUnregisterQueue) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueAddToRegistry) refers to queue.o(.bss.xQueueRegistry) for xQueueRegistry
    queue.o(.ARM.exidx.text.vQueueAddToRegistry) refers to queue.o(.text.vQueueAddToRegistry) for [Anonymous Symbol]
    queue.o(.text.pcQueueGetName) refers to queue.o(.bss.xQueueRegistry) for xQueueRegistry
    queue.o(.ARM.exidx.text.pcQueueGetName) refers to queue.o(.text.pcQueueGetName) for [Anonymous Symbol]
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.vQueueWaitForMessageRestricted) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    stream_buffer.o(.text.xStreamBufferGenericCreate) refers to stream_buffer.o(.text.prvInitialiseNewStreamBuffer) for prvInitialiseNewStreamBuffer
    stream_buffer.o(.ARM.exidx.text.xStreamBufferGenericCreate) refers to stream_buffer.o(.text.xStreamBufferGenericCreate) for [Anonymous Symbol]
    stream_buffer.o(.text.prvInitialiseNewStreamBuffer) refers to memset.o(.text) for memset
    stream_buffer.o(.ARM.exidx.text.prvInitialiseNewStreamBuffer) refers to stream_buffer.o(.text.prvInitialiseNewStreamBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.vStreamBufferDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    stream_buffer.o(.text.vStreamBufferDelete) refers to memset.o(.text) for memset
    stream_buffer.o(.ARM.exidx.text.vStreamBufferDelete) refers to stream_buffer.o(.text.vStreamBufferDelete) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferReset) refers to stream_buffer.o(.text.prvInitialiseNewStreamBuffer) for prvInitialiseNewStreamBuffer
    stream_buffer.o(.text.xStreamBufferReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReset) refers to stream_buffer.o(.text.xStreamBufferReset) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSetTriggerLevel) refers to stream_buffer.o(.text.xStreamBufferSetTriggerLevel) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSpacesAvailable) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferBytesAvailable) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.ARM.exidx.text.xStreamBufferBytesAvailable) refers to stream_buffer.o(.text.xStreamBufferBytesAvailable) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.prvBytesInBuffer) refers to stream_buffer.o(.text.prvBytesInBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.vTaskSetTimeOutState) for vTaskSetTimeOutState
    stream_buffer.o(.text.xStreamBufferSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferSend) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for xTaskGenericNotifyStateClear
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    stream_buffer.o(.text.xStreamBufferSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    stream_buffer.o(.text.xStreamBufferSend) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for prvWriteMessageToBuffer
    stream_buffer.o(.text.xStreamBufferSend) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSend) refers to stream_buffer.o(.text.xStreamBufferSend) for [Anonymous Symbol]
    stream_buffer.o(.text.prvWriteMessageToBuffer) refers to stream_buffer.o(.text.prvWriteBytesToBuffer) for prvWriteBytesToBuffer
    stream_buffer.o(.ARM.exidx.text.prvWriteMessageToBuffer) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for prvWriteMessageToBuffer
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.xStreamBufferSendFromISR) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferReceive) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for xTaskGenericNotifyStateClear
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    stream_buffer.o(.text.xStreamBufferReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    stream_buffer.o(.text.xStreamBufferReceive) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for prvReadMessageFromBuffer
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceive) refers to stream_buffer.o(.text.xStreamBufferReceive) for [Anonymous Symbol]
    stream_buffer.o(.text.prvReadMessageFromBuffer) refers to stream_buffer.o(.text.prvReadBytesFromBuffer) for prvReadBytesFromBuffer
    stream_buffer.o(.ARM.exidx.text.prvReadMessageFromBuffer) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(.text.prvReadBytesFromBuffer) for prvReadBytesFromBuffer
    stream_buffer.o(.ARM.exidx.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) for [Anonymous Symbol]
    stream_buffer.o(.text.prvReadBytesFromBuffer) refers to memcpy.o(.text) for memcpy
    stream_buffer.o(.ARM.exidx.text.prvReadBytesFromBuffer) refers to stream_buffer.o(.text.prvReadBytesFromBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for prvReadMessageFromBuffer
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.xStreamBufferReceiveFromISR) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferIsEmpty) refers to stream_buffer.o(.text.xStreamBufferIsEmpty) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferIsFull) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(.ARM.exidx.text.xStreamBufferIsFull) refers to stream_buffer.o(.text.xStreamBufferIsFull) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSendCompletedFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSendCompletedFromISR) refers to stream_buffer.o(.text.xStreamBufferSendCompletedFromISR) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveCompletedFromISR) refers to stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.uxStreamBufferGetStreamBufferNumber) refers to stream_buffer.o(.text.uxStreamBufferGetStreamBufferNumber) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.vStreamBufferSetStreamBufferNumber) refers to stream_buffer.o(.text.vStreamBufferSetStreamBufferNumber) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.ucStreamBufferGetStreamBufferType) refers to stream_buffer.o(.text.ucStreamBufferGetStreamBufferType) for [Anonymous Symbol]
    stream_buffer.o(.text.prvWriteBytesToBuffer) refers to memcpy.o(.text) for memcpy
    stream_buffer.o(.ARM.exidx.text.prvWriteBytesToBuffer) refers to stream_buffer.o(.text.prvWriteBytesToBuffer) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to memset.o(.text) for memset
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseNewTask) refers to memset.o(.text) for memset
    tasks.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.prvDeleteTCB) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended) refers to tasks.o(.text.prvTaskIsTaskSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.str1.1) for .L.str
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    tasks.o(.text.vTaskStartScheduler) refers to timers.o(.text.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.uxTopUsedPriority) for uxTopUsedPriority
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.prvListTasksWithinSingleList) refers to tasks.o(.text.vTaskGetInfo) for vTaskGetInfo
    tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList) refers to tasks.o(.text.prvListTasksWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetThreadLocalStoragePointer) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskSetThreadLocalStoragePointer) refers to tasks.o(.text.vTaskSetThreadLocalStoragePointer) for [Anonymous Symbol]
    tasks.o(.text.pvTaskGetThreadLocalStoragePointer) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskGetThreadLocalStoragePointer) refers to tasks.o(.text.pvTaskGetThreadLocalStoragePointer) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.ulTaskGenericNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.text.vTaskGenericNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.text.ulTaskGenericNotifyValueClear) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvTimerTask) for prvTimerTask
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.rodata.str1.1) for .L.str
    timers.o(.text.xTimerCreateTimerTask) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    timers.o(.ARM.exidx.text.xTimerCreateTimerTask) refers to timers.o(.text.xTimerCreateTimerTask) for [Anonymous Symbol]
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList1) for xActiveTimerList1
    timers.o(.text.prvCheckForValidListAndQueue) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList2) for xActiveTimerList2
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.rodata.str1.1) for .L.str.1
    timers.o(.text.prvCheckForValidListAndQueue) refers to queue.o(.text.vQueueAddToRegistry) for vQueueAddToRegistry
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue) refers to timers.o(.text.prvCheckForValidListAndQueue) for [Anonymous Symbol]
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvGetNextExpireTime) for prvGetNextExpireTime
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for prvProcessTimerOrBlockTask
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessReceivedCommands) for prvProcessReceivedCommands
    timers.o(.ARM.exidx.text.prvTimerTask) refers to timers.o(.text.prvTimerTask) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    timers.o(.text.xTimerCreate) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreate) refers to timers.o(.text.xTimerCreate) for [Anonymous Symbol]
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.prvInitialiseNewTimer) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    timers.o(.ARM.exidx.text.prvInitialiseNewTimer) refers to timers.o(.text.prvInitialiseNewTimer) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommand) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerGenericCommand) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerGenericCommand) refers to timers.o(.text.xTimerGenericCommand) for [Anonymous Symbol]
    timers.o(.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetPeriod) refers to timers.o(.text.xTimerGetPeriod) for [Anonymous Symbol]
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetReloadMode) refers to timers.o(.text.vTimerSetReloadMode) for [Anonymous Symbol]
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.text.uxTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for xTimerGetReloadMode
    timers.o(.ARM.exidx.text.uxTimerGetReloadMode) refers to timers.o(.text.uxTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetExpiryTime) refers to timers.o(.text.xTimerGetExpiryTime) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.pcTimerGetName) refers to timers.o(.text.pcTimerGetName) for [Anonymous Symbol]
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerIsTimerActive) refers to timers.o(.text.xTimerIsTimerActive) for [Anonymous Symbol]
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.pvTimerGetTimerID) refers to timers.o(.text.pvTimerGetTimerID) for [Anonymous Symbol]
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetTimerID) refers to timers.o(.text.vTimerSetTimerID) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCall) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCall) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.ARM.exidx.text.xTimerPendFunctionCall) refers to timers.o(.text.xTimerPendFunctionCall) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.uxTimerGetTimerNumber) refers to timers.o(.text.uxTimerGetTimerNumber) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.vTimerSetTimerNumber) refers to timers.o(.text.vTimerSetTimerNumber) for [Anonymous Symbol]
    timers.o(.text.prvGetNextExpireTime) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvGetNextExpireTime) refers to timers.o(.text.prvGetNextExpireTime) for [Anonymous Symbol]
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessTimerOrBlockTask) refers to queue.o(.text.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for [Anonymous Symbol]
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessReceivedCommands) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    timers.o(.text.prvProcessReceivedCommands) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.text.prvProcessReceivedCommands) refers to heap_4.o(.text.vPortFree) for vPortFree
    timers.o(.ARM.exidx.text.prvProcessReceivedCommands) refers to timers.o(.text.prvProcessReceivedCommands) for [Anonymous Symbol]
    timers.o(.text.prvSampleTimeNow) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.bss.prvSampleTimeNow.xLastTime) for prvSampleTimeNow.xLastTime
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.text.prvSwitchTimerLists) for prvSwitchTimerLists
    timers.o(.ARM.exidx.text.prvSampleTimeNow) refers to timers.o(.text.prvSampleTimeNow) for [Anonymous Symbol]
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvProcessExpiredTimer) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.ARM.exidx.text.prvProcessExpiredTimer) refers to timers.o(.text.prvProcessExpiredTimer) for [Anonymous Symbol]
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.ARM.exidx.text.prvSwitchTimerLists) refers to timers.o(.text.prvSwitchTimerLists) for [Anonymous Symbol]
    timers.o(.text.prvReloadTimer) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.ARM.exidx.text.prvReloadTimer) refers to timers.o(.text.prvReloadTimer) for [Anonymous Symbol]
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvInsertTimerInActiveList) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvInsertTimerInActiveList) refers to timers.o(.text.prvInsertTimerInActiveList) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.text.prvTaskExitError) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortEnableVFP) for vPortEnableVFP
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_mimxrt1176_cm7.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEnableVFP) refers to port.o(.text.vPortEnableVFP) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.text.vPortEndScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.SysTick_Handler) refers to port.o(.text.SysTick_Handler) for [Anonymous Symbol]
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.ARM.exidx.text.vPortValidateInterruptPriority) refers to port.o(.text.vPortValidateInterruptPriority) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvHeapInit) for prvHeapInit
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.pvPortMalloc) refers to heap_4.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.ucHeap) for ucHeap
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.prvHeapInit) refers to heap_4.o(.text.prvHeapInit) for [Anonymous Symbol]
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for [Anonymous Symbol]
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortFree) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.vPortFree) refers to heap_4.o(.text.vPortFree) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetFreeHeapSize) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_4.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_4.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_4.o(.text.pvPortCalloc) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    heap_4.o(.text.pvPortCalloc) refers to memset.o(.text) for memset
    heap_4.o(.ARM.exidx.text.pvPortCalloc) refers to heap_4.o(.text.pvPortCalloc) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    heap_4.o(.ARM.exidx.text.vPortGetHeapStats) refers to heap_4.o(.text.vPortGetHeapStats) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry4.o(.ARM.Collect$$$$00000003) for _main_stk
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    malloc2.o(i.__free$2region) refers to mvars.o(.data) for __microlib_freelist
    malloc2.o(i.__malloc$2region) refers to mvars.o(.data) for __microlib_freelist_initialised
    malloc2.o(i.__malloc$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocr2.o(i.__free$realloc$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocr2.o(i.__malloc$realloc$2region) refers to mallocr2.o(i.internal_alloc) for internal_alloc
    mallocr2.o(i.__malloc$realloc$2region) refers to mvars.o(.data) for __microlib_freelist_initialised
    mallocr2.o(i.__malloc$realloc$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocr2.o(i.__realloc$2region) refers to mallocr2.o(i.__free$realloc$2region) for __free$realloc$2region
    mallocr2.o(i.__realloc$2region) refers to mallocr2.o(i.internal_alloc) for internal_alloc
    mallocr2.o(i.__realloc$2region) refers to mallocr2.o(i.__malloc$realloc$2region) for __malloc$realloc$2region
    mallocr2.o(i.__realloc$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocr2.o(i.internal_alloc) refers to memcpy.o(.text) for __aeabi_memcpy
    mallocr2.o(i.internal_alloc) refers to mvars.o(.data) for __microlib_freelist
    malloca2.o(i.__aligned_malloc$2region) refers to mvars.o(.data) for __microlib_freelist_initialised
    malloca2.o(i.__aligned_malloc$2region) refers to mvars.o(.data) for __microlib_freelist
    malloca2.o(i.__free$memalign$2region) refers to mvars.o(.data) for __microlib_freelist
    malloca2.o(i.__malloc$memalign$2region) refers to malloca2.o(i.__aligned_malloc$2region) for __aligned_malloc$2region
    mallocra2.o(i.__aligned_malloc$realloc$2region) refers to mallocra2.o(i.internal_alloc) for internal_alloc
    mallocra2.o(i.__aligned_malloc$realloc$2region) refers to mvars.o(.data) for __microlib_freelist_initialised
    mallocra2.o(i.__aligned_malloc$realloc$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocra2.o(i.__free$realloc$memalign$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocra2.o(i.__malloc$realloc$memalign$2region) refers to mallocra2.o(i.__aligned_malloc$realloc$2region) for __aligned_malloc$realloc$2region
    mallocra2.o(i.__realloc$memalign$2region) refers to mallocra2.o(i.__free$realloc$memalign$2region) for __free$realloc$memalign$2region
    mallocra2.o(i.__realloc$memalign$2region) refers to mallocra2.o(i.internal_alloc) for internal_alloc
    mallocra2.o(i.__realloc$memalign$2region) refers to mallocra2.o(i.__malloc$realloc$memalign$2region) for __malloc$realloc$memalign$2region
    mallocra2.o(i.__realloc$memalign$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocra2.o(i.internal_alloc) refers to memcpy.o(.text) for __aeabi_memcpy
    mallocra2.o(i.internal_alloc) refers to mvars.o(.data) for __microlib_freelist
    errno.o(i.__aeabi_errno_addr) refers to errno.o(.data) for .data
    errno.o(i.__read_errno) refers to errno.o(.data) for .data
    errno.o(i.__set_errno) refers to errno.o(.data) for .data
    strtoul.o(.text) refers to errno.o(i.__aeabi_errno_addr) for __aeabi_errno_addr
    strtoul.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    strtoul.o(.text) refers to _strtoul.o(.text) for _strtoul
    entry4.o(.ARM.Collect$$$$00000003) refers to entry4.o(.ARM.Collect$$$$00002714) for __lit__00000000
    entry4.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to flexcan_interrupt_transfer.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to flexcan_interrupt_transfer.o(.text.main) for main
    ctype_o.o(.text) refers to ctype_o.o(.constdata) for .constdata
    ctype_o.o(.constdata) refers to ctype_o.o(.constdata) for __ctype_table
    isalnum_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isalpha_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isblank_o.o(.text) refers to ctype_o.o(.constdata) for __ctype_table
    iscntrl_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isdigit_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isgraph_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    islower_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isprint_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    ispunct_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isspace_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isupper_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isxdigit_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    _strtoul.o(.text) refers to _chval.o(.text) for _chval
    _strtoul.o(.text) refers to errno.o(i.__aeabi_errno_addr) for __aeabi_errno_addr
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload


==============================================================================

Removing Unused input sections from the image.

    Removing flexcan_interrupt_transfer.o(.text), (0 bytes).
    Removing flexcan_interrupt_transfer.o(.text.canChangeBaudRate_driver), (12 bytes).
    Removing flexcan_interrupt_transfer.o(.ARM.exidx.text.canChangeBaudRate_driver), (8 bytes).
    Removing flexcan_interrupt_transfer.o(.ARM.exidx.text.setTimer), (8 bytes).
    Removing flexcan_interrupt_transfer.o(.ARM.exidx.text.getElapsedTime), (8 bytes).
    Removing flexcan_interrupt_transfer.o(.ARM.exidx.text.canSend), (8 bytes).
    Removing flexcan_interrupt_transfer.o(.ARM.exidx.text.GPT2_IRQHandler), (8 bytes).
    Removing flexcan_interrupt_transfer.o(.ARM.exidx.text.GPT_ClearStatusFlags), (8 bytes).
    Removing flexcan_interrupt_transfer.o(.ARM.exidx.text.main), (8 bytes).
    Removing flexcan_interrupt_transfer.o(.ARM.exidx.text.BSP_Init), (8 bytes).
    Removing flexcan_interrupt_transfer.o(.ARM.exidx.text.AppTaskCreate), (8 bytes).
    Removing flexcan_interrupt_transfer.o(.ARM.exidx.text.GPT_SetClockDivider), (8 bytes).
    Removing flexcan_interrupt_transfer.o(.ARM.exidx.text.GPT_SetOutputCompareValue), (8 bytes).
    Removing flexcan_interrupt_transfer.o(.ARM.exidx.text.GPT_EnableInterrupts), (8 bytes).
    Removing flexcan_interrupt_transfer.o(.ARM.exidx.text.EnableIRQ), (8 bytes).
    Removing flexcan_interrupt_transfer.o(.ARM.exidx.text.GPT_StartTimer), (8 bytes).
    Removing flexcan_interrupt_transfer.o(.ARM.exidx.text.CLOCK_SetRootClock), (8 bytes).
    Removing flexcan_interrupt_transfer.o(.ARM.exidx.text.CLOCK_GetRootClockFreq), (8 bytes).
    Removing flexcan_interrupt_transfer.o(.ARM.exidx.text.flexcan_callback), (8 bytes).
    Removing flexcan_interrupt_transfer.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing flexcan_interrupt_transfer.o(.ARM.exidx.text.CLOCK_GetRootClockMux), (8 bytes).
    Removing flexcan_interrupt_transfer.o(.ARM.exidx.text.CLOCK_GetRootClockDiv), (8 bytes).
    Removing flexcan_interrupt_transfer.o(.ARM.exidx.text.App_Task), (8 bytes).
    Removing flexcan_interrupt_transfer.o(.bss.node_type), (1 bytes).
    Removing flexcan_interrupt_transfer.o(.ARM.use_no_argv), (4 bytes).
    Removing master.o(.text), (0 bytes).
    Removing master.o(.ARM.exidx.text.Master_valueRangeTest), (8 bytes).
    Removing master.o(.ARM.exidx.text.Master_scanIndexOD), (8 bytes).
    Removing master.o(.data.Master_Index1003), (32 bytes).
    Removing pin_mux.o(.text), (0 bytes).
    Removing pin_mux.o(.text.BOARD_InitBootPins), (8 bytes).
    Removing pin_mux.o(.ARM.exidx.text.BOARD_InitBootPins), (8 bytes).
    Removing pin_mux.o(.ARM.exidx.text.BOARD_InitPins), (8 bytes).
    Removing pin_mux.o(.ARM.exidx.text.CLOCK_EnableClock), (8 bytes).
    Removing pin_mux.o(.ARM.exidx.text.IOMUXC_SetPinMux), (8 bytes).
    Removing pin_mux.o(.ARM.exidx.text.IOMUXC_SetPinConfig), (8 bytes).
    Removing pin_mux.o(.ARM.exidx.text.CLOCK_ControlGate), (8 bytes).
    Removing board.o(.text), (0 bytes).
    Removing board.o(.ARM.exidx.text.BOARD_DebugConsoleSrcFreq), (8 bytes).
    Removing board.o(.ARM.exidx.text.CLOCK_GetRootClockFreq), (8 bytes).
    Removing board.o(.ARM.exidx.text.BOARD_InitDebugConsole), (8 bytes).
    Removing board.o(.ARM.exidx.text.BOARD_ConfigMPU), (8 bytes).
    Removing board.o(.ARM.exidx.text.ARM_MPU_Disable), (8 bytes).
    Removing board.o(.ARM.exidx.text.ARM_MPU_Enable), (8 bytes).
    Removing board.o(.text.BOARD_SD_Pin_Config), (10 bytes).
    Removing board.o(.ARM.exidx.text.BOARD_SD_Pin_Config), (8 bytes).
    Removing board.o(.text.BOARD_MMC_Pin_Config), (10 bytes).
    Removing board.o(.ARM.exidx.text.BOARD_MMC_Pin_Config), (8 bytes).
    Removing board.o(.ARM.exidx.text.CLOCK_GetRootClockMux), (8 bytes).
    Removing board.o(.ARM.exidx.text.CLOCK_GetRootClockDiv), (8 bytes).
    Removing clock_config.o(.text), (0 bytes).
    Removing clock_config.o(.text.BOARD_InitBootClocks), (8 bytes).
    Removing clock_config.o(.ARM.exidx.text.BOARD_InitBootClocks), (8 bytes).
    Removing clock_config.o(.ARM.exidx.text.BOARD_BootClockRUN), (8 bytes).
    Removing clock_config.o(.ARM.exidx.text.DCDC_SetVDD1P0BuckModeTargetVoltage), (8 bytes).
    Removing clock_config.o(.ARM.exidx.text.CLOCK_OSC_GateOscRc400M), (8 bytes).
    Removing clock_config.o(.ARM.exidx.text.CLOCK_OSC_EnableOsc48M), (8 bytes).
    Removing clock_config.o(.ARM.exidx.text.CLOCK_OSC_EnableOsc48MDiv2), (8 bytes).
    Removing clock_config.o(.ARM.exidx.text.CLOCK_SetRootClock), (8 bytes).
    Removing clock_config.o(.ARM.exidx.text.IOMUXC_SetSaiMClkClockSource), (8 bytes).
    Removing clock_config.o(.ARM.exidx.text.IOMUXC_MQSConfig), (8 bytes).
    Removing clock_config.o(.ARM.exidx.text.CLOCK_GetRootClockFreq), (8 bytes).
    Removing clock_config.o(.text.BOARD_BootClockRUN_800M), (2258 bytes).
    Removing clock_config.o(.ARM.exidx.text.BOARD_BootClockRUN_800M), (8 bytes).
    Removing clock_config.o(.ARM.exidx.text.CLOCK_GetRootClockMux), (8 bytes).
    Removing clock_config.o(.ARM.exidx.text.CLOCK_GetRootClockDiv), (8 bytes).
    Removing clock_config.o(.rodata.armPllConfig_BOARD_BootClockRUN_800M), (8 bytes).
    Removing clock_config.o(.rodata.sysPll2Config_BOARD_BootClockRUN_800M), (12 bytes).
    Removing clock_config.o(.rodata.videoPllConfig_BOARD_BootClockRUN_800M), (20 bytes).
    Removing dcd.o(.text), (0 bytes).
    Removing dcd.o(.rodata.dcd_data), (1 bytes).
    Removing fsl_str.o(.text), (0 bytes).
    Removing fsl_str.o(.text.StrFormatPrintf), (720 bytes).
    Removing fsl_str.o(.ARM.exidx.text.StrFormatPrintf), (8 bytes).
    Removing fsl_str.o(.text.PrintGetWidth), (102 bytes).
    Removing fsl_str.o(.ARM.exidx.text.PrintGetWidth), (8 bytes).
    Removing fsl_str.o(.text.PrintGetPrecision), (146 bytes).
    Removing fsl_str.o(.ARM.exidx.text.PrintGetPrecision), (8 bytes).
    Removing fsl_str.o(.text.PrintFilterLengthFlag), (80 bytes).
    Removing fsl_str.o(.ARM.exidx.text.PrintFilterLengthFlag), (8 bytes).
    Removing fsl_str.o(.text.PrintIsdi), (42 bytes).
    Removing fsl_str.o(.ARM.exidx.text.PrintIsdi), (8 bytes).
    Removing fsl_str.o(.text.ConvertRadixNumToString), (188 bytes).
    Removing fsl_str.o(.ARM.exidx.text.ConvertRadixNumToString), (8 bytes).
    Removing fsl_str.o(.text.PrintOutputdifFobpu), (84 bytes).
    Removing fsl_str.o(.ARM.exidx.text.PrintOutputdifFobpu), (8 bytes).
    Removing fsl_str.o(.text.PrintIsfF), (42 bytes).
    Removing fsl_str.o(.ARM.exidx.text.PrintIsfF), (8 bytes).
    Removing fsl_str.o(.text.PrintIsxX), (42 bytes).
    Removing fsl_str.o(.ARM.exidx.text.PrintIsxX), (8 bytes).
    Removing fsl_str.o(.text.PrintOutputxX), (84 bytes).
    Removing fsl_str.o(.ARM.exidx.text.PrintOutputxX), (8 bytes).
    Removing fsl_str.o(.text.PrintIsobpu), (62 bytes).
    Removing fsl_str.o(.ARM.exidx.text.PrintIsobpu), (8 bytes).
    Removing fsl_str.o(.text.PrintGetRadixFromobpu), (80 bytes).
    Removing fsl_str.o(.ARM.exidx.text.PrintGetRadixFromobpu), (8 bytes).
    Removing fsl_str.o(.text.StrFormatScanf), (716 bytes).
    Removing fsl_str.o(.ARM.exidx.text.StrFormatScanf), (8 bytes).
    Removing fsl_str.o(.text.ScanIgnoreWhiteSpace), (68 bytes).
    Removing fsl_str.o(.ARM.exidx.text.ScanIgnoreWhiteSpace), (8 bytes).
    Removing fsl_str.o(.text.StrFormatScanIsFormatStarting), (58 bytes).
    Removing fsl_str.o(.ARM.exidx.text.StrFormatScanIsFormatStarting), (8 bytes).
    Removing fsl_str.o(.text.StrFormatScanfStringHandling), (438 bytes).
    Removing fsl_str.o(.ARM.exidx.text.StrFormatScanfStringHandling), (8 bytes).
    Removing fsl_str.o(.text.ScanIsWhiteSpace), (82 bytes).
    Removing fsl_str.o(.ARM.exidx.text.ScanIsWhiteSpace), (8 bytes).
    Removing fsl_str.o(.text.StrFormatScanGetBase), (82 bytes).
    Removing fsl_str.o(.ARM.exidx.text.StrFormatScanGetBase), (8 bytes).
    Removing fsl_str.o(.text.StrFormatScanCheckSymbol), (76 bytes).
    Removing fsl_str.o(.ARM.exidx.text.StrFormatScanCheckSymbol), (8 bytes).
    Removing fsl_str.o(.text.StrFormatScanFillInteger), (58 bytes).
    Removing fsl_str.o(.ARM.exidx.text.StrFormatScanFillInteger), (8 bytes).
    Removing fsl_debug_console.o(.text), (0 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Init), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_Deinit), (54 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Deinit), (8 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Printf), (8 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Vprintf), (8 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_PrintfFormattedData), (8 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Putchar), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_Scanf), (206 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Scanf), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_Getchar), (72 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Getchar), (8 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_ConvertRadixNumToString), (8 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_PrintfPaddingCharacter), (8 bytes).
    Removing fsl_assert.o(.text), (0 bytes).
    Removing fsl_assert.o(.ARM.exidx.text.__aeabi_assert), (8 bytes).
    Removing fsl_flexcan.o(.text), (0 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_GetInstance), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_EnterFreezeMode), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_ExitFreezeMode), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_ClearStatusFlags), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_SetBitRate), (50 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetBitRate), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_CalculateImprovedTimingValues), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetTimingConfig), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_SetFDBitRate), (62 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetFDBitRate), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_FDCalculateImprovedTimingValues), (382 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_FDCalculateImprovedTimingValues), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_SetFDTimingConfig), (194 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetFDTimingConfig), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_Init), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.CLOCK_EnableClock), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_Enable), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_Reset), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_FDInit), (660 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_FDInit), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_Deinit), (48 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_Deinit), (8 bytes).
    Removing fsl_flexcan.o(.text.CLOCK_DisableClock), (24 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.CLOCK_DisableClock), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_GetDefaultConfig), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_SetRxMbGlobalMask), (42 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetRxMbGlobalMask), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_SetRxFifoGlobalMask), (30 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetRxFifoGlobalMask), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_SetRxIndividualMask), (88 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetRxIndividualMask), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetTxMbConfig), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_IsMbOccupied), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_GetSegments), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_FDGetSegments), (370 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_FDGetSegments), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_CalculateImprovedNominalTimingValues), (498 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_CalculateImprovedNominalTimingValues), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetFDTxMbConfig), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_GetFDMailboxOffset), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetRxMbConfig), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_SetFDRxMbConfig), (378 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetFDRxMbConfig), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_SetRxFifoConfig), (712 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SetRxFifoConfig), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_EnableRxFifoDMA), (72 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_EnableRxFifoDMA), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_GetMemoryErrorReportStatus), (312 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_GetMemoryErrorReportStatus), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_WriteTxMb), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_WriteFDTxMb), (440 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_WriteFDTxMb), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_ReadRxMb), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_ReadFDRxMb), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_ReadRxFifo), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_TransferSendBlocking), (188 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferSendBlocking), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_GetMbStatusFlags), (40 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_GetMbStatusFlags), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_ClearMbStatusFlags), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_TransferReceiveBlocking), (150 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferReceiveBlocking), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_TransferFDSendBlocking), (200 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferFDSendBlocking), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_TransferFDReceiveBlocking), (150 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferFDReceiveBlocking), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_TransferReceiveFifoBlocking), (54 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferReceiveFifoBlocking), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferCreateHandle), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferHandleIRQ), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_EnableInterrupts), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_DisableInterrupts), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.EnableIRQ), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferSendNonBlocking), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_EnableMbInterrupts), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferReceiveNonBlocking), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_TransferFDSendNonBlocking), (344 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferFDSendNonBlocking), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_TransferFDReceiveNonBlocking), (286 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferFDReceiveNonBlocking), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_TransferReceiveFifoNonBlocking), (180 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferReceiveFifoNonBlocking), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_TransferGetReceiveFifoCount), (84 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferGetReceiveFifoCount), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferAbortSend), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_DisableMbInterrupts), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferFDAbortSend), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferFDAbortReceive), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferAbortReceive), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_TransferAbortReceiveFifo), (8 bytes).
    Removing fsl_flexcan.o(.text.FLEXCAN_GetTimeStamp), (58 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_GetTimeStamp), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_GetStatusFlags), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_SubHandlerForDataTransfered), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.FLEXCAN_CheckUnhandleInterruptEvents), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.CAN1_DriverIRQHandler), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.CAN2_DriverIRQHandler), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.CAN3_DriverIRQHandler), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.CLOCK_ControlGate), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.flexcan_memset), (8 bytes).
    Removing fsl_flexcan.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing fsl_clock.o(.text), (0 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_InitArmPll), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_DeinitArmPll), (42 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitArmPll), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_CalcPllSpreadSpectrum), (86 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_CalcPllSpreadSpectrum), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_InitSysPll2), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_DeinitSysPll2), (64 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitSysPll2), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_IsSysPll2PfdEnabled), (36 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_IsSysPll2PfdEnabled), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_InitPfd), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_DeinitPfd), (108 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitPfd), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetPfdFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_InitSysPll3), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_DeinitSysPll3), (48 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitSysPll3), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_IsSysPll3PfdEnabled), (36 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_IsSysPll3PfdEnabled), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetPllBypass), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.ANATOP_PllBypass), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_InitAudioPllWithFreq), (108 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_InitAudioPllWithFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_CalcAvPllFreq), (620 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_CalcAvPllFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_InitAudioPll), (272 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_InitAudioPll), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.ANATOP_AudioPllSwEnClk), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.ANATOP_AudioPllGate), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.ANATOP_PllEnableClk), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.ANATOP_PllSetPower), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.ANATOP_PllEnablePllReg), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.ANATOP_PllConfigure), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.ANATOP_PllToggleHoldRingOff), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitAudioPll), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.ANATOP_PllEnableSs), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GPC_SetAudioPllOutputFreq), (144 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GPC_SetAudioPllOutputFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_CalcArmPllFreq), (332 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_CalcArmPllFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_InitArmPllWithFreq), (42 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_InitArmPllWithFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_InitVideoPllWithFreq), (108 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_InitVideoPllWithFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_InitVideoPll), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.ANATOP_VideoPllSwEnClk), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.ANATOP_VideoPllGate), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_DeinitVideoPll), (56 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitVideoPll), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GPC_SetVideoPllOutputFreq), (144 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GPC_SetVideoPllOutputFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_InitSysPll1), (196 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_InitSysPll1), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.ANATOP_SysPll1SwEnClk), (8 bytes).
    Removing fsl_clock.o(.text.ANATOP_SysPll1WaitStable), (34 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.ANATOP_SysPll1WaitStable), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.ANATOP_SysPll1Gate), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.ANATOP_SysPll1Div2En), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.ANATOP_SysPll1Div5En), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitSysPll1), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GPC_SetSysPll1OutputFreq), (144 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GPC_SetSysPll1OutputFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_EnableOsc24M), (64 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_EnableOsc24M), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_SetOsc24MWorkMode), (50 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_SetOsc24MWorkMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_SetOsc16MConfig), (82 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_SetOsc16MConfig), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MRefClkDiv), (50 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_SetOscRc400MRefClkDiv), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MFastClkCount), (46 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_SetOscRc400MFastClkCount), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MHysteresisValue), (70 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_SetOscRc400MHysteresisValue), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_BypassOscRc400MTuneLogic), (50 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_BypassOscRc400MTuneLogic), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_EnableOscRc400MTuneLogic), (50 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_EnableOscRc400MTuneLogic), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_FreezeOscRc400MTuneValue), (50 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_FreezeOscRc400MTuneValue), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_SetOscRc400MTuneValue), (58 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_SetOscRc400MTuneValue), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_Set1MHzOutputBehavior), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_SetLocked1MHzCount), (100 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_SetLocked1MHzCount), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_CheckLocked1MHzErrorFlag), (24 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_CheckLocked1MHzErrorFlag), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_ClearLocked1MHzErrorFlag), (14 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_ClearLocked1MHzErrorFlag), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_GetCurrentOscRc400MFastClockCount), (22 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_GetCurrentOscRc400MFastClockCount), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_GetCurrentOscRc400MTuneValue), (22 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_GetCurrentOscRc400MTuneValue), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetPllFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetAvPllFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetM7Freq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetGroupConfig), (102 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetGroupConfig), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSC_TrimOscRc400M), (106 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_TrimOscRc400M), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSC_EnableOscRc400M), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetFreqFromObs), (146 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetFreqFromObs), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_EnableUsbhs0Clock), (14 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbhs0Clock), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_EnableUsbhs0PhyPllClock), (374 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbhs0PhyPllClock), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_EnableClock), (22 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_EnableClock), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_DisableUsbhs0PhyPllClock), (30 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_DisableUsbhs0PhyPllClock), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_EnableUsbhs1Clock), (14 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbhs1Clock), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_EnableUsbhs1PhyPllClock), (374 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbhs1PhyPllClock), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_DisableUsbhs1PhyPllClock), (30 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_DisableUsbhs1PhyPllClock), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSCPLL_ControlBySetPointMode), (82 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSCPLL_ControlBySetPointMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_OSCPLL_ControlByCpuLowPowerMode), (186 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_OSCPLL_ControlByCpuLowPowerMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_ROOT_ControlBySetPointMode), (80 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_ROOT_ControlBySetPointMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_ROOT_ControlByUnassignedMode), (30 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_ROOT_ControlByUnassignedMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_ROOT_ConfigSetPoint), (108 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_ROOT_ConfigSetPoint), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_ROOT_EnableSetPointControl), (40 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_ROOT_EnableSetPointControl), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_LPCG_ControlBySetPointMode), (82 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_LPCG_ControlBySetPointMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_LPCG_ControlByCpuLowPowerMode), (186 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_LPCG_ControlByCpuLowPowerMode), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.ANATOP_PllHoldRingOff), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetRootClockFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetRootClockMux), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetRootClockDiv), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_ControlGate), (120 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_ControlGate), (8 bytes).
    Removing fsl_common.o(.text), (0 bytes).
    Removing fsl_common.o(.text.SDK_Malloc), (144 bytes).
    Removing fsl_common.o(.ARM.exidx.text.SDK_Malloc), (8 bytes).
    Removing fsl_common.o(.text.SDK_Free), (54 bytes).
    Removing fsl_common.o(.ARM.exidx.text.SDK_Free), (8 bytes).
    Removing fsl_common_arm.o(.text), (0 bytes).
    Removing fsl_common_arm.o(.text.MSDK_EnableCpuCycleCounter), (126 bytes).
    Removing fsl_common_arm.o(.ARM.exidx.text.MSDK_EnableCpuCycleCounter), (8 bytes).
    Removing fsl_common_arm.o(.text.MSDK_GetCpuCycleCount), (12 bytes).
    Removing fsl_common_arm.o(.ARM.exidx.text.MSDK_GetCpuCycleCount), (8 bytes).
    Removing fsl_common_arm.o(.ARM.exidx.text.SDK_DelayAtLeastUs), (8 bytes).
    Removing fsl_common_arm.o(.ARM.exidx.text.DelayLoop), (8 bytes).
    Removing fsl_lpuart.o(.text), (0 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_GetInstance), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferGetRxRingBufferLength), (110 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferGetRxRingBufferLength), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_Init), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.CLOCK_EnableClock), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_SoftwareReset), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_Deinit), (106 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_Deinit), (8 bytes).
    Removing fsl_lpuart.o(.text.CLOCK_DisableClock), (24 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.CLOCK_DisableClock), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_GetDefaultConfig), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_SetBaudRate), (386 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_SetBaudRate), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_Enable9bitMode), (116 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_Enable9bitMode), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_SendAddress), (76 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_SendAddress), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_EnableInterrupts), (118 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_EnableInterrupts), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_DisableInterrupts), (130 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_DisableInterrupts), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_GetEnabledInterrupts), (80 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_GetEnabledInterrupts), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_GetStatusFlags), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_ClearStatusFlags), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_WriteBlocking), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_ReadBlocking), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferCreateHandle), (232 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferCreateHandle), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferHandleIRQ), (260 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferHandleIRQ), (8 bytes).
    Removing fsl_lpuart.o(.text.EnableIRQ), (44 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.EnableIRQ), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferStartRingBuffer), (124 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferStartRingBuffer), (8 bytes).
    Removing fsl_lpuart.o(.text.DisableGlobalIRQ), (20 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.DisableGlobalIRQ), (8 bytes).
    Removing fsl_lpuart.o(.text.EnableGlobalIRQ), (18 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.EnableGlobalIRQ), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferStopRingBuffer), (98 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferStopRingBuffer), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferSendNonBlocking), (228 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferSendNonBlocking), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferAbortSend), (78 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferAbortSend), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferGetSendCount), (130 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferGetSendCount), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferReceiveNonBlocking), (528 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferReceiveNonBlocking), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferAbortReceive), (90 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferAbortReceive), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferGetReceiveCount), (120 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferGetReceiveCount), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferHandleIDLEReady), (280 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferHandleIDLEReady), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferHandleReceiveDataFull), (446 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferHandleReceiveDataFull), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferHandleSendDataEmpty), (198 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferHandleSendDataEmpty), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferHandleTransmissionComplete), (68 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferHandleTransmissionComplete), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferHandleErrorIRQ), (10 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferHandleErrorIRQ), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART1_DriverIRQHandler), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART2_DriverIRQHandler), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART3_DriverIRQHandler), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART4_DriverIRQHandler), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART5_DriverIRQHandler), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART6_DriverIRQHandler), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART7_DriverIRQHandler), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART8_DriverIRQHandler), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART9_DriverIRQHandler), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART10_DriverIRQHandler), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART11_DriverIRQHandler), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART12_DriverIRQHandler), (8 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.CLOCK_ControlGate), (8 bytes).
    Removing fsl_lpuart.o(.text.__NVIC_EnableIRQ), (48 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_ReadNonBlocking), (172 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_ReadNonBlocking), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_TransferIsRxRingBufferFull), (86 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_TransferIsRxRingBufferFull), (8 bytes).
    Removing fsl_lpuart.o(.text.LPUART_WriteNonBlocking), (78 bytes).
    Removing fsl_lpuart.o(.ARM.exidx.text.LPUART_WriteNonBlocking), (8 bytes).
    Removing fsl_lpuart.o(.rodata.s_lpuartIRQ), (26 bytes).
    Removing fsl_gpio.o(.text), (0 bytes).
    Removing fsl_gpio.o(.text.GPIO_PinInit), (150 bytes).
    Removing fsl_gpio.o(.ARM.exidx.text.GPIO_PinInit), (8 bytes).
    Removing fsl_gpio.o(.text.GPIO_GetInstance), (90 bytes).
    Removing fsl_gpio.o(.ARM.exidx.text.GPIO_GetInstance), (8 bytes).
    Removing fsl_gpio.o(.text.CLOCK_EnableClock), (22 bytes).
    Removing fsl_gpio.o(.ARM.exidx.text.CLOCK_EnableClock), (8 bytes).
    Removing fsl_gpio.o(.text.GPIO_PinWrite), (82 bytes).
    Removing fsl_gpio.o(.ARM.exidx.text.GPIO_PinWrite), (8 bytes).
    Removing fsl_gpio.o(.text.GPIO_SetPinInterruptConfig), (28 bytes).
    Removing fsl_gpio.o(.ARM.exidx.text.GPIO_SetPinInterruptConfig), (8 bytes).
    Removing fsl_gpio.o(.text.GPIO_PinSetInterruptConfig), (202 bytes).
    Removing fsl_gpio.o(.ARM.exidx.text.GPIO_PinSetInterruptConfig), (8 bytes).
    Removing fsl_gpio.o(.text.CLOCK_ControlGate), (120 bytes).
    Removing fsl_gpio.o(.ARM.exidx.text.CLOCK_ControlGate), (8 bytes).
    Removing fsl_gpio.o(.rodata.s_gpioClock), (14 bytes).
    Removing fsl_gpio.o(.rodata.str1.1), (104 bytes).
    Removing fsl_gpio.o(.rodata.s_gpioBases), (64 bytes).
    Removing fsl_pmu.o(.text), (0 bytes).
    Removing fsl_pmu.o(.text.PMU_SetPllLdoControlMode), (52 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_SetPllLdoControlMode), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_SwitchPllLdoToGPCMode), (52 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_SwitchPllLdoToGPCMode), (8 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_StaticEnablePllLdo), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_StaticDisablePllLdo), (14 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_StaticDisablePllLdo), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_SetLpsrAnaLdoControlMode), (52 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_SetLpsrAnaLdoControlMode), (8 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_StaticEnableLpsrAnaLdoBypassMode), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_StaticGetLpsrAnaLdoDefaultConfig), (78 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_StaticGetLpsrAnaLdoDefaultConfig), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_StaticLpsrAnaLdoInit), (168 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_StaticLpsrAnaLdoInit), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_StaticLpsrAnaLdoDeinit), (22 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_StaticLpsrAnaLdoDeinit), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_SetLpsrDigLdoControlMode), (52 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_SetLpsrDigLdoControlMode), (8 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_StaticEnableLpsrDigLdoBypassMode), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_StaticGetLpsrDigLdoDefaultConfig), (64 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_StaticGetLpsrDigLdoDefaultConfig), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_StaticLpsrDigLdoInit), (166 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_StaticLpsrDigLdoInit), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_StaticLpsrDigLdoDeinit), (38 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_StaticLpsrDigLdoDeinit), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_GPCSetLpsrDigLdoTargetVoltage), (216 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_GPCSetLpsrDigLdoTargetVoltage), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_GetSnvsDigLdoDefaultConfig), (82 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_GetSnvsDigLdoDefaultConfig), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_SnvsDigLdoInit), (54 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_SnvsDigLdoInit), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_GPCEnableLdo), (98 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_GPCEnableLdo), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_GPCSetLdoOperateMode), (162 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_GPCSetLdoOperateMode), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_GPCEnableLdoTrackingMode), (124 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_GPCEnableLdoTrackingMode), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_GPCEnableLdoBypassMode), (124 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_GPCEnableLdoBypassMode), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_GPCEnableLdoStandbyMode), (96 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_GPCEnableLdoStandbyMode), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_SetBandgapControlMode), (52 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_SetBandgapControlMode), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_SwitchBandgapToGPCMode), (52 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_SwitchBandgapToGPCMode), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_DisableBandgapSelfBiasAfterPowerUp), (68 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_DisableBandgapSelfBiasAfterPowerUp), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_EnableBandgapSelfBiasBeforePowerDown), (42 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_EnableBandgapSelfBiasBeforePowerDown), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_StaticBandgapInit), (138 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_StaticBandgapInit), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_WellBiasInit), (116 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_WellBiasInit), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_GetWellBiasDefaultConfig), (64 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_GetWellBiasDefaultConfig), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_SetBodyBiasControlMode), (172 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_SetBodyBiasControlMode), (8 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_EnableBodyBias), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_GPCEnableBodyBias), (58 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_GPCEnableBodyBias), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_GPCEnableBodyBiasStandbyMode), (56 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_GPCEnableBodyBiasStandbyMode), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_GPCGetBodyBiasDefaultConfig), (62 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_GPCGetBodyBiasDefaultConfig), (8 bytes).
    Removing fsl_pmu.o(.text.PMU_GPCSetBodyBiasConfig), (156 bytes).
    Removing fsl_pmu.o(.ARM.exidx.text.PMU_GPCSetBodyBiasConfig), (8 bytes).
    Removing fsl_pmu.o(.rodata.str1.1), (139 bytes).
    Removing fsl_pmu.o(.rodata.cst16), (64 bytes).
    Removing fsl_pmu.o(.rodata.str4.4), (32 bytes).
    Removing fsl_pmu.o(.rodata..L__const.PMU_GPCEnableBodyBias.bodyBiasEnableRegArray), (12 bytes).
    Removing fsl_pmu.o(.rodata..L__const.PMU_GPCEnableBodyBiasStandbyMode.BBStandbyEnableRegArray), (12 bytes).
    Removing fsl_pmu.o(.rodata..L__const.PMU_GPCSetBodyBiasConfig.bodyBiasConfigRegArray), (12 bytes).
    Removing fsl_dcdc.o(.text), (0 bytes).
    Removing fsl_dcdc.o(.text.DCDC_Init), (116 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_Init), (8 bytes).
    Removing fsl_dcdc.o(.text.CLOCK_EnableClock), (22 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.CLOCK_EnableClock), (8 bytes).
    Removing fsl_dcdc.o(.text.DCDC_GetInstance), (86 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_GetInstance), (8 bytes).
    Removing fsl_dcdc.o(.text.DCDC_Deinit), (42 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_Deinit), (8 bytes).
    Removing fsl_dcdc.o(.text.CLOCK_DisableClock), (24 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.CLOCK_DisableClock), (8 bytes).
    Removing fsl_dcdc.o(.text.DCDC_GetDefaultConfig), (70 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_GetDefaultConfig), (8 bytes).
    Removing fsl_dcdc.o(.text.DCDC_GetDefaultDetectionConfig), (88 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_GetDefaultDetectionConfig), (8 bytes).
    Removing fsl_dcdc.o(.text.DCDC_SetDetectionConfig), (218 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_SetDetectionConfig), (8 bytes).
    Removing fsl_dcdc.o(.text.DCDC_SetClockSource), (116 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_SetClockSource), (8 bytes).
    Removing fsl_dcdc.o(.text.DCDC_GetDefaultLowPowerConfig), (60 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_GetDefaultLowPowerConfig), (8 bytes).
    Removing fsl_dcdc.o(.text.DCDC_SetLowPowerConfig), (78 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_SetLowPowerConfig), (8 bytes).
    Removing fsl_dcdc.o(.text.DCDC_GetDefaultLoopControlConfig), (90 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_GetDefaultLoopControlConfig), (8 bytes).
    Removing fsl_dcdc.o(.text.DCDC_SetLoopControlConfig), (238 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_SetLoopControlConfig), (8 bytes).
    Removing fsl_dcdc.o(.text.DCDC_SetMinPowerConfig), (78 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_SetMinPowerConfig), (8 bytes).
    Removing fsl_dcdc.o(.text.DCDC_SetInternalRegulatorConfig), (74 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_SetInternalRegulatorConfig), (8 bytes).
    Removing fsl_dcdc.o(.text.DCDC_SetPointInit), (300 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_SetPointInit), (8 bytes).
    Removing fsl_dcdc.o(.text.DCDC_ConvertByteArrayToWord), (88 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_ConvertByteArrayToWord), (8 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_BootIntoDCM), (8 bytes).
    Removing fsl_dcdc.o(.text.DCDC_BootIntoCCM), (38 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.DCDC_BootIntoCCM), (8 bytes).
    Removing fsl_dcdc.o(.text.CLOCK_ControlGate), (120 bytes).
    Removing fsl_dcdc.o(.ARM.exidx.text.CLOCK_ControlGate), (8 bytes).
    Removing fsl_dcdc.o(.rodata.s_dcdcClocks), (1 bytes).
    Removing fsl_dcdc.o(.rodata.str1.1), (147 bytes).
    Removing fsl_dcdc.o(.rodata.s_dcdcBases), (4 bytes).
    Removing fsl_cache.o(.text), (0 bytes).
    Removing fsl_cache.o(.text.L1CACHE_InvalidateICacheByRange), (82 bytes).
    Removing fsl_cache.o(.ARM.exidx.text.L1CACHE_InvalidateICacheByRange), (8 bytes).
    Removing fsl_cache.o(.text.ICACHE_InvalidateByRange), (20 bytes).
    Removing fsl_cache.o(.ARM.exidx.text.ICACHE_InvalidateByRange), (8 bytes).
    Removing fsl_cache.o(.text.DCACHE_InvalidateByRange), (20 bytes).
    Removing fsl_cache.o(.ARM.exidx.text.DCACHE_InvalidateByRange), (8 bytes).
    Removing fsl_cache.o(.text.L1CACHE_InvalidateDCacheByRange), (90 bytes).
    Removing fsl_cache.o(.ARM.exidx.text.L1CACHE_InvalidateDCacheByRange), (8 bytes).
    Removing fsl_cache.o(.text.DCACHE_CleanByRange), (20 bytes).
    Removing fsl_cache.o(.ARM.exidx.text.DCACHE_CleanByRange), (8 bytes).
    Removing fsl_cache.o(.text.L1CACHE_CleanDCacheByRange), (90 bytes).
    Removing fsl_cache.o(.ARM.exidx.text.L1CACHE_CleanDCacheByRange), (8 bytes).
    Removing fsl_cache.o(.text.DCACHE_CleanInvalidateByRange), (20 bytes).
    Removing fsl_cache.o(.ARM.exidx.text.DCACHE_CleanInvalidateByRange), (8 bytes).
    Removing fsl_cache.o(.text.L1CACHE_CleanInvalidateDCacheByRange), (90 bytes).
    Removing fsl_cache.o(.ARM.exidx.text.L1CACHE_CleanInvalidateDCacheByRange), (8 bytes).
    Removing fsl_anatop_ai.o(.text), (0 bytes).
    Removing fsl_anatop_ai.o(.ARM.exidx.text.ANATOP_AI_Access), (8 bytes).
    Removing fsl_anatop_ai.o(.ARM.exidx.text.ANATOP_AI_Write), (8 bytes).
    Removing fsl_anatop_ai.o(.ARM.exidx.text.ANATOP_AI_Read), (8 bytes).
    Removing fsl_anatop_ai.o(.ARM.exidx.text.ANATOP_AI_WriteWithMaskShift), (8 bytes).
    Removing fsl_gpt.o(.text), (0 bytes).
    Removing fsl_gpt.o(.ARM.exidx.text.GPT_Init), (8 bytes).
    Removing fsl_gpt.o(.ARM.exidx.text.CLOCK_EnableClock), (8 bytes).
    Removing fsl_gpt.o(.ARM.exidx.text.GPT_GetInstance), (8 bytes).
    Removing fsl_gpt.o(.ARM.exidx.text.GPT_SoftwareReset), (8 bytes).
    Removing fsl_gpt.o(.ARM.exidx.text.GPT_SetClockSource), (8 bytes).
    Removing fsl_gpt.o(.ARM.exidx.text.GPT_SetClockDivider), (8 bytes).
    Removing fsl_gpt.o(.text.GPT_Deinit), (38 bytes).
    Removing fsl_gpt.o(.ARM.exidx.text.GPT_Deinit), (8 bytes).
    Removing fsl_gpt.o(.text.CLOCK_DisableClock), (24 bytes).
    Removing fsl_gpt.o(.ARM.exidx.text.CLOCK_DisableClock), (8 bytes).
    Removing fsl_gpt.o(.ARM.exidx.text.GPT_GetDefaultConfig), (8 bytes).
    Removing fsl_gpt.o(.ARM.exidx.text.CLOCK_ControlGate), (8 bytes).
    Removing system_mimxrt1176_cm7.o(.text), (0 bytes).
    Removing system_mimxrt1176_cm7.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_mimxrt1176_cm7.o(.ARM.exidx.text.SystemInitHook), (8 bytes).
    Removing system_mimxrt1176_cm7.o(.text.SystemCoreClockUpdate), (2 bytes).
    Removing system_mimxrt1176_cm7.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing fsl_adapter_lpuart.o(.text), (0 bytes).
    Removing fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartInit), (8 bytes).
    Removing fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartInitCommon), (8 bytes).
    Removing fsl_adapter_lpuart.o(.text.HAL_UartDeinit), (68 bytes).
    Removing fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartDeinit), (8 bytes).
    Removing fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartReceiveBlocking), (8 bytes).
    Removing fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartGetStatus), (8 bytes).
    Removing fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartSendBlocking), (8 bytes).
    Removing fsl_adapter_lpuart.o(.text.HAL_UartEnterLowpower), (42 bytes).
    Removing fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartEnterLowpower), (8 bytes).
    Removing fsl_adapter_lpuart.o(.text.HAL_UartExitLowpower), (10 bytes).
    Removing fsl_adapter_lpuart.o(.ARM.exidx.text.HAL_UartExitLowpower), (8 bytes).
    Removing fsl_component_generic_list.o(.text), (0 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_Init), (30 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_Init), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetList), (12 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetList), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_AddTail), (108 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddTail), (8 bytes).
    Removing fsl_component_generic_list.o(.text.DisableGlobalIRQ), (20 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.DisableGlobalIRQ), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_Error_Check), (50 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_Error_Check), (8 bytes).
    Removing fsl_component_generic_list.o(.text.EnableGlobalIRQ), (18 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.EnableGlobalIRQ), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_AddHead), (100 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddHead), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_RemoveHead), (90 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_RemoveHead), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetHead), (12 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetHead), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetNext), (12 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetNext), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetPrev), (10 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetPrev), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_RemoveElement), (138 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_RemoveElement), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_AddPrevElement), (178 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddPrevElement), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetSize), (12 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetSize), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetAvailableSize), (16 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetAvailableSize), (8 bytes).
    Removing fsl_flexspi_nor_boot.o(.text), (0 bytes).
    Removing evkmimxrt1170_flexspi_nor_config.o(.text), (0 bytes).
    Removing dcf.o(.text), (0 bytes).
    Removing dcf.o(.text.start_node), (40 bytes).
    Removing dcf.o(.ARM.exidx.text.start_node), (8 bytes).
    Removing dcf.o(.text.check_and_start_node), (136 bytes).
    Removing dcf.o(.ARM.exidx.text.check_and_start_node), (8 bytes).
    Removing dcf.o(.text.init_consise_dcf), (150 bytes).
    Removing dcf.o(.ARM.exidx.text.init_consise_dcf), (8 bytes).
    Removing dcf.o(.text.read_consise_dcf_next_entry), (108 bytes).
    Removing dcf.o(.ARM.exidx.text.read_consise_dcf_next_entry), (8 bytes).
    Removing dcf.o(.text.start_and_seek_node), (112 bytes).
    Removing dcf.o(.ARM.exidx.text.start_and_seek_node), (8 bytes).
    Removing dcf.o(.text.get_next_DCF_data), (290 bytes).
    Removing dcf.o(.ARM.exidx.text.get_next_DCF_data), (8 bytes).
    Removing dcf.o(.text.SaveNode), (88 bytes).
    Removing dcf.o(.ARM.exidx.text.SaveNode), (8 bytes).
    Removing dcf.o(.text.CheckSDOAndContinue), (390 bytes).
    Removing dcf.o(.ARM.exidx.text.CheckSDOAndContinue), (8 bytes).
    Removing dcf.o(.text.write_consise_dcf_next_entry), (124 bytes).
    Removing dcf.o(.ARM.exidx.text.write_consise_dcf_next_entry), (8 bytes).
    Removing emcy.o(.text), (0 bytes).
    Removing emcy.o(.ARM.exidx.text.OnNumberOfErrorsUpdate), (8 bytes).
    Removing emcy.o(.ARM.exidx.text.emergencyInit), (8 bytes).
    Removing emcy.o(.ARM.exidx.text.emergencyStop), (8 bytes).
    Removing emcy.o(.text.sendEMCY), (114 bytes).
    Removing emcy.o(.ARM.exidx.text.sendEMCY), (8 bytes).
    Removing emcy.o(.text.EMCY_setError), (516 bytes).
    Removing emcy.o(.ARM.exidx.text.EMCY_setError), (8 bytes).
    Removing emcy.o(.text.EMCY_errorRecovered), (266 bytes).
    Removing emcy.o(.ARM.exidx.text.EMCY_errorRecovered), (8 bytes).
    Removing emcy.o(.ARM.exidx.text.proceedEMCY), (8 bytes).
    Removing emcy.o(.ARM.exidx.text._post_emcy), (8 bytes).
    Removing lifegrd.o(.text), (0 bytes).
    Removing lifegrd.o(.text.getNodeState), (50 bytes).
    Removing lifegrd.o(.ARM.exidx.text.getNodeState), (8 bytes).
    Removing lifegrd.o(.ARM.exidx.text.ConsumerHeartbeatAlarm), (8 bytes).
    Removing lifegrd.o(.ARM.exidx.text.proceedNODE_GUARD), (8 bytes).
    Removing lifegrd.o(.ARM.exidx.text.ProducerHeartbeatAlarm), (8 bytes).
    Removing lifegrd.o(.ARM.exidx.text.GuardTimeAlarm), (8 bytes).
    Removing lifegrd.o(.ARM.exidx.text.OnNodeGuardUpdate), (8 bytes).
    Removing lifegrd.o(.ARM.exidx.text.nodeguardStop), (8 bytes).
    Removing lifegrd.o(.ARM.exidx.text.nodeguardInit), (8 bytes).
    Removing lifegrd.o(.ARM.exidx.text.OnHeartbeatProducerUpdate), (8 bytes).
    Removing lifegrd.o(.ARM.exidx.text.heartbeatInit), (8 bytes).
    Removing lifegrd.o(.ARM.exidx.text.heartbeatStop), (8 bytes).
    Removing lifegrd.o(.ARM.exidx.text.lifeGuardInit), (8 bytes).
    Removing lifegrd.o(.ARM.exidx.text.lifeGuardStop), (8 bytes).
    Removing lifegrd.o(.ARM.exidx.text._heartbeatError), (8 bytes).
    Removing lifegrd.o(.ARM.exidx.text._post_SlaveBootup), (8 bytes).
    Removing lifegrd.o(.ARM.exidx.text._post_SlaveStateChange), (8 bytes).
    Removing lifegrd.o(.ARM.exidx.text._nodeguardError), (8 bytes).
    Removing lss.o(.text), (0 bytes).
    Removing nmtmaster.o(.text), (0 bytes).
    Removing nmtmaster.o(.ARM.exidx.text.masterSendNMTstateChange), (8 bytes).
    Removing nmtmaster.o(.ARM.exidx.text.masterSendNMTnodeguard), (8 bytes).
    Removing nmtmaster.o(.text.masterRequestNodeState), (98 bytes).
    Removing nmtmaster.o(.ARM.exidx.text.masterRequestNodeState), (8 bytes).
    Removing nmtslave.o(.text), (0 bytes).
    Removing nmtslave.o(.ARM.exidx.text.proceedNMTstateChange), (8 bytes).
    Removing nmtslave.o(.ARM.exidx.text.slaveSendBootUp), (8 bytes).
    Removing objacces.o(.text), (0 bytes).
    Removing objacces.o(.ARM.exidx.text.accessDictionaryError), (8 bytes).
    Removing objacces.o(.ARM.exidx.text._getODentry), (8 bytes).
    Removing objacces.o(.ARM.exidx.text._setODentry), (8 bytes).
    Removing objacces.o(.ARM.exidx.text.RegisterSetODentryCallBack), (8 bytes).
    Removing objacces.o(.ARM.exidx.text._storeODSubIndex), (8 bytes).
    Removing pdo.o(.text), (0 bytes).
    Removing pdo.o(.ARM.exidx.text.buildPDO), (8 bytes).
    Removing pdo.o(.ARM.exidx.text.CopyBits), (8 bytes).
    Removing pdo.o(.text.sendPDOrequest), (172 bytes).
    Removing pdo.o(.ARM.exidx.text.sendPDOrequest), (8 bytes).
    Removing pdo.o(.ARM.exidx.text.proceedPDO), (8 bytes).
    Removing pdo.o(.ARM.exidx.text.PDOEventTimerAlarm), (8 bytes).
    Removing pdo.o(.text.sendPDOevent), (18 bytes).
    Removing pdo.o(.ARM.exidx.text.sendPDOevent), (8 bytes).
    Removing pdo.o(.ARM.exidx.text._sendPDOevent), (8 bytes).
    Removing pdo.o(.ARM.exidx.text.sendOnePDOevent), (8 bytes).
    Removing pdo.o(.ARM.exidx.text.PDOInhibitTimerAlarm), (8 bytes).
    Removing pdo.o(.ARM.exidx.text.sendPdo), (8 bytes).
    Removing pdo.o(.ARM.exidx.text._RxPDO_EventTimers_Handler), (8 bytes).
    Removing pdo.o(.ARM.exidx.text.TPDO_Communication_Parameter_Callback), (8 bytes).
    Removing pdo.o(.ARM.exidx.text.PDOInit), (8 bytes).
    Removing pdo.o(.ARM.exidx.text.PDOStop), (8 bytes).
    Removing pdo.o(.text.PDOEnable), (64 bytes).
    Removing pdo.o(.ARM.exidx.text.PDOEnable), (8 bytes).
    Removing pdo.o(.text.PDODisable), (64 bytes).
    Removing pdo.o(.ARM.exidx.text.PDODisable), (8 bytes).
    Removing sdo.o(.text), (0 bytes).
    Removing sdo.o(.ARM.exidx.text.SDOTimeoutAlarm), (8 bytes).
    Removing sdo.o(.ARM.exidx.text.sendSDOabort), (8 bytes).
    Removing sdo.o(.ARM.exidx.text.resetSDOline), (8 bytes).
    Removing sdo.o(.ARM.exidx.text.resetSDO), (8 bytes).
    Removing sdo.o(.ARM.exidx.text.SDOlineToObjdict), (8 bytes).
    Removing sdo.o(.ARM.exidx.text.objdictToSDOline), (8 bytes).
    Removing sdo.o(.ARM.exidx.text.lineToSDO), (8 bytes).
    Removing sdo.o(.ARM.exidx.text.SDOtoLine), (8 bytes).
    Removing sdo.o(.ARM.exidx.text.failedSDO), (8 bytes).
    Removing sdo.o(.ARM.exidx.text.getSDOlineOnUse), (8 bytes).
    Removing sdo.o(.ARM.exidx.text.initSDOline), (8 bytes).
    Removing sdo.o(.ARM.exidx.text.getSDOfreeLine), (8 bytes).
    Removing sdo.o(.text.getSDOlineToClose), (158 bytes).
    Removing sdo.o(.ARM.exidx.text.getSDOlineToClose), (8 bytes).
    Removing sdo.o(.text.closeSDOtransfer), (108 bytes).
    Removing sdo.o(.ARM.exidx.text.closeSDOtransfer), (8 bytes).
    Removing sdo.o(.ARM.exidx.text.GetSDOClientFromNodeId), (8 bytes).
    Removing sdo.o(.ARM.exidx.text.getSDOlineRestBytes), (8 bytes).
    Removing sdo.o(.ARM.exidx.text.setSDOlineRestBytes), (8 bytes).
    Removing sdo.o(.ARM.exidx.text.sendSDO), (8 bytes).
    Removing sdo.o(.ARM.exidx.text.proceedSDO), (8 bytes).
    Removing sdo.o(.text.resetClientSDOLineFromNodeId), (74 bytes).
    Removing sdo.o(.ARM.exidx.text.resetClientSDOLineFromNodeId), (8 bytes).
    Removing sdo.o(.ARM.exidx.text._writeNetworkDict), (8 bytes).
    Removing sdo.o(.ARM.exidx.text.writeNetworkDict), (8 bytes).
    Removing sdo.o(.text.writeNetworkDictCallBack), (108 bytes).
    Removing sdo.o(.ARM.exidx.text.writeNetworkDictCallBack), (8 bytes).
    Removing sdo.o(.text.writeNetworkDictCallBackAI), (448 bytes).
    Removing sdo.o(.ARM.exidx.text.writeNetworkDictCallBackAI), (8 bytes).
    Removing sdo.o(.ARM.exidx.text._readNetworkDict), (8 bytes).
    Removing sdo.o(.ARM.exidx.text.readNetworkDict), (8 bytes).
    Removing sdo.o(.text.readNetworkDictCallback), (84 bytes).
    Removing sdo.o(.ARM.exidx.text.readNetworkDictCallback), (8 bytes).
    Removing sdo.o(.text.readNetworkDictCallbackAI), (388 bytes).
    Removing sdo.o(.ARM.exidx.text.readNetworkDictCallbackAI), (8 bytes).
    Removing sdo.o(.ARM.exidx.text.getReadResultNetworkDict), (8 bytes).
    Removing sdo.o(.ARM.exidx.text.getWriteResultNetworkDict), (8 bytes).
    Removing states.o(.text), (0 bytes).
    Removing states.o(.text.getState), (14 bytes).
    Removing states.o(.ARM.exidx.text.getState), (8 bytes).
    Removing states.o(.ARM.exidx.text.canDispatch), (8 bytes).
    Removing states.o(.ARM.exidx.text.switchCommunicationState), (8 bytes).
    Removing states.o(.ARM.exidx.text.setState), (8 bytes).
    Removing states.o(.ARM.exidx.text.getNodeId), (8 bytes).
    Removing states.o(.ARM.exidx.text.setNodeId), (8 bytes).
    Removing states.o(.ARM.exidx.text._initialisation), (8 bytes).
    Removing states.o(.ARM.exidx.text._preOperational), (8 bytes).
    Removing states.o(.ARM.exidx.text._operational), (8 bytes).
    Removing states.o(.ARM.exidx.text._stopped), (8 bytes).
    Removing states.o(.rodata..L__const.setState.newCommunicationState), (7 bytes).
    Removing states.o(.rodata..L__const.setState.newCommunicationState.1), (7 bytes).
    Removing states.o(.rodata..L__const.setState.newCommunicationState.2), (7 bytes).
    Removing states.o(.rodata..L__const.setState.newCommunicationState.3), (7 bytes).
    Removing states.o(.rodata.cst16), (32 bytes).
    Removing sync.o(.text), (0 bytes).
    Removing sync.o(.ARM.exidx.text.SyncAlarm), (8 bytes).
    Removing sync.o(.ARM.exidx.text.sendSYNC), (8 bytes).
    Removing sync.o(.ARM.exidx.text.OnCOB_ID_SyncUpdate), (8 bytes).
    Removing sync.o(.ARM.exidx.text.startSYNC), (8 bytes).
    Removing sync.o(.ARM.exidx.text.stopSYNC), (8 bytes).
    Removing sync.o(.ARM.exidx.text.sendSYNCMessage), (8 bytes).
    Removing sync.o(.ARM.exidx.text.proceedSYNC), (8 bytes).
    Removing sync.o(.ARM.exidx.text._post_sync), (8 bytes).
    Removing sync.o(.ARM.exidx.text._post_TPDO), (8 bytes).
    Removing timer.o(.text), (0 bytes).
    Removing timer.o(.ARM.exidx.text.SetAlarm), (8 bytes).
    Removing timer.o(.ARM.exidx.text.DelAlarm), (8 bytes).
    Removing timer.o(.ARM.exidx.text.TimeDispatch), (8 bytes).
    Removing timer.o(.bss.tdcount), (4 bytes).
    Removing croutine.o(.text), (0 bytes).
    Removing event_groups.o(.text), (0 bytes).
    Removing event_groups.o(.text.xEventGroupCreate), (42 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupCreate), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSync), (372 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSync), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSetBits), (290 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupWaitBits), (458 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupWaitBits), (8 bytes).
    Removing event_groups.o(.text.prvTestWaitCondition), (66 bytes).
    Removing event_groups.o(.ARM.exidx.text.prvTestWaitCondition), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBits), (108 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBitsFromISR), (34 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupClearBitsCallback), (20 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback), (8 bytes).
    Removing event_groups.o(.text.xEventGroupGetBitsFromISR), (62 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupDelete), (130 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupDelete), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetBitsCallback), (20 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSetBitsFromISR), (36 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.uxEventGroupGetNumber), (34 bytes).
    Removing event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetNumber), (16 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetNumber), (8 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue.o(.text.xQueueCreateMutex), (38 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.text.prvInitialiseMutex), (44 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseMutex), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (112 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.text.xQueueGenericSend), (572 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (114 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.text.xQueueSemaphoreTake), (542 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (98 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.text.prvCopyDataToQueue), (204 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.text.prvIsQueueFull), (46 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.text.xQueueGenericSendFromISR), (404 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveFromISR), (364 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.text.prvGetDisinheritPriorityAfterTimeout), (38 bytes).
    Removing queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (492 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (334 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (228 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (58 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (66 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (52 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.text.vQueueDelete), (58 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.vQueueUnregisterQueue), (116 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueUnregisterQueue), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (12 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (16 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (14 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (66 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (72 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueAddToRegistry), (8 bytes).
    Removing queue.o(.text.pcQueueGetName), (114 bytes).
    Removing queue.o(.ARM.exidx.text.pcQueueGetName), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted), (8 bytes).
    Removing stream_buffer.o(.text), (0 bytes).
    Removing stream_buffer.o(.text.xStreamBufferGenericCreate), (242 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferGenericCreate), (8 bytes).
    Removing stream_buffer.o(.text.prvInitialiseNewStreamBuffer), (112 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvInitialiseNewStreamBuffer), (8 bytes).
    Removing stream_buffer.o(.text.vStreamBufferDelete), (78 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.vStreamBufferDelete), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReset), (132 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReset), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSetTriggerLevel), (90 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSetTriggerLevel), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSpacesAvailable), (120 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSpacesAvailable), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferBytesAvailable), (56 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferBytesAvailable), (8 bytes).
    Removing stream_buffer.o(.text.prvBytesInBuffer), (56 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvBytesInBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSend), (458 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSend), (8 bytes).
    Removing stream_buffer.o(.text.prvWriteMessageToBuffer), (164 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvWriteMessageToBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSendFromISR), (256 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSendFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceive), (342 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceive), (8 bytes).
    Removing stream_buffer.o(.text.prvReadMessageFromBuffer), (134 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvReadMessageFromBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes), (138 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferNextMessageLengthBytes), (8 bytes).
    Removing stream_buffer.o(.text.prvReadBytesFromBuffer), (246 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvReadBytesFromBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceiveFromISR), (240 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferIsEmpty), (76 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferIsEmpty), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferIsFull), (96 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferIsFull), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSendCompletedFromISR), (142 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSendCompletedFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR), (142 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveCompletedFromISR), (8 bytes).
    Removing stream_buffer.o(.text.uxStreamBufferGetStreamBufferNumber), (12 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.uxStreamBufferGetStreamBufferNumber), (8 bytes).
    Removing stream_buffer.o(.text.vStreamBufferSetStreamBufferNumber), (16 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.vStreamBufferSetStreamBufferNumber), (8 bytes).
    Removing stream_buffer.o(.text.ucStreamBufferGetStreamBufferType), (16 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.ucStreamBufferGetStreamBufferType), (8 bytes).
    Removing stream_buffer.o(.text.prvWriteBytesToBuffer), (254 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvWriteBytesToBuffer), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks.o(.text.xTaskDelayUntil), (290 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.text.vTaskDelay), (114 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (276 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (94 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (488 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.text.vTaskSuspend), (382 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskResume), (268 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.text.prvTaskIsTaskSuspended), (110 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (312 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (46 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (30 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.text.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (74 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (272 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.text.prvListTasksWithinSingleList), (164 bytes).
    Removing tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (86 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (164 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (364 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (78 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (28 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetThreadLocalStoragePointer), (104 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetThreadLocalStoragePointer), (8 bytes).
    Removing tasks.o(.text.pvTaskGetThreadLocalStoragePointer), (82 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskGetThreadLocalStoragePointer), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (224 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.text.prvTaskCheckFreeStackSpace), (48 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.text.xTaskPriorityInherit), (348 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.text.xTaskPriorityDisinherit), (320 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.text.vTaskPriorityDisinheritAfterTimeout), (394 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.text.pvTaskIncrementMutexHeldCount), (44 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyTake), (252 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyWait), (284 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (570 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (688 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskGenericNotifyGiveFromISR), (514 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyStateClear), (124 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyValueClear), (82 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateTimerTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvTimerTask), (8 bytes).
    Removing timers.o(.text.xTimerCreate), (74 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreate), (8 bytes).
    Removing timers.o(.text.prvInitialiseNewTimer), (114 bytes).
    Removing timers.o(.ARM.exidx.text.prvInitialiseNewTimer), (8 bytes).
    Removing timers.o(.text.xTimerGenericCommand), (180 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommand), (8 bytes).
    Removing timers.o(.text.xTimerGetTimerDaemonTaskHandle), (56 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle), (8 bytes).
    Removing timers.o(.text.xTimerGetPeriod), (48 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetPeriod), (8 bytes).
    Removing timers.o(.text.vTimerSetReloadMode), (94 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetReloadMode), (82 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.uxTimerGetReloadMode), (16 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetExpiryTime), (52 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetExpiryTime), (8 bytes).
    Removing timers.o(.text.pcTimerGetName), (48 bytes).
    Removing timers.o(.ARM.exidx.text.pcTimerGetName), (8 bytes).
    Removing timers.o(.text.xTimerIsTimerActive), (80 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerIsTimerActive), (8 bytes).
    Removing timers.o(.text.pvTimerGetTimerID), (62 bytes).
    Removing timers.o(.ARM.exidx.text.pvTimerGetTimerID), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerID), (62 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerID), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCallFromISR), (58 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCall), (98 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCall), (8 bytes).
    Removing timers.o(.text.uxTimerGetTimerNumber), (12 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetTimerNumber), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerNumber), (16 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerNumber), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvGetNextExpireTime), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessReceivedCommands), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSampleTimeNow), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessExpiredTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSwitchTimerLists), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvReloadTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvInsertTimerInActiveList), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnableVFP), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (50 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing port.o(.text.vPortValidateInterruptPriority), (140 bytes).
    Removing port.o(.ARM.exidx.text.vPortValidateInterruptPriority), (8 bytes).
    Removing heap_4.o(.text), (0 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvHeapInit), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_4.o(.text.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.xPortGetMinimumEverFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.vPortInitialiseBlocks), (2 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_4.o(.text.pvPortCalloc), (94 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortCalloc), (8 bytes).
    Removing heap_4.o(.text.vPortGetHeapStats), (206 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortGetHeapStats), (8 bytes).

1170 unused section(s) (total 58921 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/../cmprslib/zerorunl2.c          0x00000000   Number         0  __dczerorl2.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  ctype_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isalnum_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isalpha_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isblank_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  iscntrl_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isdigit_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isgraph_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  islower_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isprint_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  ispunct_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isspace_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isupper_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isxdigit_o.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/errno.c                 0x00000000   Number         0  errno.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry4.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  malloc2.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  mallocr2.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  malloca2.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  mallocra2.o ABSOLUTE
    ../clib/microlib/malloc/mvars.c          0x00000000   Number         0  mvars.o ABSOLUTE
    ../clib/microlib/string/memcmp.c         0x00000000   Number         0  memcmp.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpy.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyc.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memset.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/string/strlen.c         0x00000000   Number         0  strlen.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  strtoul.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  _strtoul.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  _chval.o ABSOLUTE
    Master.c                                 0x00000000   Number         0  master.o ABSOLUTE
    board.c                                  0x00000000   Number         0  board.o ABSOLUTE
    clock_config.c                           0x00000000   Number         0  clock_config.o ABSOLUTE
    croutine.c                               0x00000000   Number         0  croutine.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    dcd.c                                    0x00000000   Number         0  dcd.o ABSOLUTE
    dcf.c                                    0x00000000   Number         0  dcf.o ABSOLUTE
    emcy.c                                   0x00000000   Number         0  emcy.o ABSOLUTE
    event_groups.c                           0x00000000   Number         0  event_groups.o ABSOLUTE
    evkmimxrt1170_flexspi_nor_config.c       0x00000000   Number         0  evkmimxrt1170_flexspi_nor_config.o ABSOLUTE
    flexcan_interrupt_transfer.c             0x00000000   Number         0  flexcan_interrupt_transfer.o ABSOLUTE
    fsl_adapter_lpuart.c                     0x00000000   Number         0  fsl_adapter_lpuart.o ABSOLUTE
    fsl_anatop_ai.c                          0x00000000   Number         0  fsl_anatop_ai.o ABSOLUTE
    fsl_assert.c                             0x00000000   Number         0  fsl_assert.o ABSOLUTE
    fsl_cache.c                              0x00000000   Number         0  fsl_cache.o ABSOLUTE
    fsl_clock.c                              0x00000000   Number         0  fsl_clock.o ABSOLUTE
    fsl_common.c                             0x00000000   Number         0  fsl_common.o ABSOLUTE
    fsl_common_arm.c                         0x00000000   Number         0  fsl_common_arm.o ABSOLUTE
    fsl_component_generic_list.c             0x00000000   Number         0  fsl_component_generic_list.o ABSOLUTE
    fsl_dcdc.c                               0x00000000   Number         0  fsl_dcdc.o ABSOLUTE
    fsl_debug_console.c                      0x00000000   Number         0  fsl_debug_console.o ABSOLUTE
    fsl_flexcan.c                            0x00000000   Number         0  fsl_flexcan.o ABSOLUTE
    fsl_flexspi_nor_boot.c                   0x00000000   Number         0  fsl_flexspi_nor_boot.o ABSOLUTE
    fsl_gpio.c                               0x00000000   Number         0  fsl_gpio.o ABSOLUTE
    fsl_gpt.c                                0x00000000   Number         0  fsl_gpt.o ABSOLUTE
    fsl_lpuart.c                             0x00000000   Number         0  fsl_lpuart.o ABSOLUTE
    fsl_pmu.c                                0x00000000   Number         0  fsl_pmu.o ABSOLUTE
    fsl_str.c                                0x00000000   Number         0  fsl_str.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    heap_4.c                                 0x00000000   Number         0  heap_4.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    lifegrd.c                                0x00000000   Number         0  lifegrd.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    lss.c                                    0x00000000   Number         0  lss.o ABSOLUTE
    nmtMaster.c                              0x00000000   Number         0  nmtmaster.o ABSOLUTE
    nmtSlave.c                               0x00000000   Number         0  nmtslave.o ABSOLUTE
    objacces.c                               0x00000000   Number         0  objacces.o ABSOLUTE
    pdo.c                                    0x00000000   Number         0  pdo.o ABSOLUTE
    pin_mux.c                                0x00000000   Number         0  pin_mux.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    sdo.c                                    0x00000000   Number         0  sdo.o ABSOLUTE
    states.c                                 0x00000000   Number         0  states.o ABSOLUTE
    stream_buffer.c                          0x00000000   Number         0  stream_buffer.o ABSOLUTE
    sync.c                                   0x00000000   Number         0  sync.o ABSOLUTE
    system_MIMXRT1176_cm7.c                  0x00000000   Number         0  system_mimxrt1176_cm7.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    timer.c                                  0x00000000   Number         0  timer.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    s_flexcanIsr                             0x200005bc   Data           4  fsl_flexcan.o(.data.s_flexcanIsr)
    [Anonymous Symbol]                       0x200005bc   Section        0  fsl_flexcan.o(.data.s_flexcanIsr)
    uxCriticalNesting                        0x200005f8   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x200005f8   Section        0  port.o(.data.uxCriticalNesting)
    AppTaskCreate_Handle                     0x200005fc   Data           4  flexcan_interrupt_transfer.o(.bss.AppTaskCreate_Handle)
    [Anonymous Symbol]                       0x200005fc   Section        0  flexcan_interrupt_transfer.o(.bss.AppTaskCreate_Handle)
    App_Task_Handle                          0x20000600   Data           4  flexcan_interrupt_transfer.o(.bss.App_Task_Handle)
    [Anonymous Symbol]                       0x20000600   Section        0  flexcan_interrupt_transfer.o(.bss.App_Task_Handle)
    prvSampleTimeNow.xLastTime               0x200009e8   Data           4  timers.o(.bss.prvSampleTimeNow.xLastTime)
    [Anonymous Symbol]                       0x200009e8   Section        0  timers.o(.bss.prvSampleTimeNow.xLastTime)
    __tagsym$$used.1                         0x200009ec   Number         0  tasks.o(.bss.pxCurrentTCB)
    pxCurrentTimerList                       0x200009f0   Data           4  timers.o(.bss.pxCurrentTimerList)
    [Anonymous Symbol]                       0x200009f0   Section        0  timers.o(.bss.pxCurrentTimerList)
    pxDelayedTaskList                        0x200009f4   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x200009f4   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxEnd                                    0x200009f8   Data           4  heap_4.o(.bss.pxEnd)
    [Anonymous Symbol]                       0x200009f8   Section        0  heap_4.o(.bss.pxEnd)
    pxOverflowDelayedTaskList                0x200009fc   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x200009fc   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxOverflowTimerList                      0x20000a00   Data           4  timers.o(.bss.pxOverflowTimerList)
    [Anonymous Symbol]                       0x20000a00   Section        0  timers.o(.bss.pxOverflowTimerList)
    pxReadyTasksLists                        0x20000a04   Data         100  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x20000a04   Section        0  tasks.o(.bss.pxReadyTasksLists)
    s_debugConsole                           0x20000a98   Data          20  fsl_debug_console.o(.bss.s_debugConsole)
    [Anonymous Symbol]                       0x20000a98   Section        0  fsl_debug_console.o(.bss.s_debugConsole)
    s_flexcanHandle                          0x20000aac   Data          16  fsl_flexcan.o(.bss.s_flexcanHandle)
    [Anonymous Symbol]                       0x20000aac   Section        0  fsl_flexcan.o(.bss.s_flexcanHandle)
    ucHeap                                   0x20000bcc   Data       10240  heap_4.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x20000bcc   Section        0  heap_4.o(.bss.ucHeap)
    ucMaxSysCallPriority                     0x200033cc   Data           1  port.o(.bss.ucMaxSysCallPriority)
    [Anonymous Symbol]                       0x200033cc   Section        0  port.o(.bss.ucMaxSysCallPriority)
    ulMaxPRIGROUPValue                       0x200033d0   Data           4  port.o(.bss.ulMaxPRIGROUPValue)
    [Anonymous Symbol]                       0x200033d0   Section        0  port.o(.bss.ulMaxPRIGROUPValue)
    uxCurrentNumberOfTasks                   0x200033d4   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x200033d4   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x200033d8   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x200033d8   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x200033dc   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x200033dc   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x200033e0   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x200033e0   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x200033e4   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x200033e4   Section        0  tasks.o(.bss.uxTopReadyPriority)
    xActiveTimerList1                        0x200033ec   Data          20  timers.o(.bss.xActiveTimerList1)
    [Anonymous Symbol]                       0x200033ec   Section        0  timers.o(.bss.xActiveTimerList1)
    xActiveTimerList2                        0x20003400   Data          20  timers.o(.bss.xActiveTimerList2)
    [Anonymous Symbol]                       0x20003400   Section        0  timers.o(.bss.xActiveTimerList2)
    xDelayedTaskList1                        0x20003414   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x20003414   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x20003428   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x20003428   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xFreeBytesRemaining                      0x2000343c   Data           4  heap_4.o(.bss.xFreeBytesRemaining)
    [Anonymous Symbol]                       0x2000343c   Section        0  heap_4.o(.bss.xFreeBytesRemaining)
    xIdleTaskHandle                          0x20003440   Data           4  tasks.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x20003440   Section        0  tasks.o(.bss.xIdleTaskHandle)
    xMinimumEverFreeBytesRemaining           0x20003444   Data           4  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    [Anonymous Symbol]                       0x20003444   Section        0  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    xNextTaskUnblockTime                     0x20003448   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x20003448   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x2000344c   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x2000344c   Section        0  tasks.o(.bss.xNumOfOverflows)
    xNumberOfSuccessfulAllocations           0x20003450   Data           4  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    [Anonymous Symbol]                       0x20003450   Section        0  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    xNumberOfSuccessfulFrees                 0x20003454   Data           4  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    [Anonymous Symbol]                       0x20003454   Section        0  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    xPendedTicks                             0x20003458   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x20003458   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x2000345c   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x2000345c   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x200034b0   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x200034b0   Section        0  tasks.o(.bss.xSchedulerRunning)
    xStart                                   0x200034b4   Data           8  heap_4.o(.bss.xStart)
    [Anonymous Symbol]                       0x200034b4   Section        0  heap_4.o(.bss.xStart)
    xSuspendedTaskList                       0x200034bc   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x200034bc   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x200034d0   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x200034d0   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x200034e4   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x200034e4   Section        0  tasks.o(.bss.xTickCount)
    xTimerQueue                              0x200034e8   Data           4  timers.o(.bss.xTimerQueue)
    [Anonymous Symbol]                       0x200034e8   Section        0  timers.o(.bss.xTimerQueue)
    xTimerTaskHandle                         0x200034ec   Data           4  timers.o(.bss.xTimerTaskHandle)
    [Anonymous Symbol]                       0x200034ec   Section        0  timers.o(.bss.xTimerTaskHandle)
    xYieldPending                            0x200034f0   Data           4  tasks.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x200034f0   Section        0  tasks.o(.bss.xYieldPending)
    __tagsym$$used.0                         0x30000400   Number         0  evkmimxrt1170_flexspi_nor_config.o(.boot_hdr.conf)
    __tagsym$$used.1                         0x30001000   Number         0  fsl_flexspi_nor_boot.o(.boot_hdr.ivt)
    __tagsym$$used.0                         0x30001020   Number         0  fsl_flexspi_nor_boot.o(.boot_hdr.boot_data)
    .ARM.Collect$$$$00000000                 0x30002400   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000003                 0x30002400   Section        4  entry4.o(.ARM.Collect$$$$00000003)
    .ARM.Collect$$$$00000004                 0x30002404   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x30002408   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x30002408   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x30002408   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x30002410   Data           4  entry4.o(.ARM.Collect$$$$00002714)
    .ARM.Collect$$$$0000000D                 0x30002410   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x30002410   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002714                 0x30002410   Section        4  entry4.o(.ARM.Collect$$$$00002714)
    [Anonymous Symbol]                       0x30002414   Section        0  startup_mimxrt1176_cm7.o(.text)
    .text                                    0x300026e8   Section        0  uldiv.o(.text)
    .text                                    0x3000274a   Section        0  memcpy.o(.text)
    .text                                    0x30002772   Section        0  memset.o(.text)
    .text                                    0x30002784   Section        0  strlen.o(.text)
    .text                                    0x30002792   Section        0  memcmp.o(.text)
    .text                                    0x300027ac   Section        0  llshl.o(.text)
    .text                                    0x300027ca   Section        0  llushr.o(.text)
    .text                                    0x300027ec   Section       48  init.o(.text)
    .text                                    0x3000281c   Section        0  __dczerorl2.o(.text)
    [Anonymous Symbol]                       0x30002878   Section        0  fsl_anatop_ai.o(.text.ANATOP_AI_Access)
    [Anonymous Symbol]                       0x30002e98   Section        0  fsl_anatop_ai.o(.text.ANATOP_AI_Read)
    [Anonymous Symbol]                       0x30002ec0   Section        0  fsl_anatop_ai.o(.text.ANATOP_AI_Write)
    [Anonymous Symbol]                       0x30002ee8   Section        0  fsl_anatop_ai.o(.text.ANATOP_AI_WriteWithMaskShift)
    ANATOP_AudioPllGate                      0x30002f31   Thumb Code    56  fsl_clock.o(.text.ANATOP_AudioPllGate)
    [Anonymous Symbol]                       0x30002f30   Section        0  fsl_clock.o(.text.ANATOP_AudioPllGate)
    ANATOP_AudioPllSwEnClk                   0x30002f69   Thumb Code    56  fsl_clock.o(.text.ANATOP_AudioPllSwEnClk)
    [Anonymous Symbol]                       0x30002f68   Section        0  fsl_clock.o(.text.ANATOP_AudioPllSwEnClk)
    ANATOP_PllBypass                         0x30002fa1   Thumb Code    42  fsl_clock.o(.text.ANATOP_PllBypass)
    [Anonymous Symbol]                       0x30002fa0   Section        0  fsl_clock.o(.text.ANATOP_PllBypass)
    ANATOP_PllConfigure                      0x30002fd1   Thumb Code   200  fsl_clock.o(.text.ANATOP_PllConfigure)
    [Anonymous Symbol]                       0x30002fd0   Section        0  fsl_clock.o(.text.ANATOP_PllConfigure)
    ANATOP_PllEnableClk                      0x30003099   Thumb Code    42  fsl_clock.o(.text.ANATOP_PllEnableClk)
    [Anonymous Symbol]                       0x30003098   Section        0  fsl_clock.o(.text.ANATOP_PllEnableClk)
    ANATOP_PllEnablePllReg                   0x300030c9   Thumb Code    42  fsl_clock.o(.text.ANATOP_PllEnablePllReg)
    [Anonymous Symbol]                       0x300030c8   Section        0  fsl_clock.o(.text.ANATOP_PllEnablePllReg)
    ANATOP_PllEnableSs                       0x300030f9   Thumb Code    42  fsl_clock.o(.text.ANATOP_PllEnableSs)
    [Anonymous Symbol]                       0x300030f8   Section        0  fsl_clock.o(.text.ANATOP_PllEnableSs)
    ANATOP_PllHoldRingOff                    0x30003129   Thumb Code    42  fsl_clock.o(.text.ANATOP_PllHoldRingOff)
    [Anonymous Symbol]                       0x30003128   Section        0  fsl_clock.o(.text.ANATOP_PllHoldRingOff)
    ANATOP_PllSetPower                       0x30003159   Thumb Code    52  fsl_clock.o(.text.ANATOP_PllSetPower)
    [Anonymous Symbol]                       0x30003158   Section        0  fsl_clock.o(.text.ANATOP_PllSetPower)
    ANATOP_PllToggleHoldRingOff              0x30003191   Thumb Code    48  fsl_clock.o(.text.ANATOP_PllToggleHoldRingOff)
    [Anonymous Symbol]                       0x30003190   Section        0  fsl_clock.o(.text.ANATOP_PllToggleHoldRingOff)
    ANATOP_SysPll1Div2En                     0x300031c1   Thumb Code    56  fsl_clock.o(.text.ANATOP_SysPll1Div2En)
    [Anonymous Symbol]                       0x300031c0   Section        0  fsl_clock.o(.text.ANATOP_SysPll1Div2En)
    ANATOP_SysPll1Div5En                     0x300031f9   Thumb Code    56  fsl_clock.o(.text.ANATOP_SysPll1Div5En)
    [Anonymous Symbol]                       0x300031f8   Section        0  fsl_clock.o(.text.ANATOP_SysPll1Div5En)
    ANATOP_SysPll1Gate                       0x30003231   Thumb Code    56  fsl_clock.o(.text.ANATOP_SysPll1Gate)
    [Anonymous Symbol]                       0x30003230   Section        0  fsl_clock.o(.text.ANATOP_SysPll1Gate)
    ANATOP_SysPll1SwEnClk                    0x30003269   Thumb Code    56  fsl_clock.o(.text.ANATOP_SysPll1SwEnClk)
    [Anonymous Symbol]                       0x30003268   Section        0  fsl_clock.o(.text.ANATOP_SysPll1SwEnClk)
    ANATOP_VideoPllGate                      0x300032a1   Thumb Code    56  fsl_clock.o(.text.ANATOP_VideoPllGate)
    [Anonymous Symbol]                       0x300032a0   Section        0  fsl_clock.o(.text.ANATOP_VideoPllGate)
    ANATOP_VideoPllSwEnClk                   0x300032d9   Thumb Code    56  fsl_clock.o(.text.ANATOP_VideoPllSwEnClk)
    [Anonymous Symbol]                       0x300032d8   Section        0  fsl_clock.o(.text.ANATOP_VideoPllSwEnClk)
    ARM_MPU_Disable                          0x30003311   Thumb Code    46  board.o(.text.ARM_MPU_Disable)
    [Anonymous Symbol]                       0x30003310   Section        0  board.o(.text.ARM_MPU_Disable)
    ARM_MPU_Enable                           0x30003341   Thumb Code    52  board.o(.text.ARM_MPU_Enable)
    [Anonymous Symbol]                       0x30003340   Section        0  board.o(.text.ARM_MPU_Enable)
    AppTaskCreate                            0x30003379   Thumb Code   100  flexcan_interrupt_transfer.o(.text.AppTaskCreate)
    [Anonymous Symbol]                       0x30003378   Section        0  flexcan_interrupt_transfer.o(.text.AppTaskCreate)
    App_Task                                 0x300033e1   Thumb Code  2138  flexcan_interrupt_transfer.o(.text.App_Task)
    [Anonymous Symbol]                       0x300033e0   Section        0  flexcan_interrupt_transfer.o(.text.App_Task)
    [Anonymous Symbol]                       0x30003c40   Section        0  clock_config.o(.text.BOARD_BootClockRUN)
    [Anonymous Symbol]                       0x30004518   Section        0  board.o(.text.BOARD_ConfigMPU)
    [Anonymous Symbol]                       0x300048c8   Section        0  board.o(.text.BOARD_DebugConsoleSrcFreq)
    [Anonymous Symbol]                       0x300048d8   Section        0  board.o(.text.BOARD_InitDebugConsole)
    [Anonymous Symbol]                       0x300048f8   Section        0  pin_mux.o(.text.BOARD_InitPins)
    BSP_Init                                 0x30004ab1   Thumb Code   574  flexcan_interrupt_transfer.o(.text.BSP_Init)
    [Anonymous Symbol]                       0x30004ab0   Section        0  flexcan_interrupt_transfer.o(.text.BSP_Init)
    [Anonymous Symbol]                       0x30004cf0   Section        0  fsl_flexcan.o(.text.CAN1_DriverIRQHandler)
    [Anonymous Symbol]                       0x30004d40   Section        0  fsl_flexcan.o(.text.CAN2_DriverIRQHandler)
    [Anonymous Symbol]                       0x30004d90   Section        0  fsl_flexcan.o(.text.CAN3_DriverIRQHandler)
    CLOCK_ControlGate                        0x30004de1   Thumb Code   120  pin_mux.o(.text.CLOCK_ControlGate)
    [Anonymous Symbol]                       0x30004de0   Section        0  pin_mux.o(.text.CLOCK_ControlGate)
    CLOCK_ControlGate                        0x30004e59   Thumb Code   120  fsl_flexcan.o(.text.CLOCK_ControlGate)
    [Anonymous Symbol]                       0x30004e58   Section        0  fsl_flexcan.o(.text.CLOCK_ControlGate)
    CLOCK_ControlGate                        0x30004ed1   Thumb Code   120  fsl_lpuart.o(.text.CLOCK_ControlGate)
    [Anonymous Symbol]                       0x30004ed0   Section        0  fsl_lpuart.o(.text.CLOCK_ControlGate)
    CLOCK_ControlGate                        0x30004f49   Thumb Code   120  fsl_gpt.o(.text.CLOCK_ControlGate)
    [Anonymous Symbol]                       0x30004f48   Section        0  fsl_gpt.o(.text.CLOCK_ControlGate)
    [Anonymous Symbol]                       0x30004fc0   Section        0  fsl_clock.o(.text.CLOCK_DeinitAudioPll)
    [Anonymous Symbol]                       0x30004ff8   Section        0  fsl_clock.o(.text.CLOCK_DeinitSysPll1)
    CLOCK_EnableClock                        0x30005041   Thumb Code    22  pin_mux.o(.text.CLOCK_EnableClock)
    [Anonymous Symbol]                       0x30005040   Section        0  pin_mux.o(.text.CLOCK_EnableClock)
    CLOCK_EnableClock                        0x30005059   Thumb Code    22  fsl_flexcan.o(.text.CLOCK_EnableClock)
    [Anonymous Symbol]                       0x30005058   Section        0  fsl_flexcan.o(.text.CLOCK_EnableClock)
    CLOCK_EnableClock                        0x30005071   Thumb Code    22  fsl_lpuart.o(.text.CLOCK_EnableClock)
    [Anonymous Symbol]                       0x30005070   Section        0  fsl_lpuart.o(.text.CLOCK_EnableClock)
    CLOCK_EnableClock                        0x30005089   Thumb Code    22  fsl_gpt.o(.text.CLOCK_EnableClock)
    [Anonymous Symbol]                       0x30005088   Section        0  fsl_gpt.o(.text.CLOCK_EnableClock)
    CLOCK_GetAvPllFreq                       0x300050a1   Thumb Code   264  fsl_clock.o(.text.CLOCK_GetAvPllFreq)
    [Anonymous Symbol]                       0x300050a0   Section        0  fsl_clock.o(.text.CLOCK_GetAvPllFreq)
    [Anonymous Symbol]                       0x300051b0   Section        0  fsl_clock.o(.text.CLOCK_GetFreq)
    CLOCK_GetM7Freq                          0x30005341   Thumb Code    10  fsl_clock.o(.text.CLOCK_GetM7Freq)
    [Anonymous Symbol]                       0x30005340   Section        0  fsl_clock.o(.text.CLOCK_GetM7Freq)
    [Anonymous Symbol]                       0x30005350   Section        0  fsl_clock.o(.text.CLOCK_GetPfdFreq)
    [Anonymous Symbol]                       0x30005498   Section        0  fsl_clock.o(.text.CLOCK_GetPllFreq)
    CLOCK_GetRootClockDiv                    0x30005581   Thumb Code    30  flexcan_interrupt_transfer.o(.text.CLOCK_GetRootClockDiv)
    [Anonymous Symbol]                       0x30005580   Section        0  flexcan_interrupt_transfer.o(.text.CLOCK_GetRootClockDiv)
    CLOCK_GetRootClockDiv                    0x300055a1   Thumb Code    30  board.o(.text.CLOCK_GetRootClockDiv)
    [Anonymous Symbol]                       0x300055a0   Section        0  board.o(.text.CLOCK_GetRootClockDiv)
    CLOCK_GetRootClockDiv                    0x300055c1   Thumb Code    30  clock_config.o(.text.CLOCK_GetRootClockDiv)
    [Anonymous Symbol]                       0x300055c0   Section        0  clock_config.o(.text.CLOCK_GetRootClockDiv)
    CLOCK_GetRootClockDiv                    0x300055e1   Thumb Code    30  fsl_clock.o(.text.CLOCK_GetRootClockDiv)
    [Anonymous Symbol]                       0x300055e0   Section        0  fsl_clock.o(.text.CLOCK_GetRootClockDiv)
    CLOCK_GetRootClockFreq                   0x30005601   Thumb Code   100  flexcan_interrupt_transfer.o(.text.CLOCK_GetRootClockFreq)
    [Anonymous Symbol]                       0x30005600   Section        0  flexcan_interrupt_transfer.o(.text.CLOCK_GetRootClockFreq)
    CLOCK_GetRootClockFreq                   0x30005669   Thumb Code   100  board.o(.text.CLOCK_GetRootClockFreq)
    [Anonymous Symbol]                       0x30005668   Section        0  board.o(.text.CLOCK_GetRootClockFreq)
    CLOCK_GetRootClockFreq                   0x300056d1   Thumb Code   100  clock_config.o(.text.CLOCK_GetRootClockFreq)
    [Anonymous Symbol]                       0x300056d0   Section        0  clock_config.o(.text.CLOCK_GetRootClockFreq)
    CLOCK_GetRootClockFreq                   0x30005739   Thumb Code   100  fsl_clock.o(.text.CLOCK_GetRootClockFreq)
    [Anonymous Symbol]                       0x30005738   Section        0  fsl_clock.o(.text.CLOCK_GetRootClockFreq)
    CLOCK_GetRootClockMux                    0x300057a1   Thumb Code    28  flexcan_interrupt_transfer.o(.text.CLOCK_GetRootClockMux)
    [Anonymous Symbol]                       0x300057a0   Section        0  flexcan_interrupt_transfer.o(.text.CLOCK_GetRootClockMux)
    CLOCK_GetRootClockMux                    0x300057c1   Thumb Code    28  board.o(.text.CLOCK_GetRootClockMux)
    [Anonymous Symbol]                       0x300057c0   Section        0  board.o(.text.CLOCK_GetRootClockMux)
    CLOCK_GetRootClockMux                    0x300057e1   Thumb Code    28  clock_config.o(.text.CLOCK_GetRootClockMux)
    [Anonymous Symbol]                       0x300057e0   Section        0  clock_config.o(.text.CLOCK_GetRootClockMux)
    CLOCK_GetRootClockMux                    0x30005801   Thumb Code    28  fsl_clock.o(.text.CLOCK_GetRootClockMux)
    [Anonymous Symbol]                       0x30005800   Section        0  fsl_clock.o(.text.CLOCK_GetRootClockMux)
    [Anonymous Symbol]                       0x30005820   Section        0  fsl_clock.o(.text.CLOCK_InitArmPll)
    [Anonymous Symbol]                       0x300059d0   Section        0  fsl_clock.o(.text.CLOCK_InitPfd)
    [Anonymous Symbol]                       0x30005b70   Section        0  fsl_clock.o(.text.CLOCK_InitSysPll2)
    [Anonymous Symbol]                       0x30005d68   Section        0  fsl_clock.o(.text.CLOCK_InitSysPll3)
    [Anonymous Symbol]                       0x30005e80   Section        0  fsl_clock.o(.text.CLOCK_InitVideoPll)
    CLOCK_OSC_EnableOsc48M                   0x30005f91   Thumb Code    56  clock_config.o(.text.CLOCK_OSC_EnableOsc48M)
    [Anonymous Symbol]                       0x30005f90   Section        0  clock_config.o(.text.CLOCK_OSC_EnableOsc48M)
    CLOCK_OSC_EnableOsc48MDiv2               0x30005fc9   Thumb Code    56  clock_config.o(.text.CLOCK_OSC_EnableOsc48MDiv2)
    [Anonymous Symbol]                       0x30005fc8   Section        0  clock_config.o(.text.CLOCK_OSC_EnableOsc48MDiv2)
    [Anonymous Symbol]                       0x30006000   Section        0  fsl_clock.o(.text.CLOCK_OSC_EnableOscRc400M)
    CLOCK_OSC_GateOscRc400M                  0x30006029   Thumb Code    56  clock_config.o(.text.CLOCK_OSC_GateOscRc400M)
    [Anonymous Symbol]                       0x30006028   Section        0  clock_config.o(.text.CLOCK_OSC_GateOscRc400M)
    [Anonymous Symbol]                       0x30006060   Section        0  fsl_clock.o(.text.CLOCK_OSC_Set1MHzOutputBehavior)
    [Anonymous Symbol]                       0x300060b0   Section        0  fsl_clock.o(.text.CLOCK_SetPllBypass)
    CLOCK_SetRootClock                       0x300061d9   Thumb Code   116  flexcan_interrupt_transfer.o(.text.CLOCK_SetRootClock)
    [Anonymous Symbol]                       0x300061d8   Section        0  flexcan_interrupt_transfer.o(.text.CLOCK_SetRootClock)
    CLOCK_SetRootClock                       0x30006251   Thumb Code   116  clock_config.o(.text.CLOCK_SetRootClock)
    [Anonymous Symbol]                       0x30006250   Section        0  clock_config.o(.text.CLOCK_SetRootClock)
    [Anonymous Symbol]                       0x300062c8   Section        0  lifegrd.o(.text.ConsumerHeartbeatAlarm)
    [Anonymous Symbol]                       0x30006310   Section        0  pdo.o(.text.CopyBits)
    [Anonymous Symbol]                       0x30006488   Section        0  fsl_dcdc.o(.text.DCDC_BootIntoDCM)
    DCDC_SetVDD1P0BuckModeTargetVoltage      0x300064d9   Thumb Code    58  clock_config.o(.text.DCDC_SetVDD1P0BuckModeTargetVoltage)
    [Anonymous Symbol]                       0x300064d8   Section        0  clock_config.o(.text.DCDC_SetVDD1P0BuckModeTargetVoltage)
    DbgConsole_ConvertRadixNumToString       0x30006519   Thumb Code   188  fsl_debug_console.o(.text.DbgConsole_ConvertRadixNumToString)
    [Anonymous Symbol]                       0x30006518   Section        0  fsl_debug_console.o(.text.DbgConsole_ConvertRadixNumToString)
    [Anonymous Symbol]                       0x300065d8   Section        0  fsl_debug_console.o(.text.DbgConsole_Init)
    [Anonymous Symbol]                       0x30006668   Section        0  fsl_debug_console.o(.text.DbgConsole_Printf)
    DbgConsole_PrintfFormattedData           0x30006699   Thumb Code   976  fsl_debug_console.o(.text.DbgConsole_PrintfFormattedData)
    [Anonymous Symbol]                       0x30006698   Section        0  fsl_debug_console.o(.text.DbgConsole_PrintfFormattedData)
    DbgConsole_PrintfPaddingCharacter        0x30006a69   Thumb Code    64  fsl_debug_console.o(.text.DbgConsole_PrintfPaddingCharacter)
    [Anonymous Symbol]                       0x30006a68   Section        0  fsl_debug_console.o(.text.DbgConsole_PrintfPaddingCharacter)
    [Anonymous Symbol]                       0x30006aa8   Section        0  fsl_debug_console.o(.text.DbgConsole_Putchar)
    [Anonymous Symbol]                       0x30006ae8   Section        0  fsl_debug_console.o(.text.DbgConsole_Vprintf)
    [Anonymous Symbol]                       0x30006b28   Section        0  timer.o(.text.DelAlarm)
    DelayLoop                                0x30006b81   Thumb Code    18  fsl_common_arm.o(.text.DelayLoop)
    [Anonymous Symbol]                       0x30006b80   Section        0  fsl_common_arm.o(.text.DelayLoop)
    loop                                     0x30006b88   Number         0  fsl_common_arm.o(.text.DelayLoop)
    EnableIRQ                                0x30006b99   Thumb Code    44  flexcan_interrupt_transfer.o(.text.EnableIRQ)
    [Anonymous Symbol]                       0x30006b98   Section        0  flexcan_interrupt_transfer.o(.text.EnableIRQ)
    EnableIRQ                                0x30006bc9   Thumb Code    44  fsl_flexcan.o(.text.EnableIRQ)
    [Anonymous Symbol]                       0x30006bc8   Section        0  fsl_flexcan.o(.text.EnableIRQ)
    [Anonymous Symbol]                       0x30006bf8   Section        0  fsl_flexcan.o(.text.FLEXCAN_CalculateImprovedTimingValues)
    FLEXCAN_CheckUnhandleInterruptEvents     0x30006d19   Thumb Code   120  fsl_flexcan.o(.text.FLEXCAN_CheckUnhandleInterruptEvents)
    [Anonymous Symbol]                       0x30006d18   Section        0  fsl_flexcan.o(.text.FLEXCAN_CheckUnhandleInterruptEvents)
    FLEXCAN_ClearMbStatusFlags               0x30006d91   Thumb Code    24  fsl_flexcan.o(.text.FLEXCAN_ClearMbStatusFlags)
    [Anonymous Symbol]                       0x30006d90   Section        0  fsl_flexcan.o(.text.FLEXCAN_ClearMbStatusFlags)
    FLEXCAN_ClearStatusFlags                 0x30006da9   Thumb Code    34  fsl_flexcan.o(.text.FLEXCAN_ClearStatusFlags)
    [Anonymous Symbol]                       0x30006da8   Section        0  fsl_flexcan.o(.text.FLEXCAN_ClearStatusFlags)
    FLEXCAN_DisableInterrupts                0x30006dd1   Thumb Code    88  fsl_flexcan.o(.text.FLEXCAN_DisableInterrupts)
    [Anonymous Symbol]                       0x30006dd0   Section        0  fsl_flexcan.o(.text.FLEXCAN_DisableInterrupts)
    FLEXCAN_DisableMbInterrupts              0x30006e29   Thumb Code    32  fsl_flexcan.o(.text.FLEXCAN_DisableMbInterrupts)
    [Anonymous Symbol]                       0x30006e28   Section        0  fsl_flexcan.o(.text.FLEXCAN_DisableMbInterrupts)
    FLEXCAN_Enable                           0x30006e49   Thumb Code    78  fsl_flexcan.o(.text.FLEXCAN_Enable)
    [Anonymous Symbol]                       0x30006e48   Section        0  fsl_flexcan.o(.text.FLEXCAN_Enable)
    FLEXCAN_EnableInterrupts                 0x30006e99   Thumb Code    74  fsl_flexcan.o(.text.FLEXCAN_EnableInterrupts)
    [Anonymous Symbol]                       0x30006e98   Section        0  fsl_flexcan.o(.text.FLEXCAN_EnableInterrupts)
    FLEXCAN_EnableMbInterrupts               0x30006ee9   Thumb Code    32  fsl_flexcan.o(.text.FLEXCAN_EnableMbInterrupts)
    [Anonymous Symbol]                       0x30006ee8   Section        0  fsl_flexcan.o(.text.FLEXCAN_EnableMbInterrupts)
    [Anonymous Symbol]                       0x30006f08   Section        0  fsl_flexcan.o(.text.FLEXCAN_EnterFreezeMode)
    [Anonymous Symbol]                       0x30006f38   Section        0  fsl_flexcan.o(.text.FLEXCAN_ExitFreezeMode)
    [Anonymous Symbol]                       0x30006f70   Section        0  fsl_flexcan.o(.text.FLEXCAN_GetDefaultConfig)
    FLEXCAN_GetFDMailboxOffset               0x30007021   Thumb Code   196  fsl_flexcan.o(.text.FLEXCAN_GetFDMailboxOffset)
    [Anonymous Symbol]                       0x30007020   Section        0  fsl_flexcan.o(.text.FLEXCAN_GetFDMailboxOffset)
    [Anonymous Symbol]                       0x300070e8   Section        0  fsl_flexcan.o(.text.FLEXCAN_GetInstance)
    FLEXCAN_GetSegments                      0x30007149   Thumb Code   318  fsl_flexcan.o(.text.FLEXCAN_GetSegments)
    [Anonymous Symbol]                       0x30007148   Section        0  fsl_flexcan.o(.text.FLEXCAN_GetSegments)
    FLEXCAN_GetStatusFlags                   0x30007289   Thumb Code    42  fsl_flexcan.o(.text.FLEXCAN_GetStatusFlags)
    [Anonymous Symbol]                       0x30007288   Section        0  fsl_flexcan.o(.text.FLEXCAN_GetStatusFlags)
    [Anonymous Symbol]                       0x300072b8   Section        0  fsl_flexcan.o(.text.FLEXCAN_Init)
    FLEXCAN_IsMbOccupied                     0x30007669   Thumb Code    88  fsl_flexcan.o(.text.FLEXCAN_IsMbOccupied)
    [Anonymous Symbol]                       0x30007668   Section        0  fsl_flexcan.o(.text.FLEXCAN_IsMbOccupied)
    [Anonymous Symbol]                       0x300076c0   Section        0  fsl_flexcan.o(.text.FLEXCAN_ReadFDRxMb)
    [Anonymous Symbol]                       0x30007890   Section        0  fsl_flexcan.o(.text.FLEXCAN_ReadRxFifo)
    [Anonymous Symbol]                       0x30007958   Section        0  fsl_flexcan.o(.text.FLEXCAN_ReadRxMb)
    FLEXCAN_Reset                            0x30007ab1   Thumb Code   260  fsl_flexcan.o(.text.FLEXCAN_Reset)
    [Anonymous Symbol]                       0x30007ab0   Section        0  fsl_flexcan.o(.text.FLEXCAN_Reset)
    [Anonymous Symbol]                       0x30007bb8   Section        0  fsl_flexcan.o(.text.FLEXCAN_SetFDTxMbConfig)
    [Anonymous Symbol]                       0x30007ce0   Section        0  fsl_flexcan.o(.text.FLEXCAN_SetRxMbConfig)
    [Anonymous Symbol]                       0x30007e28   Section        0  fsl_flexcan.o(.text.FLEXCAN_SetTimingConfig)
    [Anonymous Symbol]                       0x30007ee0   Section        0  fsl_flexcan.o(.text.FLEXCAN_SetTxMbConfig)
    FLEXCAN_SubHandlerForDataTransfered      0x30007fa9   Thumb Code   914  fsl_flexcan.o(.text.FLEXCAN_SubHandlerForDataTransfered)
    [Anonymous Symbol]                       0x30007fa8   Section        0  fsl_flexcan.o(.text.FLEXCAN_SubHandlerForDataTransfered)
    [Anonymous Symbol]                       0x30008340   Section        0  fsl_flexcan.o(.text.FLEXCAN_TransferAbortReceive)
    [Anonymous Symbol]                       0x30008420   Section        0  fsl_flexcan.o(.text.FLEXCAN_TransferAbortReceiveFifo)
    [Anonymous Symbol]                       0x30008488   Section        0  fsl_flexcan.o(.text.FLEXCAN_TransferAbortSend)
    [Anonymous Symbol]                       0x30008590   Section        0  fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle)
    [Anonymous Symbol]                       0x300086b0   Section        0  fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortReceive)
    [Anonymous Symbol]                       0x30008790   Section        0  fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortSend)
    [Anonymous Symbol]                       0x300088a0   Section        0  fsl_flexcan.o(.text.FLEXCAN_TransferHandleIRQ)
    [Anonymous Symbol]                       0x30008980   Section        0  fsl_flexcan.o(.text.FLEXCAN_TransferReceiveNonBlocking)
    [Anonymous Symbol]                       0x30008aa0   Section        0  fsl_flexcan.o(.text.FLEXCAN_TransferSendNonBlocking)
    [Anonymous Symbol]                       0x30008bf8   Section        0  fsl_flexcan.o(.text.FLEXCAN_WriteTxMb)
    [Anonymous Symbol]                       0x30008d80   Section        0  flexcan_interrupt_transfer.o(.text.GPT2_IRQHandler)
    GPT_ClearStatusFlags                     0x30008d99   Thumb Code    20  flexcan_interrupt_transfer.o(.text.GPT_ClearStatusFlags)
    [Anonymous Symbol]                       0x30008d98   Section        0  flexcan_interrupt_transfer.o(.text.GPT_ClearStatusFlags)
    GPT_EnableInterrupts                     0x30008db1   Thumb Code    20  flexcan_interrupt_transfer.o(.text.GPT_EnableInterrupts)
    [Anonymous Symbol]                       0x30008db0   Section        0  flexcan_interrupt_transfer.o(.text.GPT_EnableInterrupts)
    [Anonymous Symbol]                       0x30008dc8   Section        0  fsl_gpt.o(.text.GPT_GetDefaultConfig)
    GPT_GetInstance                          0x30008e21   Thumb Code    90  fsl_gpt.o(.text.GPT_GetInstance)
    [Anonymous Symbol]                       0x30008e20   Section        0  fsl_gpt.o(.text.GPT_GetInstance)
    [Anonymous Symbol]                       0x30008e80   Section        0  fsl_gpt.o(.text.GPT_Init)
    GPT_SetClockDivider                      0x30008f21   Thumb Code    64  flexcan_interrupt_transfer.o(.text.GPT_SetClockDivider)
    [Anonymous Symbol]                       0x30008f20   Section        0  flexcan_interrupt_transfer.o(.text.GPT_SetClockDivider)
    GPT_SetClockDivider                      0x30008f61   Thumb Code    64  fsl_gpt.o(.text.GPT_SetClockDivider)
    [Anonymous Symbol]                       0x30008f60   Section        0  fsl_gpt.o(.text.GPT_SetClockDivider)
    GPT_SetClockSource                       0x30008fa1   Thumb Code    78  fsl_gpt.o(.text.GPT_SetClockSource)
    [Anonymous Symbol]                       0x30008fa0   Section        0  fsl_gpt.o(.text.GPT_SetClockSource)
    GPT_SetOutputCompareValue                0x30008ff1   Thumb Code    64  flexcan_interrupt_transfer.o(.text.GPT_SetOutputCompareValue)
    [Anonymous Symbol]                       0x30008ff0   Section        0  flexcan_interrupt_transfer.o(.text.GPT_SetOutputCompareValue)
    GPT_SoftwareReset                        0x30009031   Thumb Code    34  fsl_gpt.o(.text.GPT_SoftwareReset)
    [Anonymous Symbol]                       0x30009030   Section        0  fsl_gpt.o(.text.GPT_SoftwareReset)
    GPT_StartTimer                           0x30009059   Thumb Code    18  flexcan_interrupt_transfer.o(.text.GPT_StartTimer)
    [Anonymous Symbol]                       0x30009058   Section        0  flexcan_interrupt_transfer.o(.text.GPT_StartTimer)
    [Anonymous Symbol]                       0x30009070   Section        0  sdo.o(.text.GetSDOClientFromNodeId)
    [Anonymous Symbol]                       0x30009138   Section        0  lifegrd.o(.text.GuardTimeAlarm)
    HAL_UartGetStatus                        0x30009201   Thumb Code    36  fsl_adapter_lpuart.o(.text.HAL_UartGetStatus)
    [Anonymous Symbol]                       0x30009200   Section        0  fsl_adapter_lpuart.o(.text.HAL_UartGetStatus)
    [Anonymous Symbol]                       0x30009228   Section        0  fsl_adapter_lpuart.o(.text.HAL_UartInit)
    HAL_UartInitCommon                       0x300092f1   Thumb Code   244  fsl_adapter_lpuart.o(.text.HAL_UartInitCommon)
    [Anonymous Symbol]                       0x300092f0   Section        0  fsl_adapter_lpuart.o(.text.HAL_UartInitCommon)
    [Anonymous Symbol]                       0x300093e8   Section        0  fsl_adapter_lpuart.o(.text.HAL_UartReceiveBlocking)
    [Anonymous Symbol]                       0x30009480   Section        0  fsl_adapter_lpuart.o(.text.HAL_UartSendBlocking)
    IOMUXC_MQSConfig                         0x30009511   Thumb Code    52  clock_config.o(.text.IOMUXC_MQSConfig)
    [Anonymous Symbol]                       0x30009510   Section        0  clock_config.o(.text.IOMUXC_MQSConfig)
    IOMUXC_SetPinConfig                      0x30009549   Thumb Code    36  pin_mux.o(.text.IOMUXC_SetPinConfig)
    [Anonymous Symbol]                       0x30009548   Section        0  pin_mux.o(.text.IOMUXC_SetPinConfig)
    IOMUXC_SetPinMux                         0x30009571   Thumb Code    56  pin_mux.o(.text.IOMUXC_SetPinMux)
    [Anonymous Symbol]                       0x30009570   Section        0  pin_mux.o(.text.IOMUXC_SetPinMux)
    IOMUXC_SetSaiMClkClockSource             0x300095a9   Thumb Code   186  clock_config.o(.text.IOMUXC_SetSaiMClkClockSource)
    [Anonymous Symbol]                       0x300095a8   Section        0  clock_config.o(.text.IOMUXC_SetSaiMClkClockSource)
    [Anonymous Symbol]                       0x30009668   Section        0  fsl_lpuart.o(.text.LPUART10_DriverIRQHandler)
    [Anonymous Symbol]                       0x30009690   Section        0  fsl_lpuart.o(.text.LPUART11_DriverIRQHandler)
    [Anonymous Symbol]                       0x300096b8   Section        0  fsl_lpuart.o(.text.LPUART12_DriverIRQHandler)
    [Anonymous Symbol]                       0x300096e0   Section        0  fsl_lpuart.o(.text.LPUART1_DriverIRQHandler)
    [Anonymous Symbol]                       0x30009708   Section        0  fsl_lpuart.o(.text.LPUART2_DriverIRQHandler)
    [Anonymous Symbol]                       0x30009730   Section        0  fsl_lpuart.o(.text.LPUART3_DriverIRQHandler)
    [Anonymous Symbol]                       0x30009758   Section        0  fsl_lpuart.o(.text.LPUART4_DriverIRQHandler)
    [Anonymous Symbol]                       0x30009780   Section        0  fsl_lpuart.o(.text.LPUART5_DriverIRQHandler)
    [Anonymous Symbol]                       0x300097a8   Section        0  fsl_lpuart.o(.text.LPUART6_DriverIRQHandler)
    [Anonymous Symbol]                       0x300097d0   Section        0  fsl_lpuart.o(.text.LPUART7_DriverIRQHandler)
    [Anonymous Symbol]                       0x300097f8   Section        0  fsl_lpuart.o(.text.LPUART8_DriverIRQHandler)
    [Anonymous Symbol]                       0x30009820   Section        0  fsl_lpuart.o(.text.LPUART9_DriverIRQHandler)
    [Anonymous Symbol]                       0x30009848   Section        0  fsl_lpuart.o(.text.LPUART_ClearStatusFlags)
    [Anonymous Symbol]                       0x300098c8   Section        0  fsl_lpuart.o(.text.LPUART_GetDefaultConfig)
    [Anonymous Symbol]                       0x30009940   Section        0  fsl_lpuart.o(.text.LPUART_GetInstance)
    [Anonymous Symbol]                       0x300099a0   Section        0  fsl_lpuart.o(.text.LPUART_GetStatusFlags)
    [Anonymous Symbol]                       0x300099d0   Section        0  fsl_lpuart.o(.text.LPUART_Init)
    [Anonymous Symbol]                       0x30009d40   Section        0  fsl_lpuart.o(.text.LPUART_ReadBlocking)
    LPUART_SoftwareReset                     0x30009ec9   Thumb Code    28  fsl_lpuart.o(.text.LPUART_SoftwareReset)
    [Anonymous Symbol]                       0x30009ec8   Section        0  fsl_lpuart.o(.text.LPUART_SoftwareReset)
    [Anonymous Symbol]                       0x30009ee8   Section        0  fsl_lpuart.o(.text.LPUART_WriteBlocking)
    [Anonymous Symbol]                       0x30009f60   Section        0  master.o(.text.Master_scanIndexOD)
    [Anonymous Symbol]                       0x30009ff8   Section        0  master.o(.text.Master_valueRangeTest)
    [Anonymous Symbol]                       0x3000a030   Section        0  sync.o(.text.OnCOB_ID_SyncUpdate)
    [Anonymous Symbol]                       0x3000a048   Section        0  lifegrd.o(.text.OnHeartbeatProducerUpdate)
    [Anonymous Symbol]                       0x3000a0a8   Section        0  lifegrd.o(.text.OnNodeGuardUpdate)
    [Anonymous Symbol]                       0x3000a0c8   Section        0  emcy.o(.text.OnNumberOfErrorsUpdate)
    [Anonymous Symbol]                       0x3000a120   Section        0  pdo.o(.text.PDOEventTimerAlarm)
    [Anonymous Symbol]                       0x3000a160   Section        0  pdo.o(.text.PDOInhibitTimerAlarm)
    [Anonymous Symbol]                       0x3000a1a0   Section        0  pdo.o(.text.PDOInit)
    [Anonymous Symbol]                       0x3000a230   Section        0  pdo.o(.text.PDOStop)
    [Anonymous Symbol]                       0x3000a300   Section        0  fsl_pmu.o(.text.PMU_EnableBodyBias)
    [Anonymous Symbol]                       0x3000a470   Section        0  fsl_pmu.o(.text.PMU_StaticEnableLpsrAnaLdoBypassMode)
    [Anonymous Symbol]                       0x3000a530   Section        0  fsl_pmu.o(.text.PMU_StaticEnableLpsrDigLdoBypassMode)
    [Anonymous Symbol]                       0x3000a5d8   Section        0  fsl_pmu.o(.text.PMU_StaticEnablePllLdo)
    [Anonymous Symbol]                       0x3000a630   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x3000a690   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x3000a698   Section        0  lifegrd.o(.text.ProducerHeartbeatAlarm)
    [Anonymous Symbol]                       0x3000a700   Section        0  objacces.o(.text.RegisterSetODentryCallBack)
    [Anonymous Symbol]                       0x3000a750   Section        0  fsl_common_arm.o(.text.SDK_DelayAtLeastUs)
    [Anonymous Symbol]                       0x3000a7e8   Section        0  sdo.o(.text.SDOTimeoutAlarm)
    [Anonymous Symbol]                       0x3000a8f0   Section        0  sdo.o(.text.SDOlineToObjdict)
    [Anonymous Symbol]                       0x3000a978   Section        0  sdo.o(.text.SDOtoLine)
    [Anonymous Symbol]                       0x3000aa20   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x3000aa40   Number         0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x3000aa48   Section        0  timer.o(.text.SetAlarm)
    [Anonymous Symbol]                       0x3000ab98   Section        0  sync.o(.text.SyncAlarm)
    [Anonymous Symbol]                       0x3000abb0   Section        0  port.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x3000abf0   Section        0  system_mimxrt1176_cm7.o(.text.SystemInit)
    [Anonymous Symbol]                       0x3000adb0   Section        0  system_mimxrt1176_cm7.o(.text.SystemInitHook)
    [Anonymous Symbol]                       0x3000adb8   Section        0  pdo.o(.text.TPDO_Communication_Parameter_Callback)
    [Anonymous Symbol]                       0x3000ae88   Section        0  timer.o(.text.TimeDispatch)
    [Anonymous Symbol]                       0x3000afe0   Section        0  pdo.o(.text._RxPDO_EventTimers_Handler)
    __NVIC_EnableIRQ                         0x3000aff1   Thumb Code    48  flexcan_interrupt_transfer.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x3000aff0   Section        0  flexcan_interrupt_transfer.o(.text.__NVIC_EnableIRQ)
    __NVIC_EnableIRQ                         0x3000b021   Thumb Code    48  fsl_flexcan.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x3000b020   Section        0  fsl_flexcan.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x3000b050   Section        0  fsl_assert.o(.text.__aeabi_assert)
    [Anonymous Symbol]                       0x3000b070   Section        0  objacces.o(.text._getODentry)
    [Anonymous Symbol]                       0x3000b1f0   Section        0  lifegrd.o(.text._heartbeatError)
    [Anonymous Symbol]                       0x3000b200   Section        0  states.o(.text._initialisation)
    [Anonymous Symbol]                       0x3000b208   Section        0  lifegrd.o(.text._nodeguardError)
    [Anonymous Symbol]                       0x3000b218   Section        0  states.o(.text._operational)
    [Anonymous Symbol]                       0x3000b220   Section        0  lifegrd.o(.text._post_SlaveBootup)
    [Anonymous Symbol]                       0x3000b230   Section        0  lifegrd.o(.text._post_SlaveStateChange)
    [Anonymous Symbol]                       0x3000b240   Section        0  sync.o(.text._post_TPDO)
    [Anonymous Symbol]                       0x3000b248   Section        0  emcy.o(.text._post_emcy)
    [Anonymous Symbol]                       0x3000b260   Section        0  sync.o(.text._post_sync)
    [Anonymous Symbol]                       0x3000b268   Section        0  states.o(.text._preOperational)
    [Anonymous Symbol]                       0x3000b288   Section        0  sdo.o(.text._readNetworkDict)
    [Anonymous Symbol]                       0x3000b480   Section        0  pdo.o(.text._sendPDOevent)
    [Anonymous Symbol]                       0x3000b6e0   Section        0  objacces.o(.text._setODentry)
    [Anonymous Symbol]                       0x3000b8e8   Section        0  states.o(.text._stopped)
    [Anonymous Symbol]                       0x3000b8f0   Section        0  objacces.o(.text._storeODSubIndex)
    [Anonymous Symbol]                       0x3000b908   Section        0  sdo.o(.text._writeNetworkDict)
    [Anonymous Symbol]                       0x3000bbb0   Section        0  objacces.o(.text.accessDictionaryError)
    [Anonymous Symbol]                       0x3000bbc8   Section        0  pdo.o(.text.buildPDO)
    [Anonymous Symbol]                       0x3000bd18   Section        0  states.o(.text.canDispatch)
    [Anonymous Symbol]                       0x3000bde0   Section        0  flexcan_interrupt_transfer.o(.text.canSend)
    [Anonymous Symbol]                       0x3000bec8   Section        0  emcy.o(.text.emergencyInit)
    [Anonymous Symbol]                       0x3000bef8   Section        0  emcy.o(.text.emergencyStop)
    [Anonymous Symbol]                       0x3000bf00   Section        0  sdo.o(.text.failedSDO)
    flexcan_callback                         0x3000c001   Thumb Code   128  flexcan_interrupt_transfer.o(.text.flexcan_callback)
    [Anonymous Symbol]                       0x3000c000   Section        0  flexcan_interrupt_transfer.o(.text.flexcan_callback)
    flexcan_memset                           0x3000c081   Thumb Code    46  fsl_flexcan.o(.text.flexcan_memset)
    [Anonymous Symbol]                       0x3000c080   Section        0  fsl_flexcan.o(.text.flexcan_memset)
    [Anonymous Symbol]                       0x3000c0b0   Section        0  flexcan_interrupt_transfer.o(.text.getElapsedTime)
    [Anonymous Symbol]                       0x3000c0c0   Section        0  states.o(.text.getNodeId)
    [Anonymous Symbol]                       0x3000c0d0   Section        0  sdo.o(.text.getReadResultNetworkDict)
    [Anonymous Symbol]                       0x3000c258   Section        0  sdo.o(.text.getSDOfreeLine)
    [Anonymous Symbol]                       0x3000c2d0   Section        0  sdo.o(.text.getSDOlineOnUse)
    [Anonymous Symbol]                       0x3000c388   Section        0  sdo.o(.text.getSDOlineRestBytes)
    [Anonymous Symbol]                       0x3000c3d0   Section        0  sdo.o(.text.getWriteResultNetworkDict)
    [Anonymous Symbol]                       0x3000c490   Section        0  lifegrd.o(.text.heartbeatInit)
    [Anonymous Symbol]                       0x3000c568   Section        0  lifegrd.o(.text.heartbeatStop)
    [Anonymous Symbol]                       0x3000c5d0   Section        0  sdo.o(.text.initSDOline)
    [Anonymous Symbol]                       0x3000c770   Section        0  lifegrd.o(.text.lifeGuardInit)
    [Anonymous Symbol]                       0x3000c788   Section        0  lifegrd.o(.text.lifeGuardStop)
    [Anonymous Symbol]                       0x3000c7a0   Section        0  sdo.o(.text.lineToSDO)
    [Anonymous Symbol]                       0x3000c868   Section        0  flexcan_interrupt_transfer.o(.text.main)
    [Anonymous Symbol]                       0x3000c8c0   Section        0  nmtmaster.o(.text.masterSendNMTnodeguard)
    [Anonymous Symbol]                       0x3000c900   Section        0  nmtmaster.o(.text.masterSendNMTstateChange)
    [Anonymous Symbol]                       0x3000c940   Section        0  lifegrd.o(.text.nodeguardInit)
    [Anonymous Symbol]                       0x3000ca18   Section        0  lifegrd.o(.text.nodeguardStop)
    [Anonymous Symbol]                       0x3000ca38   Section        0  sdo.o(.text.objdictToSDOline)
    [Anonymous Symbol]                       0x3000cab8   Section        0  emcy.o(.text.proceedEMCY)
    [Anonymous Symbol]                       0x3000cb18   Section        0  nmtslave.o(.text.proceedNMTstateChange)
    [Anonymous Symbol]                       0x3000cc58   Section        0  lifegrd.o(.text.proceedNODE_GUARD)
    [Anonymous Symbol]                       0x3000ce20   Section        0  pdo.o(.text.proceedPDO)
    [Anonymous Symbol]                       0x3000d270   Section        0  sdo.o(.text.proceedSDO)
    [Anonymous Symbol]                       0x3000fe98   Section        0  sync.o(.text.proceedSYNC)
    prvAddCurrentTaskToDelayedList           0x3000fee1   Thumb Code   282  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x3000fee0   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x30010001   Thumb Code   340  tasks.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x30010000   Section        0  tasks.o(.text.prvAddNewTaskToReadyList)
    prvCheckForValidListAndQueue             0x30010159   Thumb Code   140  timers.o(.text.prvCheckForValidListAndQueue)
    [Anonymous Symbol]                       0x30010158   Section        0  timers.o(.text.prvCheckForValidListAndQueue)
    prvCheckTasksWaitingTermination          0x300101e9   Thumb Code    90  tasks.o(.text.prvCheckTasksWaitingTermination)
    [Anonymous Symbol]                       0x300101e8   Section        0  tasks.o(.text.prvCheckTasksWaitingTermination)
    prvCopyDataFromQueue                     0x30010249   Thumb Code    66  queue.o(.text.prvCopyDataFromQueue)
    [Anonymous Symbol]                       0x30010248   Section        0  queue.o(.text.prvCopyDataFromQueue)
    prvDeleteTCB                             0x30010291   Thumb Code    24  tasks.o(.text.prvDeleteTCB)
    [Anonymous Symbol]                       0x30010290   Section        0  tasks.o(.text.prvDeleteTCB)
    prvGetNextExpireTime                     0x300102a9   Thumb Code    64  timers.o(.text.prvGetNextExpireTime)
    [Anonymous Symbol]                       0x300102a8   Section        0  timers.o(.text.prvGetNextExpireTime)
    prvHeapInit                              0x300102e9   Thumb Code   174  heap_4.o(.text.prvHeapInit)
    [Anonymous Symbol]                       0x300102e8   Section        0  heap_4.o(.text.prvHeapInit)
    prvIdleTask                              0x30010399   Thumb Code    56  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x30010398   Section        0  tasks.o(.text.prvIdleTask)
    prvInitialiseNewQueue                    0x300103d1   Thumb Code    72  queue.o(.text.prvInitialiseNewQueue)
    [Anonymous Symbol]                       0x300103d0   Section        0  queue.o(.text.prvInitialiseNewQueue)
    prvInitialiseNewTask                     0x30010419   Thumb Code   300  tasks.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x30010418   Section        0  tasks.o(.text.prvInitialiseNewTask)
    prvInitialiseTaskLists                   0x30010549   Thumb Code   142  tasks.o(.text.prvInitialiseTaskLists)
    [Anonymous Symbol]                       0x30010548   Section        0  tasks.o(.text.prvInitialiseTaskLists)
    prvInsertBlockIntoFreeList               0x300105d9   Thumb Code   198  heap_4.o(.text.prvInsertBlockIntoFreeList)
    [Anonymous Symbol]                       0x300105d8   Section        0  heap_4.o(.text.prvInsertBlockIntoFreeList)
    prvInsertTimerInActiveList               0x300106a1   Thumb Code   134  timers.o(.text.prvInsertTimerInActiveList)
    [Anonymous Symbol]                       0x300106a0   Section        0  timers.o(.text.prvInsertTimerInActiveList)
    prvIsQueueEmpty                          0x30010729   Thumb Code    40  queue.o(.text.prvIsQueueEmpty)
    [Anonymous Symbol]                       0x30010728   Section        0  queue.o(.text.prvIsQueueEmpty)
    prvPortStartFirstTask                    0x30010751   Thumb Code    40  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x30010750   Section        0  port.o(.text.prvPortStartFirstTask)
    prvProcessExpiredTimer                   0x30010779   Thumb Code    84  timers.o(.text.prvProcessExpiredTimer)
    [Anonymous Symbol]                       0x30010778   Section        0  timers.o(.text.prvProcessExpiredTimer)
    prvProcessReceivedCommands               0x300107d1   Thumb Code   392  timers.o(.text.prvProcessReceivedCommands)
    [Anonymous Symbol]                       0x300107d0   Section        0  timers.o(.text.prvProcessReceivedCommands)
    prvProcessTimerOrBlockTask               0x30010959   Thumb Code   154  timers.o(.text.prvProcessTimerOrBlockTask)
    [Anonymous Symbol]                       0x30010958   Section        0  timers.o(.text.prvProcessTimerOrBlockTask)
    prvReloadTimer                           0x300109f9   Thumb Code    52  timers.o(.text.prvReloadTimer)
    [Anonymous Symbol]                       0x300109f8   Section        0  timers.o(.text.prvReloadTimer)
    prvResetNextTaskUnblockTime              0x30010a31   Thumb Code    60  tasks.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x30010a30   Section        0  tasks.o(.text.prvResetNextTaskUnblockTime)
    prvSampleTimeNow                         0x30010a71   Thumb Code    68  timers.o(.text.prvSampleTimeNow)
    [Anonymous Symbol]                       0x30010a70   Section        0  timers.o(.text.prvSampleTimeNow)
    prvSwitchTimerLists                      0x30010ab9   Thumb Code    82  timers.o(.text.prvSwitchTimerLists)
    [Anonymous Symbol]                       0x30010ab8   Section        0  timers.o(.text.prvSwitchTimerLists)
    prvTaskExitError                         0x30010b11   Thumb Code    84  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x30010b10   Section        0  port.o(.text.prvTaskExitError)
    prvTimerTask                             0x30010b69   Thumb Code    30  timers.o(.text.prvTimerTask)
    [Anonymous Symbol]                       0x30010b68   Section        0  timers.o(.text.prvTimerTask)
    prvUnlockQueue                           0x30010b89   Thumb Code   174  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x30010b88   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x30010c38   Section        0  heap_4.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x30010e08   Section        0  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x30010e68   Section        0  sdo.o(.text.readNetworkDict)
    [Anonymous Symbol]                       0x30010ec0   Section        0  sdo.o(.text.resetSDO)
    [Anonymous Symbol]                       0x30010ef8   Section        0  sdo.o(.text.resetSDOline)
    [Anonymous Symbol]                       0x30010f68   Section        0  pdo.o(.text.sendOnePDOevent)
    sendPdo                                  0x30011151   Thumb Code    60  pdo.o(.text.sendPdo)
    [Anonymous Symbol]                       0x30011150   Section        0  pdo.o(.text.sendPdo)
    [Anonymous Symbol]                       0x30011190   Section        0  sdo.o(.text.sendSDO)
    [Anonymous Symbol]                       0x300112b8   Section        0  sdo.o(.text.sendSDOabort)
    [Anonymous Symbol]                       0x30011330   Section        0  sync.o(.text.sendSYNC)
    [Anonymous Symbol]                       0x30011350   Section        0  sync.o(.text.sendSYNCMessage)
    [Anonymous Symbol]                       0x30011380   Section        0  states.o(.text.setNodeId)
    [Anonymous Symbol]                       0x30011678   Section        0  sdo.o(.text.setSDOlineRestBytes)
    [Anonymous Symbol]                       0x300116b8   Section        0  states.o(.text.setState)
    [Anonymous Symbol]                       0x300117f0   Section        0  flexcan_interrupt_transfer.o(.text.setTimer)
    [Anonymous Symbol]                       0x30011810   Section        0  nmtslave.o(.text.slaveSendBootUp)
    [Anonymous Symbol]                       0x30011850   Section        0  sync.o(.text.startSYNC)
    [Anonymous Symbol]                       0x300118d8   Section        0  sync.o(.text.stopSYNC)
    [Anonymous Symbol]                       0x30011910   Section        0  states.o(.text.switchCommunicationState)
    [Anonymous Symbol]                       0x30011ad0   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x30011b18   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x30011b48   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x30011b58   Section        0  list.o(.text.vListInsert)
    [Anonymous Symbol]                       0x30011bc8   Section        0  list.o(.text.vListInsertEnd)
    vPortEnableVFP                           0x30011c09   Thumb Code    20  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x30011c08   Section        0  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x30011c20   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x30011c80   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x30011cd0   Section        0  heap_4.o(.text.vPortFree)
    [Anonymous Symbol]                       0x30011d98   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x30011de0   Section        0  queue.o(.text.vQueueAddToRegistry)
    [Anonymous Symbol]                       0x30011ea0   Section        0  queue.o(.text.vQueueWaitForMessageRestricted)
    [Anonymous Symbol]                       0x30011f08   Section        0  tasks.o(.text.vTaskDelete)
    [Anonymous Symbol]                       0x30012060   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x30012088   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x30012098   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x300120e0   Section        0  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    [Anonymous Symbol]                       0x30012160   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x30012220   Section        0  tasks.o(.text.vTaskSuspendAll)
    __tagsym$$used.0                         0x30012230   Number         0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x30012230   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x300122f8   Section        0  sdo.o(.text.writeNetworkDict)
    [Anonymous Symbol]                       0x30012368   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x30012468   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x30012508   Section        0  queue.o(.text.xQueueGenericReset)
    [Anonymous Symbol]                       0x30012618   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x30012800   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x300128e0   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x30012988   Section        0  tasks.o(.text.xTaskGetSchedulerState)
    [Anonymous Symbol]                       0x300129c0   Section        0  tasks.o(.text.xTaskGetTickCount)
    [Anonymous Symbol]                       0x300129d8   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x30012c18   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x30012da8   Section        0  tasks.o(.text.xTaskResumeAll)
    [Anonymous Symbol]                       0x30012fd0   Section        0  timers.o(.text.xTimerCreateTimerTask)
    i.__scatterload_copy                     0x3001303e   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x3001304c   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x3001304e   Section       14  handlers.o(i.__scatterload_zeroinit)
    s_LpuartAdapterBase                      0x300130a8   Data          52  fsl_adapter_lpuart.o(.rodata.s_LpuartAdapterBase)
    [Anonymous Symbol]                       0x300130a8   Section        0  fsl_adapter_lpuart.o(.rodata.s_LpuartAdapterBase)
    s_clockSourceName                        0x300130dc   Data         632  flexcan_interrupt_transfer.o(.rodata.s_clockSourceName)
    [Anonymous Symbol]                       0x300130dc   Section        0  flexcan_interrupt_transfer.o(.rodata.s_clockSourceName)
    s_clockSourceName                        0x30013354   Data         632  board.o(.rodata.s_clockSourceName)
    [Anonymous Symbol]                       0x30013354   Section        0  board.o(.rodata.s_clockSourceName)
    s_clockSourceName                        0x300135cc   Data         632  clock_config.o(.rodata.s_clockSourceName)
    [Anonymous Symbol]                       0x300135cc   Section        0  clock_config.o(.rodata.s_clockSourceName)
    s_clockSourceName                        0x30013844   Data         632  fsl_clock.o(.rodata.s_clockSourceName)
    [Anonymous Symbol]                       0x30013844   Section        0  fsl_clock.o(.rodata.s_clockSourceName)
    s_flexcanBases                           0x30013abc   Data          16  fsl_flexcan.o(.rodata.s_flexcanBases)
    [Anonymous Symbol]                       0x30013abc   Section        0  fsl_flexcan.o(.rodata.s_flexcanBases)
    s_flexcanBusOffIRQ                       0x30013acc   Data           8  fsl_flexcan.o(.rodata.s_flexcanBusOffIRQ)
    [Anonymous Symbol]                       0x30013acc   Section        0  fsl_flexcan.o(.rodata.s_flexcanBusOffIRQ)
    s_flexcanClock                           0x30013ad4   Data           4  fsl_flexcan.o(.rodata.s_flexcanClock)
    [Anonymous Symbol]                       0x30013ad4   Section        0  fsl_flexcan.o(.rodata.s_flexcanClock)
    s_flexcanErrorIRQ                        0x30013ad8   Data           8  fsl_flexcan.o(.rodata.s_flexcanErrorIRQ)
    [Anonymous Symbol]                       0x30013ad8   Section        0  fsl_flexcan.o(.rodata.s_flexcanErrorIRQ)
    s_flexcanMbIRQ                           0x30013ae0   Data           8  fsl_flexcan.o(.rodata.s_flexcanMbIRQ)
    [Anonymous Symbol]                       0x30013ae0   Section        0  fsl_flexcan.o(.rodata.s_flexcanMbIRQ)
    s_flexcanRxWarningIRQ                    0x30013ae8   Data           8  fsl_flexcan.o(.rodata.s_flexcanRxWarningIRQ)
    [Anonymous Symbol]                       0x30013ae8   Section        0  fsl_flexcan.o(.rodata.s_flexcanRxWarningIRQ)
    s_flexcanTxWarningIRQ                    0x30013af0   Data           8  fsl_flexcan.o(.rodata.s_flexcanTxWarningIRQ)
    [Anonymous Symbol]                       0x30013af0   Section        0  fsl_flexcan.o(.rodata.s_flexcanTxWarningIRQ)
    s_flexcanWakeUpIRQ                       0x30013af8   Data           8  fsl_flexcan.o(.rodata.s_flexcanWakeUpIRQ)
    [Anonymous Symbol]                       0x30013af8   Section        0  fsl_flexcan.o(.rodata.s_flexcanWakeUpIRQ)
    s_gptBases                               0x30013b00   Data          28  fsl_gpt.o(.rodata.s_gptBases)
    [Anonymous Symbol]                       0x30013b00   Section        0  fsl_gpt.o(.rodata.s_gptBases)
    s_gptClocks                              0x30013b1c   Data           7  fsl_gpt.o(.rodata.s_gptClocks)
    [Anonymous Symbol]                       0x30013b1c   Section        0  fsl_gpt.o(.rodata.s_gptClocks)
    s_lpuartBases                            0x30013b24   Data          52  fsl_lpuart.o(.rodata.s_lpuartBases)
    [Anonymous Symbol]                       0x30013b24   Section        0  fsl_lpuart.o(.rodata.s_lpuartBases)
    s_lpuartClock                            0x30013b58   Data          13  fsl_lpuart.o(.rodata.s_lpuartClock)
    [Anonymous Symbol]                       0x30013b58   Section        0  fsl_lpuart.o(.rodata.s_lpuartClock)
    .L.str.27                                0x30013b65   Data          19  flexcan_interrupt_transfer.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x30013b65   Section        0  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.23                                0x30013b78   Data          19  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.9                                 0x30013b8b   Data          50  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.19                                0x30013bbd   Data          12  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.24                                0x30013bc9   Data          61  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.22                                0x30013c06   Data          61  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.20                                0x30013c43   Data          60  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.26                                0x30013c7f   Data          60  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.10                                0x30013cbb   Data          76  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.25                                0x30013d07   Data          18  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.21                                0x30013d19   Data          18  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.18                                0x30013d2b   Data          26  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str                                   0x30013d45   Data          16  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.4                                 0x30013d55   Data          43  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.3                                 0x30013d80   Data          49  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.2                                 0x30013db1   Data          27  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.5                                 0x30013dcc   Data          37  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.6                                 0x30013df1   Data          37  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.7                                 0x30013e16   Data          30  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.8                                 0x30013e34   Data          43  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.13                                0x30013e5f   Data          39  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.11                                0x30013e86   Data          38  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.4                                 0x30013e86   Data          38  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.1                                 0x30013eac   Data          14  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.1                                 0x30013eba   Data          60  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.15                                0x30013eba   Data          60  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.16                                0x30013eba   Data          60  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.5                                 0x30013eba   Data          60  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.12                                0x30013ef6   Data          58  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.5                                 0x30013ef6   Data          58  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.17                                0x30013f30   Data           9  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.15                                0x30013f39   Data           5  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.16                                0x30013f39   Data           5  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.2                                 0x30013f39   Data           5  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str.4                                 0x30013f39   Data           5  flexcan_interrupt_transfer.o(.rodata.str1.1)
    .L.str                                   0x30013f3e   Data          24  board.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x30013f3e   Section        0  board.o(.rodata.str1.1)
    .L.str.2                                 0x30013f56   Data          27  board.o(.rodata.str1.1)
    .L.str.3                                 0x30013f71   Data           7  board.o(.rodata.str1.1)
    .L.str.1                                 0x30013f78   Data          11  board.o(.rodata.str1.1)
    .L.str                                   0x30013f83   Data          43  fsl_assert.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x30013f83   Section        0  fsl_assert.o(.rodata.str1.1)
    .L.str.17                                0x30013fae   Data          45  fsl_flexcan.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x30013fae   Section        0  fsl_flexcan.o(.rodata.str1.1)
    .L.str.3                                 0x30013fdb   Data         117  fsl_flexcan.o(.rodata.str1.1)
    .L.str.27                                0x300140b9   Data          51  fsl_flexcan.o(.rodata.str1.1)
    .L.str.11                                0x300140c2   Data          42  fsl_flexcan.o(.rodata.str1.1)
    .L.str.33                                0x30014118   Data          38  fsl_flexcan.o(.rodata.str1.1)
    .L.str.6                                 0x30014118   Data          25  fsl_flexcan.o(.rodata.str1.1)
    .L.str.7                                 0x30014131   Data         105  fsl_flexcan.o(.rodata.str1.1)
    .L.str                                   0x3001416b   Data          38  fsl_flexcan.o(.rodata.str1.1)
    .L.str.12                                0x30014191   Data          35  fsl_flexcan.o(.rodata.str1.1)
    .L.str.8                                 0x3001419a   Data          62  fsl_flexcan.o(.rodata.str1.1)
    .L.str.28                                0x300141b4   Data          44  fsl_flexcan.o(.rodata.str1.1)
    .L.str.9                                 0x300141d8   Data          41  fsl_flexcan.o(.rodata.str1.1)
    .L.str.4                                 0x300141e0   Data          88  fsl_flexcan.o(.rodata.str1.1)
    .L.str.10                                0x30014201   Data          44  fsl_flexcan.o(.rodata.str1.1)
    .L.str.14                                0x30014295   Data          29  fsl_flexcan.o(.rodata.str1.1)
    .L.str.15                                0x300142b2   Data          31  fsl_flexcan.o(.rodata.str1.1)
    .L.str.13                                0x300142c7   Data          27  fsl_flexcan.o(.rodata.str1.1)
    .L.str.16                                0x300142d1   Data          21  fsl_flexcan.o(.rodata.str1.1)
    .L.str.18                                0x30014313   Data          45  fsl_flexcan.o(.rodata.str1.1)
    .L.str.23                                0x30014320   Data          23  fsl_flexcan.o(.rodata.str1.1)
    .L.str.19                                0x30014340   Data          35  fsl_flexcan.o(.rodata.str1.1)
    .L.str.30                                0x3001435a   Data          27  fsl_flexcan.o(.rodata.str1.1)
    .L.str.20                                0x30014363   Data          37  fsl_flexcan.o(.rodata.str1.1)
    .L.str.31                                0x30014375   Data          27  fsl_flexcan.o(.rodata.str1.1)
    .L.str.21                                0x30014388   Data           6  fsl_flexcan.o(.rodata.str1.1)
    .L.str.32                                0x30014390   Data          27  fsl_flexcan.o(.rodata.str1.1)
    .L.str.1                                 0x300143ab   Data          62  fsl_flexcan.o(.rodata.str1.1)
    .L.str                                   0x300143e9   Data          15  fsl_flexcan.o(.rodata.str1.1)
    .L.str.25                                0x300143e9   Data          15  fsl_flexcan.o(.rodata.str1.1)
    .L.str.24                                0x300143f8   Data          17  fsl_flexcan.o(.rodata.str1.1)
    .L.str.22                                0x30014409   Data          17  fsl_flexcan.o(.rodata.str1.1)
    .L.str.5                                 0x3001441a   Data           6  fsl_flexcan.o(.rodata.str1.1)
    .L.str.2                                 0x30014420   Data          16  fsl_flexcan.o(.rodata.str1.1)
    .L.str.26                                0x30014430   Data          16  fsl_flexcan.o(.rodata.str1.1)
    .L.str.29                                0x30014445   Data          18  fsl_flexcan.o(.rodata.str1.1)
    .L.str.5                                 0x30014452   Data          41  fsl_flexcan.o(.rodata.str1.1)
    .L.str.6                                 0x300144a4   Data          51  fsl_clock.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x300144a4   Section        0  fsl_clock.o(.rodata.str1.1)
    .L.str                                   0x30014533   Data         113  fsl_clock.o(.rodata.str1.1)
    .L.str.2                                 0x30014551   Data          11  fsl_clock.o(.rodata.str1.1)
    .L.str.14                                0x300145a4   Data          53  fsl_clock.o(.rodata.str1.1)
    .L.str.12                                0x300145f3   Data          12  fsl_clock.o(.rodata.str1.1)
    .L.str.7                                 0x300145ff   Data          31  fsl_clock.o(.rodata.str1.1)
    .L.str.9                                 0x3001460f   Data          15  fsl_clock.o(.rodata.str1.1)
    .L.str.10                                0x3001461e   Data          47  fsl_clock.o(.rodata.str1.1)
    .L.str.4                                 0x3001461e   Data          30  fsl_clock.o(.rodata.str1.1)
    .L.str.8                                 0x3001463c   Data          31  fsl_clock.o(.rodata.str1.1)
    .L.str.11                                0x3001464d   Data          45  fsl_clock.o(.rodata.str1.1)
    .L.str.3                                 0x3001465b   Data          30  fsl_clock.o(.rodata.str1.1)
    .L.str.1                                 0x30014679   Data          60  fsl_clock.o(.rodata.str1.1)
    .L.str.13                                0x30014686   Data          26  fsl_clock.o(.rodata.str1.1)
    .L.str                                   0x300146cf   Data          61  fsl_common_arm.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x300146cf   Section        0  fsl_common_arm.o(.rodata.str1.1)
    .L.str.2                                 0x3001470c   Data          20  fsl_common_arm.o(.rodata.str1.1)
    .L.str.1                                 0x30014720   Data          65  fsl_common_arm.o(.rodata.str1.1)
    .L.str                                   0x30014761   Data          37  fsl_lpuart.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x30014761   Section        0  fsl_lpuart.o(.rodata.str1.1)
    .L.str.5                                 0x300147bd   Data          13  fsl_lpuart.o(.rodata.str1.1)
    .L.str.9                                 0x300147bd   Data          13  fsl_lpuart.o(.rodata.str1.1)
    .L.str.2                                 0x300147c3   Data          15  fsl_lpuart.o(.rodata.str1.1)
    .L.str.1                                 0x300147ca   Data          61  fsl_lpuart.o(.rodata.str1.1)
    .L.str.2                                 0x3001482e   Data          15  fsl_lpuart.o(.rodata.str1.1)
    .L.str.2                                 0x3001482e   Data          15  fsl_lpuart.o(.rodata.str1.1)
    .L.str.3                                 0x3001482e   Data          15  fsl_lpuart.o(.rodata.str1.1)
    .L.str                                   0x30014836   Data           7  fsl_lpuart.o(.rodata.str1.1)
    .L.str.14                                0x30014836   Data           7  fsl_lpuart.o(.rodata.str1.1)
    .L.str.6                                 0x3001483d   Data          71  fsl_lpuart.o(.rodata.str1.1)
    .L.str.5                                 0x30014884   Data          71  fsl_lpuart.o(.rodata.str1.1)
    .L.str.7                                 0x30014889   Data          18  fsl_lpuart.o(.rodata.str1.1)
    .L.str.8                                 0x3001489b   Data          13  fsl_lpuart.o(.rodata.str1.1)
    .L.str.10                                0x300148b5   Data          19  fsl_lpuart.o(.rodata.str1.1)
    .L.str.11                                0x300148c8   Data          13  fsl_lpuart.o(.rodata.str1.1)
    .L.str.12                                0x300148d5   Data          21  fsl_lpuart.o(.rodata.str1.1)
    .L.str.13                                0x300148ea   Data          21  fsl_lpuart.o(.rodata.str1.1)
    .L.str.4                                 0x300148fd   Data          26  fsl_lpuart.o(.rodata.str1.1)
    .L.str.14                                0x300148ff   Data          14  fsl_lpuart.o(.rodata.str1.1)
    .L.str.15                                0x3001490d   Data          21  fsl_lpuart.o(.rodata.str1.1)
    .L.str.16                                0x30014922   Data          18  fsl_lpuart.o(.rodata.str1.1)
    .L.str.3                                 0x30014925   Data          34  fsl_gpt.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x30014925   Section        0  fsl_gpt.o(.rodata.str1.1)
    .L.str.1                                 0x30014947   Data          58  fsl_gpt.o(.rodata.str1.1)
    .L.str                                   0x30014981   Data          19  fsl_gpt.o(.rodata.str1.1)
    .L.str.3                                 0x30014994   Data          73  fsl_adapter_lpuart.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x30014994   Section        0  fsl_adapter_lpuart.o(.rodata.str1.1)
    .L.str.6                                 0x300149dd   Data          12  fsl_adapter_lpuart.o(.rodata.str1.1)
    .L.str.4                                 0x300149e9   Data          46  fsl_adapter_lpuart.o(.rodata.str1.1)
    .L.str.1                                 0x30014a17   Data          58  fsl_adapter_lpuart.o(.rodata.str1.1)
    .L.str                                   0x30014a51   Data           5  tasks.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x30014a51   Section        0  tasks.o(.rodata.str1.1)
    .L.str.1                                 0x30014a56   Data           5  timers.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x30014a56   Section        0  timers.o(.rodata.str1.1)
    .L.str                                   0x30014a5b   Data           8  timers.o(.rodata.str1.1)
    VTOR                                     0xe000ed08   Number         0  startup_mimxrt1176_cm7.o ABSOLUTE

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPv5_D16$PE$PLD8$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    Master_Data                              0x20000000   Data        1164  master.o(.data.Master_Data)
    Master_Index1000                         0x2000048c   Data          16  master.o(.data.Master_Index1000)
    Master_Index1001                         0x2000049c   Data          16  master.o(.data.Master_Index1001)
    Master_Index1018                         0x200004ac   Data          80  master.o(.data.Master_Index1018)
    Master_Index1280                         0x200004fc   Data          64  master.o(.data.Master_Index1280)
    Master_Index1281                         0x2000053c   Data          64  master.o(.data.Master_Index1281)
    Master_PDO_status                        0x2000057c   Data          18  master.o(.data.Master_PDO_status)
    Master_highestSubIndex_obj1018           0x2000058e   Data           1  master.o(.data.Master_highestSubIndex_obj1018)
    Master_highestSubIndex_obj1280           0x2000058f   Data           1  master.o(.data.Master_highestSubIndex_obj1280)
    Master_highestSubIndex_obj1281           0x20000590   Data           1  master.o(.data.Master_highestSubIndex_obj1281)
    Master_obj1014                           0x20000594   Data           4  master.o(.data.Master_obj1014)
    Master_obj1280_COB_ID_Client_to_Server_Transmit_SDO 0x20000598   Data           4  master.o(.data.Master_obj1280_COB_ID_Client_to_Server_Transmit_SDO)
    Master_obj1280_COB_ID_Server_to_Client_Receive_SDO 0x2000059c   Data           4  master.o(.data.Master_obj1280_COB_ID_Server_to_Client_Receive_SDO)
    Master_obj1280_Node_ID_of_the_SDO_Server 0x200005a0   Data           1  master.o(.data.Master_obj1280_Node_ID_of_the_SDO_Server)
    Master_obj1281_COB_ID_Client_to_Server_Transmit_SDO 0x200005a4   Data           4  master.o(.data.Master_obj1281_COB_ID_Client_to_Server_Transmit_SDO)
    Master_obj1281_COB_ID_Server_to_Client_Receive_SDO 0x200005a8   Data           4  master.o(.data.Master_obj1281_COB_ID_Server_to_Client_Receive_SDO)
    Master_obj1281_Node_ID_of_the_SDO_Server 0x200005ac   Data           1  master.o(.data.Master_obj1281_Node_ID_of_the_SDO_Server)
    SystemCoreClock                          0x200005b0   Data           4  system_mimxrt1176_cm7.o(.data.SystemCoreClock)
    last_timer_raw                           0x200005b4   Data           2  timer.o(.data.last_timer_raw)
    readSize                                 0x200005b8   Data           4  flexcan_interrupt_transfer.o(.data.readSize)
    s_lpuartIsr                              0x200005c0   Data          52  fsl_lpuart.o(.data.s_lpuartIsr)
    total_sleep_time                         0x200005f4   Data           4  timer.o(.data.total_sleep_time)
    Master_bDeviceNodeId                     0x20000604   Data           1  master.o(.bss.Master_bDeviceNodeId)
    Master_heartBeatTimers                   0x20000606   Data           2  master.o(.bss.Master_heartBeatTimers)
    Master_highestSubIndex_obj1003           0x20000608   Data           1  master.o(.bss.Master_highestSubIndex_obj1003)
    Master_highestSubIndex_obj1016           0x20000609   Data           1  master.o(.bss.Master_highestSubIndex_obj1016)
    Master_obj1000                           0x2000060c   Data           4  master.o(.bss.Master_obj1000)
    Master_obj1001                           0x20000610   Data           1  master.o(.bss.Master_obj1001)
    Master_obj1003                           0x20000614   Data           4  master.o(.bss.Master_obj1003)
    Master_obj1005                           0x20000618   Data           4  master.o(.bss.Master_obj1005)
    Master_obj1006                           0x2000061c   Data           4  master.o(.bss.Master_obj1006)
    Master_obj100C                           0x20000620   Data           2  master.o(.bss.Master_obj100C)
    Master_obj100D                           0x20000622   Data           1  master.o(.bss.Master_obj100D)
    Master_obj1016                           0x20000624   Data           4  master.o(.bss.Master_obj1016)
    Master_obj1017                           0x20000628   Data           2  master.o(.bss.Master_obj1017)
    Master_obj1018_Product_Code              0x2000062c   Data           4  master.o(.bss.Master_obj1018_Product_Code)
    Master_obj1018_Revision_Number           0x20000630   Data           4  master.o(.bss.Master_obj1018_Revision_Number)
    Master_obj1018_Serial_Number             0x20000634   Data           4  master.o(.bss.Master_obj1018_Serial_Number)
    Master_obj1018_Vendor_ID                 0x20000638   Data           4  master.o(.bss.Master_obj1018_Vendor_ID)
    abortCode                                0x2000063c   Data           4  flexcan_interrupt_transfer.o(.bss.abortCode)
    flexcanConfig                            0x20000640   Data          36  flexcan_interrupt_transfer.o(.bss.flexcanConfig)
    flexcanHandle                            0x20000664   Data         856  flexcan_interrupt_transfer.o(.bss.flexcanHandle)
    frame                                    0x200009bc   Data          16  flexcan_interrupt_transfer.o(.bss.frame)
    gptConfig                                0x200009cc   Data          16  flexcan_interrupt_transfer.o(.bss.gptConfig)
    gptFreq                                  0x200009dc   Data           4  flexcan_interrupt_transfer.o(.bss.gptFreq)
    mbConfig                                 0x200009e0   Data           8  flexcan_interrupt_transfer.o(.bss.mbConfig)
    pxCurrentTCB                             0x200009ec   Data           4  tasks.o(.bss.pxCurrentTCB)
    readData01                               0x20000a68   Data           8  flexcan_interrupt_transfer.o(.bss.readData01)
    readData02                               0x20000a70   Data           8  flexcan_interrupt_transfer.o(.bss.readData02)
    rxComplete                               0x20000a78   Data           1  flexcan_interrupt_transfer.o(.bss.rxComplete)
    rxIdentifier                             0x20000a7c   Data           4  flexcan_interrupt_transfer.o(.bss.rxIdentifier)
    rxMessage                                0x20000a80   Data          12  flexcan_interrupt_transfer.o(.bss.rxMessage)
    rxXfer                                   0x20000a8c   Data          12  flexcan_interrupt_transfer.o(.bss.rxXfer)
    s_lpuartHandle                           0x20000abc   Data          52  fsl_lpuart.o(.bss.s_lpuartHandle)
    sendData                                 0x20000af0   Data           4  flexcan_interrupt_transfer.o(.bss.sendData)
    t                                        0x20000af4   Data           1  flexcan_interrupt_transfer.o(.bss.t)
    timers                                   0x20000af8   Data         192  timer.o(.bss.timers)
    tsdovalue                                0x20000bb8   Data           1  flexcan_interrupt_transfer.o(.bss.tsdovalue)
    txComplete                               0x20000bb9   Data           1  flexcan_interrupt_transfer.o(.bss.txComplete)
    txIdentifier                             0x20000bbc   Data           4  flexcan_interrupt_transfer.o(.bss.txIdentifier)
    txXfer                                   0x20000bc0   Data          12  flexcan_interrupt_transfer.o(.bss.txXfer)
    wakenUp                                  0x200033e8   Data           1  flexcan_interrupt_transfer.o(.bss.wakenUp)
    xQueueRegistry                           0x20003470   Data          64  queue.o(.bss.xQueueRegistry)
    Image$$ARM_LIB_HEAP$$ZI$$Base            0x200034f4   Number         0  anon$$obj.o ABSOLUTE
    Image$$ARM_LIB_HEAP$$ZI$$Limit           0x200038f4   Number         0  anon$$obj.o ABSOLUTE
    Image$$ARM_LIB_STACK$$ZI$$Limit          0x20040000   Number         0  anon$$obj.o ABSOLUTE
    Image$$RW_m_ncache$$Base                 0x202c0000   Number         0  anon$$obj.o ABSOLUTE
    Image$$RW_m_ncache_unused$$Base          0x202c0000   Number         0  anon$$obj.o ABSOLUTE
    Image$$RW_m_ncache_unused$$ZI$$Limit     0x20340000   Number         0  anon$$obj.o ABSOLUTE
    qspiflash_config                         0x30000400   Data         512  evkmimxrt1170_flexspi_nor_config.o(.boot_hdr.conf)
    image_vector_table                       0x30001000   Data          32  fsl_flexspi_nor_boot.o(.boot_hdr.ivt)
    g_boot_data                              0x30001020   Data          16  fsl_flexspi_nor_boot.o(.boot_hdr.boot_data)
    __Vectors                                0x30002000   Number      1024  startup_mimxrt1176_cm7.o(.isr_vector)
    __main                                   0x30002401   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x30002401   Thumb Code     0  entry4.o(.ARM.Collect$$$$00000003)
    _main_scatterload                        0x30002405   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x30002409   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x30002409   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x30002409   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x30002409   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x30002411   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x30002411   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x30002415   Thumb Code    40  startup_mimxrt1176_cm7.o(.text)
    ACMP1_IRQHandler                         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ACMP2_IRQHandler                         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ACMP3_IRQHandler                         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ACMP4_IRQHandler                         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ADC1_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ADC2_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ADC_ETC_ERROR_IRQ_IRQHandler             0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ADC_ETC_IRQ0_IRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ADC_ETC_IRQ1_IRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ADC_ETC_IRQ2_IRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ADC_ETC_IRQ3_IRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ASRC_DriverIRQHandler                    0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    BusFault_Handler                         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAAM_IRQ0_IRQHandler                     0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAAM_IRQ1_IRQHandler                     0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAAM_IRQ2_IRQHandler                     0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAAM_IRQ3_IRQHandler                     0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAAM_RECORVE_ERRPR_IRQHandler            0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAAM_RTIC_IRQHandler                     0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAN1_ERROR_DriverIRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAN2_ERROR_DriverIRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAN3_ERROR_DriverIRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CDOG_DriverIRQHandler                    0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CM7_GPIO2_3_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CORE_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CSI_IRQHandler                           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CTI_TRIGGER_OUT0_IRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CTI_TRIGGER_OUT1_IRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DAC_IRQHandler                           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DCIC1_IRQHandler                         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DCIC2_IRQHandler                         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA0_DMA16_DriverIRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA10_DMA26_DriverIRQHandler             0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA11_DMA27_DriverIRQHandler             0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA12_DMA28_DriverIRQHandler             0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA13_DMA29_DriverIRQHandler             0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA14_DMA30_DriverIRQHandler             0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA15_DMA31_DriverIRQHandler             0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA1_DMA17_DriverIRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA2_DMA18_DriverIRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA3_DMA19_DriverIRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA4_DMA20_DriverIRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA5_DMA21_DriverIRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA6_DMA22_DriverIRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA7_DMA23_DriverIRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA8_DMA24_DriverIRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA9_DMA25_DriverIRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA_ERROR_DriverIRQHandler               0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DebugMon_Handler                         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DefaultISR                               0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    EMVSIM1_IRQHandler                       0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    EMVSIM2_IRQHandler                       0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENC1_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENC2_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENC3_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENC4_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_1588_Timer_DriverIRQHandler         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_1G_1588_Timer_DriverIRQHandler      0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_1G_DriverIRQHandler                 0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_1G_MAC0_Tx_Rx_1_DriverIRQHandler    0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_1G_MAC0_Tx_Rx_2_DriverIRQHandler    0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_DriverIRQHandler                    0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_QOS_DriverIRQHandler                0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_QOS_PMT_DriverIRQHandler            0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    EWM_IRQHandler                           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    FLEXIO1_DriverIRQHandler                 0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    FLEXIO2_DriverIRQHandler                 0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    FLEXRAM_ECC_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    FLEXRAM_IRQHandler                       0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    FLEXSPI1_DriverIRQHandler                0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    FLEXSPI2_DriverIRQHandler                0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPC_IRQHandler                           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPIO13_Combined_0_31_IRQHandler          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPIO1_Combined_0_15_IRQHandler           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPIO1_Combined_16_31_IRQHandler          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPIO2_Combined_0_15_IRQHandler           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPIO2_Combined_16_31_IRQHandler          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPIO3_Combined_0_15_IRQHandler           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPIO3_Combined_16_31_IRQHandler          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPIO4_Combined_0_15_IRQHandler           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPIO4_Combined_16_31_IRQHandler          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPIO5_Combined_0_15_IRQHandler           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPIO5_Combined_16_31_IRQHandler          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPIO6_Combined_0_15_IRQHandler           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPIO6_Combined_16_31_IRQHandler          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPR_IRQ_IRQHandler                       0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPT1_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPT3_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPT4_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPT5_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPT6_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    GPU2D_IRQHandler                         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    KEY_MANAGER_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    KPP_IRQHandler                           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LCDIFv2_IRQHandler                       0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPI2C1_DriverIRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPI2C2_DriverIRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPI2C3_DriverIRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPI2C4_DriverIRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPI2C5_DriverIRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPI2C6_DriverIRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPSPI1_DriverIRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPSPI2_DriverIRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPSPI3_DriverIRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPSPI4_DriverIRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPSPI5_DriverIRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPSPI6_DriverIRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPSR_LP0_BROWNOUT_IRQHandler             0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPSR_LP8_BROWNOUT_IRQHandler             0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    MECC1_FATAL_INT_IRQHandler               0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    MECC1_INT_IRQHandler                     0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    MECC2_FATAL_INT_IRQHandler               0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    MECC2_INT_IRQHandler                     0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    MIPI_CSI_DriverIRQHandler                0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    MIPI_DSI_DriverIRQHandler                0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    MUA_IRQHandler                           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    MemManage_Handler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    OCOTP_READ_DONE_ERROR_IRQHandler         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    OCOTP_READ_FUSE_ERROR_IRQHandler         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PDM_ERROR_DriverIRQHandler               0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PDM_EVENT_DriverIRQHandler               0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PDM_HWVAD_ERROR_DriverIRQHandler         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PDM_HWVAD_EVENT_DriverIRQHandler         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PIT1_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PIT2_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM1_0_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM1_1_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM1_2_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM1_3_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM1_FAULT_IRQHandler                    0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM2_0_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM2_1_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM2_2_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM2_3_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM2_FAULT_IRQHandler                    0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM3_0_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM3_1_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM3_2_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM3_3_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM3_FAULT_IRQHandler                    0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM4_0_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM4_1_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM4_2_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM4_3_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PWM4_FAULT_IRQHandler                    0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PXP_IRQHandler                           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    RDC_IRQHandler                           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    RTWDOG3_IRQHandler                       0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved110_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved166_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved167_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved168_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved169_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved170_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved177_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved178_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved179_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved180_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved185_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved186_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved208_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved209_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved210_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved211_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved212_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved213_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved214_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved215_IRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    Reserved68_IRQHandler                    0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SAI1_DriverIRQHandler                    0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SAI2_DriverIRQHandler                    0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SAI3_RX_DriverIRQHandler                 0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SAI3_TX_DriverIRQHandler                 0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SAI4_RX_DriverIRQHandler                 0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SAI4_TX_DriverIRQHandler                 0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SEMA4_CP0_IRQHandler                     0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SEMA4_CP1_IRQHandler                     0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SEMC_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SNVS_HP_NON_TZ_IRQHandler                0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SNVS_HP_TZ_IRQHandler                    0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SNVS_PULSE_EVENT_IRQHandler              0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SPDIF_DriverIRQHandler                   0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    TMPSNS_INT_IRQHandler                    0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    TMPSNS_LOW_HIGH_IRQHandler               0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    TMPSNS_PANIC_IRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    TMR1_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    TMR2_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    TMR3_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    TMR4_IRQHandler                          0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    USBPHY1_IRQHandler                       0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    USBPHY2_IRQHandler                       0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    USB_OTG1_IRQHandler                      0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    USB_OTG2_IRQHandler                      0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    USDHC1_DriverIRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    USDHC2_DriverIRQHandler                  0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    UsageFault_Handler                       0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    WDOG1_IRQHandler                         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    WDOG2_IRQHandler                         0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    XBAR1_IRQ_0_1_IRQHandler                 0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    XBAR1_IRQ_2_3_IRQHandler                 0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    XECC_FLEXSPI1_FATAL_INT_DriverIRQHandler 0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    XECC_FLEXSPI1_INT_DriverIRQHandler       0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    XECC_FLEXSPI2_FATAL_INT_DriverIRQHandler 0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    XECC_FLEXSPI2_INT_DriverIRQHandler       0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    XECC_SEMC_FATAL_INT_IRQHandler           0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    XECC_SEMC_INT_IRQHandler                 0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    eLCDIF_IRQHandler                        0x3000243d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    NMI_Handler                              0x30002441   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    HardFault_Handler                        0x30002445   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA0_DMA16_IRQHandler                    0x30002455   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA1_DMA17_IRQHandler                    0x30002459   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA2_DMA18_IRQHandler                    0x3000245d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA3_DMA19_IRQHandler                    0x30002461   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA4_DMA20_IRQHandler                    0x30002465   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA5_DMA21_IRQHandler                    0x30002469   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA6_DMA22_IRQHandler                    0x3000246d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA7_DMA23_IRQHandler                    0x30002471   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA8_DMA24_IRQHandler                    0x30002475   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA9_DMA25_IRQHandler                    0x30002479   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA10_DMA26_IRQHandler                   0x3000247d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA11_DMA27_IRQHandler                   0x30002481   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA12_DMA28_IRQHandler                   0x30002485   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA13_DMA29_IRQHandler                   0x30002489   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA14_DMA30_IRQHandler                   0x3000248d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA15_DMA31_IRQHandler                   0x30002491   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    DMA_ERROR_IRQHandler                     0x30002495   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPUART1_IRQHandler                       0x30002499   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPUART2_IRQHandler                       0x3000249d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPUART3_IRQHandler                       0x300024a1   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPUART4_IRQHandler                       0x300024a5   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPUART5_IRQHandler                       0x300024a9   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPUART6_IRQHandler                       0x300024ad   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPUART7_IRQHandler                       0x300024b1   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPUART8_IRQHandler                       0x300024b5   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPUART9_IRQHandler                       0x300024b9   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPUART10_IRQHandler                      0x300024bd   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPUART11_IRQHandler                      0x300024c1   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPUART12_IRQHandler                      0x300024c5   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPI2C1_IRQHandler                        0x300024c9   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPI2C2_IRQHandler                        0x300024cd   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPI2C3_IRQHandler                        0x300024d1   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPI2C4_IRQHandler                        0x300024d5   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPI2C5_IRQHandler                        0x300024d9   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPI2C6_IRQHandler                        0x300024dd   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPSPI1_IRQHandler                        0x300024e1   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPSPI2_IRQHandler                        0x300024e5   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPSPI3_IRQHandler                        0x300024e9   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPSPI4_IRQHandler                        0x300024ed   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPSPI5_IRQHandler                        0x300024f1   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    LPSPI6_IRQHandler                        0x300024f5   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAN1_IRQHandler                          0x300024f9   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAN1_ERROR_IRQHandler                    0x300024fd   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAN2_IRQHandler                          0x30002501   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAN2_ERROR_IRQHandler                    0x30002505   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAN3_IRQHandler                          0x30002509   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CAN3_ERROR_IRQHandler                    0x3000250d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    MIPI_CSI_IRQHandler                      0x30002511   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    MIPI_DSI_IRQHandler                      0x30002515   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    CDOG_IRQHandler                          0x30002519   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SAI1_IRQHandler                          0x3000251d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SAI2_IRQHandler                          0x30002521   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SAI3_RX_IRQHandler                       0x30002525   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SAI3_TX_IRQHandler                       0x30002529   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SAI4_RX_IRQHandler                       0x3000252d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SAI4_TX_IRQHandler                       0x30002531   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    SPDIF_IRQHandler                         0x30002535   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ASRC_IRQHandler                          0x30002539   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    FLEXIO1_IRQHandler                       0x3000253d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    FLEXIO2_IRQHandler                       0x30002541   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    FLEXSPI1_IRQHandler                      0x30002545   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    FLEXSPI2_IRQHandler                      0x30002549   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    USDHC1_IRQHandler                        0x3000254d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    USDHC2_IRQHandler                        0x30002551   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_IRQHandler                          0x30002555   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_1588_Timer_IRQHandler               0x30002559   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_1G_MAC0_Tx_Rx_1_IRQHandler          0x3000255d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_1G_MAC0_Tx_Rx_2_IRQHandler          0x30002561   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_1G_IRQHandler                       0x30002565   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_1G_1588_Timer_IRQHandler            0x30002569   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PDM_HWVAD_EVENT_IRQHandler               0x3000256d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PDM_HWVAD_ERROR_IRQHandler               0x30002571   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PDM_EVENT_IRQHandler                     0x30002575   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    PDM_ERROR_IRQHandler                     0x30002579   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    XECC_FLEXSPI1_INT_IRQHandler             0x3000257d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    XECC_FLEXSPI1_FATAL_INT_IRQHandler       0x30002581   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    XECC_FLEXSPI2_INT_IRQHandler             0x30002585   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    XECC_FLEXSPI2_FATAL_INT_IRQHandler       0x30002589   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_QOS_IRQHandler                      0x3000258d   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    ENET_QOS_PMT_IRQHandler                  0x30002591   Thumb Code     4  startup_mimxrt1176_cm7.o(.text)
    __aeabi_uldivmod                         0x300026e9   Thumb Code    98  uldiv.o(.text)
    ___aeabi_memcpy4$ret                     0x3000274b   Thumb Code     0  memcpy.o(.text)
    ___aeabi_memcpy8$ret                     0x3000274b   Thumb Code     0  memcpy.o(.text)
    __aeabi_memcpy                           0x3000274b   Thumb Code    40  memcpy.o(.text)
    memcpy                                   0x3000274b   Thumb Code     0  memcpy.o(.text)
    memset                                   0x30002773   Thumb Code    18  memset.o(.text)
    strlen                                   0x30002785   Thumb Code    14  strlen.o(.text)
    memcmp                                   0x30002793   Thumb Code    26  memcmp.o(.text)
    __aeabi_llsl                             0x300027ad   Thumb Code    30  llshl.o(.text)
    _ll_shift_l                              0x300027ad   Thumb Code     0  llshl.o(.text)
    __aeabi_llsr                             0x300027cb   Thumb Code    32  llushr.o(.text)
    _ll_ushift_r                             0x300027cb   Thumb Code     0  llushr.o(.text)
    __scatterload                            0x300027ed   Thumb Code    38  init.o(.text)
    __scatterload_rt2                        0x300027ed   Thumb Code     0  init.o(.text)
    __decompress                             0x3000281d   Thumb Code     0  __dczerorl2.o(.text)
    __decompress1                            0x3000281d   Thumb Code    86  __dczerorl2.o(.text)
    ANATOP_AI_Access                         0x30002879   Thumb Code  1568  fsl_anatop_ai.o(.text.ANATOP_AI_Access)
    ANATOP_AI_Read                           0x30002e99   Thumb Code    36  fsl_anatop_ai.o(.text.ANATOP_AI_Read)
    ANATOP_AI_Write                          0x30002ec1   Thumb Code    34  fsl_anatop_ai.o(.text.ANATOP_AI_Write)
    ANATOP_AI_WriteWithMaskShift             0x30002ee9   Thumb Code    70  fsl_anatop_ai.o(.text.ANATOP_AI_WriteWithMaskShift)
    BOARD_BootClockRUN                       0x30003c41   Thumb Code  2258  clock_config.o(.text.BOARD_BootClockRUN)
    BOARD_ConfigMPU                          0x30004519   Thumb Code   940  board.o(.text.BOARD_ConfigMPU)
    BOARD_DebugConsoleSrcFreq                0x300048c9   Thumb Code    10  board.o(.text.BOARD_DebugConsoleSrcFreq)
    BOARD_InitDebugConsole                   0x300048d9   Thumb Code    28  board.o(.text.BOARD_InitDebugConsole)
    BOARD_InitPins                           0x300048f9   Thumb Code   438  pin_mux.o(.text.BOARD_InitPins)
    CAN1_DriverIRQHandler                    0x30004cf1   Thumb Code    78  fsl_flexcan.o(.text.CAN1_DriverIRQHandler)
    CAN2_DriverIRQHandler                    0x30004d41   Thumb Code    78  fsl_flexcan.o(.text.CAN2_DriverIRQHandler)
    CAN3_DriverIRQHandler                    0x30004d91   Thumb Code    78  fsl_flexcan.o(.text.CAN3_DriverIRQHandler)
    CLOCK_DeinitAudioPll                     0x30004fc1   Thumb Code    56  fsl_clock.o(.text.CLOCK_DeinitAudioPll)
    CLOCK_DeinitSysPll1                      0x30004ff9   Thumb Code    68  fsl_clock.o(.text.CLOCK_DeinitSysPll1)
    CLOCK_GetFreq                            0x300051b1   Thumb Code   398  fsl_clock.o(.text.CLOCK_GetFreq)
    CLOCK_GetPfdFreq                         0x30005351   Thumb Code   328  fsl_clock.o(.text.CLOCK_GetPfdFreq)
    CLOCK_GetPllFreq                         0x30005499   Thumb Code   230  fsl_clock.o(.text.CLOCK_GetPllFreq)
    CLOCK_InitArmPll                         0x30005821   Thumb Code   432  fsl_clock.o(.text.CLOCK_InitArmPll)
    CLOCK_InitPfd                            0x300059d1   Thumb Code   410  fsl_clock.o(.text.CLOCK_InitPfd)
    CLOCK_InitSysPll2                        0x30005b71   Thumb Code   498  fsl_clock.o(.text.CLOCK_InitSysPll2)
    CLOCK_InitSysPll3                        0x30005d69   Thumb Code   274  fsl_clock.o(.text.CLOCK_InitSysPll3)
    CLOCK_InitVideoPll                       0x30005e81   Thumb Code   272  fsl_clock.o(.text.CLOCK_InitVideoPll)
    CLOCK_OSC_EnableOscRc400M                0x30006001   Thumb Code    34  fsl_clock.o(.text.CLOCK_OSC_EnableOscRc400M)
    CLOCK_OSC_Set1MHzOutputBehavior          0x30006061   Thumb Code    80  fsl_clock.o(.text.CLOCK_OSC_Set1MHzOutputBehavior)
    CLOCK_SetPllBypass                       0x300060b1   Thumb Code   294  fsl_clock.o(.text.CLOCK_SetPllBypass)
    ConsumerHeartbeatAlarm                   0x300062c9   Thumb Code    72  lifegrd.o(.text.ConsumerHeartbeatAlarm)
    CopyBits                                 0x30006311   Thumb Code   374  pdo.o(.text.CopyBits)
    DCDC_BootIntoDCM                         0x30006489   Thumb Code    78  fsl_dcdc.o(.text.DCDC_BootIntoDCM)
    DbgConsole_Init                          0x300065d9   Thumb Code   142  fsl_debug_console.o(.text.DbgConsole_Init)
    DbgConsole_Printf                        0x30006669   Thumb Code    44  fsl_debug_console.o(.text.DbgConsole_Printf)
    DbgConsole_Putchar                       0x30006aa9   Thumb Code    58  fsl_debug_console.o(.text.DbgConsole_Putchar)
    DbgConsole_Vprintf                       0x30006ae9   Thumb Code    64  fsl_debug_console.o(.text.DbgConsole_Vprintf)
    DelAlarm                                 0x30006b29   Thumb Code    86  timer.o(.text.DelAlarm)
    FLEXCAN_CalculateImprovedTimingValues    0x30006bf9   Thumb Code   286  fsl_flexcan.o(.text.FLEXCAN_CalculateImprovedTimingValues)
    FLEXCAN_EnterFreezeMode                  0x30006f09   Thumb Code    44  fsl_flexcan.o(.text.FLEXCAN_EnterFreezeMode)
    FLEXCAN_ExitFreezeMode                   0x30006f39   Thumb Code    56  fsl_flexcan.o(.text.FLEXCAN_ExitFreezeMode)
    FLEXCAN_GetDefaultConfig                 0x30006f71   Thumb Code   174  fsl_flexcan.o(.text.FLEXCAN_GetDefaultConfig)
    FLEXCAN_GetInstance                      0x300070e9   Thumb Code    92  fsl_flexcan.o(.text.FLEXCAN_GetInstance)
    FLEXCAN_Init                             0x300072b9   Thumb Code   940  fsl_flexcan.o(.text.FLEXCAN_Init)
    FLEXCAN_ReadFDRxMb                       0x300076c1   Thumb Code   458  fsl_flexcan.o(.text.FLEXCAN_ReadFDRxMb)
    FLEXCAN_ReadRxFifo                       0x30007891   Thumb Code   200  fsl_flexcan.o(.text.FLEXCAN_ReadRxFifo)
    FLEXCAN_ReadRxMb                         0x30007959   Thumb Code   338  fsl_flexcan.o(.text.FLEXCAN_ReadRxMb)
    FLEXCAN_SetFDTxMbConfig                  0x30007bb9   Thumb Code   290  fsl_flexcan.o(.text.FLEXCAN_SetFDTxMbConfig)
    FLEXCAN_SetRxMbConfig                    0x30007ce1   Thumb Code   324  fsl_flexcan.o(.text.FLEXCAN_SetRxMbConfig)
    FLEXCAN_SetTimingConfig                  0x30007e29   Thumb Code   178  fsl_flexcan.o(.text.FLEXCAN_SetTimingConfig)
    FLEXCAN_SetTxMbConfig                    0x30007ee1   Thumb Code   194  fsl_flexcan.o(.text.FLEXCAN_SetTxMbConfig)
    FLEXCAN_TransferAbortReceive             0x30008341   Thumb Code   220  fsl_flexcan.o(.text.FLEXCAN_TransferAbortReceive)
    FLEXCAN_TransferAbortReceiveFifo         0x30008421   Thumb Code    98  fsl_flexcan.o(.text.FLEXCAN_TransferAbortReceiveFifo)
    FLEXCAN_TransferAbortSend                0x30008489   Thumb Code   258  fsl_flexcan.o(.text.FLEXCAN_TransferAbortSend)
    FLEXCAN_TransferCreateHandle             0x30008591   Thumb Code   282  fsl_flexcan.o(.text.FLEXCAN_TransferCreateHandle)
    FLEXCAN_TransferFDAbortReceive           0x300086b1   Thumb Code   222  fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortReceive)
    FLEXCAN_TransferFDAbortSend              0x30008791   Thumb Code   270  fsl_flexcan.o(.text.FLEXCAN_TransferFDAbortSend)
    FLEXCAN_TransferHandleIRQ                0x300088a1   Thumb Code   218  fsl_flexcan.o(.text.FLEXCAN_TransferHandleIRQ)
    FLEXCAN_TransferReceiveNonBlocking       0x30008981   Thumb Code   284  fsl_flexcan.o(.text.FLEXCAN_TransferReceiveNonBlocking)
    FLEXCAN_TransferSendNonBlocking          0x30008aa1   Thumb Code   344  fsl_flexcan.o(.text.FLEXCAN_TransferSendNonBlocking)
    FLEXCAN_WriteTxMb                        0x30008bf9   Thumb Code   388  fsl_flexcan.o(.text.FLEXCAN_WriteTxMb)
    GPT2_IRQHandler                          0x30008d81   Thumb Code    24  flexcan_interrupt_transfer.o(.text.GPT2_IRQHandler)
    GPT_GetDefaultConfig                     0x30008dc9   Thumb Code    88  fsl_gpt.o(.text.GPT_GetDefaultConfig)
    GPT_Init                                 0x30008e81   Thumb Code   158  fsl_gpt.o(.text.GPT_Init)
    GetSDOClientFromNodeId                   0x30009071   Thumb Code   198  sdo.o(.text.GetSDOClientFromNodeId)
    GuardTimeAlarm                           0x30009139   Thumb Code   200  lifegrd.o(.text.GuardTimeAlarm)
    HAL_UartInit                             0x30009229   Thumb Code   196  fsl_adapter_lpuart.o(.text.HAL_UartInit)
    HAL_UartReceiveBlocking                  0x300093e9   Thumb Code   146  fsl_adapter_lpuart.o(.text.HAL_UartReceiveBlocking)
    HAL_UartSendBlocking                     0x30009481   Thumb Code   140  fsl_adapter_lpuart.o(.text.HAL_UartSendBlocking)
    LPUART10_DriverIRQHandler                0x30009669   Thumb Code    36  fsl_lpuart.o(.text.LPUART10_DriverIRQHandler)
    LPUART11_DriverIRQHandler                0x30009691   Thumb Code    38  fsl_lpuart.o(.text.LPUART11_DriverIRQHandler)
    LPUART12_DriverIRQHandler                0x300096b9   Thumb Code    38  fsl_lpuart.o(.text.LPUART12_DriverIRQHandler)
    LPUART1_DriverIRQHandler                 0x300096e1   Thumb Code    38  fsl_lpuart.o(.text.LPUART1_DriverIRQHandler)
    LPUART2_DriverIRQHandler                 0x30009709   Thumb Code    36  fsl_lpuart.o(.text.LPUART2_DriverIRQHandler)
    LPUART3_DriverIRQHandler                 0x30009731   Thumb Code    38  fsl_lpuart.o(.text.LPUART3_DriverIRQHandler)
    LPUART4_DriverIRQHandler                 0x30009759   Thumb Code    38  fsl_lpuart.o(.text.LPUART4_DriverIRQHandler)
    LPUART5_DriverIRQHandler                 0x30009781   Thumb Code    38  fsl_lpuart.o(.text.LPUART5_DriverIRQHandler)
    LPUART6_DriverIRQHandler                 0x300097a9   Thumb Code    36  fsl_lpuart.o(.text.LPUART6_DriverIRQHandler)
    LPUART7_DriverIRQHandler                 0x300097d1   Thumb Code    38  fsl_lpuart.o(.text.LPUART7_DriverIRQHandler)
    LPUART8_DriverIRQHandler                 0x300097f9   Thumb Code    38  fsl_lpuart.o(.text.LPUART8_DriverIRQHandler)
    LPUART9_DriverIRQHandler                 0x30009821   Thumb Code    38  fsl_lpuart.o(.text.LPUART9_DriverIRQHandler)
    LPUART_ClearStatusFlags                  0x30009849   Thumb Code   128  fsl_lpuart.o(.text.LPUART_ClearStatusFlags)
    LPUART_GetDefaultConfig                  0x300098c9   Thumb Code   120  fsl_lpuart.o(.text.LPUART_GetDefaultConfig)
    LPUART_GetInstance                       0x30009941   Thumb Code    90  fsl_lpuart.o(.text.LPUART_GetInstance)
    LPUART_GetStatusFlags                    0x300099a1   Thumb Code    46  fsl_lpuart.o(.text.LPUART_GetStatusFlags)
    LPUART_Init                              0x300099d1   Thumb Code   878  fsl_lpuart.o(.text.LPUART_Init)
    LPUART_ReadBlocking                      0x30009d41   Thumb Code   392  fsl_lpuart.o(.text.LPUART_ReadBlocking)
    LPUART_WriteBlocking                     0x30009ee9   Thumb Code   116  fsl_lpuart.o(.text.LPUART_WriteBlocking)
    Master_scanIndexOD                       0x30009f61   Thumb Code   148  master.o(.text.Master_scanIndexOD)
    Master_valueRangeTest                    0x30009ff9   Thumb Code    50  master.o(.text.Master_valueRangeTest)
    OnCOB_ID_SyncUpdate                      0x3000a031   Thumb Code    24  sync.o(.text.OnCOB_ID_SyncUpdate)
    OnHeartbeatProducerUpdate                0x3000a049   Thumb Code    94  lifegrd.o(.text.OnHeartbeatProducerUpdate)
    OnNodeGuardUpdate                        0x3000a0a9   Thumb Code    30  lifegrd.o(.text.OnNodeGuardUpdate)
    OnNumberOfErrorsUpdate                   0x3000a0c9   Thumb Code    86  emcy.o(.text.OnNumberOfErrorsUpdate)
    PDOEventTimerAlarm                       0x3000a121   Thumb Code    60  pdo.o(.text.PDOEventTimerAlarm)
    PDOInhibitTimerAlarm                     0x3000a161   Thumb Code    64  pdo.o(.text.PDOInhibitTimerAlarm)
    PDOInit                                  0x3000a1a1   Thumb Code   144  pdo.o(.text.PDOInit)
    PDOStop                                  0x3000a231   Thumb Code   206  pdo.o(.text.PDOStop)
    PMU_EnableBodyBias                       0x3000a301   Thumb Code   362  fsl_pmu.o(.text.PMU_EnableBodyBias)
    PMU_StaticEnableLpsrAnaLdoBypassMode     0x3000a471   Thumb Code   190  fsl_pmu.o(.text.PMU_StaticEnableLpsrAnaLdoBypassMode)
    PMU_StaticEnableLpsrDigLdoBypassMode     0x3000a531   Thumb Code   168  fsl_pmu.o(.text.PMU_StaticEnableLpsrDigLdoBypassMode)
    PMU_StaticEnablePllLdo                   0x3000a5d9   Thumb Code    74  fsl_pmu.o(.text.PMU_StaticEnablePllLdo)
    PendSV_Handler                           0x3000a631   Thumb Code   100  port.o(.text.PendSV_Handler)
    ProducerHeartbeatAlarm                   0x3000a699   Thumb Code   100  lifegrd.o(.text.ProducerHeartbeatAlarm)
    RegisterSetODentryCallBack               0x3000a701   Thumb Code    76  objacces.o(.text.RegisterSetODentryCallBack)
    SDK_DelayAtLeastUs                       0x3000a751   Thumb Code   152  fsl_common_arm.o(.text.SDK_DelayAtLeastUs)
    SDOTimeoutAlarm                          0x3000a7e9   Thumb Code   262  sdo.o(.text.SDOTimeoutAlarm)
    SDOlineToObjdict                         0x3000a8f1   Thumb Code   132  sdo.o(.text.SDOlineToObjdict)
    SDOtoLine                                0x3000a979   Thumb Code   162  sdo.o(.text.SDOtoLine)
    SVC_Handler                              0x3000aa21   Thumb Code    36  port.o(.text.SVC_Handler)
    SetAlarm                                 0x3000aa49   Thumb Code   334  timer.o(.text.SetAlarm)
    SyncAlarm                                0x3000ab99   Thumb Code    18  sync.o(.text.SyncAlarm)
    SysTick_Handler                          0x3000abb1   Thumb Code    64  port.o(.text.SysTick_Handler)
    SystemInit                               0x3000abf1   Thumb Code   442  system_mimxrt1176_cm7.o(.text.SystemInit)
    SystemInitHook                           0x3000adb1   Thumb Code     2  system_mimxrt1176_cm7.o(.text.SystemInitHook)
    TPDO_Communication_Parameter_Callback    0x3000adb9   Thumb Code   208  pdo.o(.text.TPDO_Communication_Parameter_Callback)
    TimeDispatch                             0x3000ae89   Thumb Code   338  timer.o(.text.TimeDispatch)
    _RxPDO_EventTimers_Handler               0x3000afe1   Thumb Code    10  pdo.o(.text._RxPDO_EventTimers_Handler)
    __aeabi_assert                           0x3000b051   Thumb Code    32  fsl_assert.o(.text.__aeabi_assert)
    _getODentry                              0x3000b071   Thumb Code   378  objacces.o(.text._getODentry)
    _heartbeatError                          0x3000b1f1   Thumb Code    12  lifegrd.o(.text._heartbeatError)
    _initialisation                          0x3000b201   Thumb Code     8  states.o(.text._initialisation)
    _nodeguardError                          0x3000b209   Thumb Code    12  lifegrd.o(.text._nodeguardError)
    _operational                             0x3000b219   Thumb Code     8  states.o(.text._operational)
    _post_SlaveBootup                        0x3000b221   Thumb Code    12  lifegrd.o(.text._post_SlaveBootup)
    _post_SlaveStateChange                   0x3000b231   Thumb Code    16  lifegrd.o(.text._post_SlaveStateChange)
    _post_TPDO                               0x3000b241   Thumb Code     8  sync.o(.text._post_TPDO)
    _post_emcy                               0x3000b249   Thumb Code    24  emcy.o(.text._post_emcy)
    _post_sync                               0x3000b261   Thumb Code     8  sync.o(.text._post_sync)
    _preOperational                          0x3000b269   Thumb Code    32  states.o(.text._preOperational)
    _readNetworkDict                         0x3000b289   Thumb Code   500  sdo.o(.text._readNetworkDict)
    _sendPDOevent                            0x3000b481   Thumb Code   604  pdo.o(.text._sendPDOevent)
    _setODentry                              0x3000b6e1   Thumb Code   514  objacces.o(.text._setODentry)
    _stopped                                 0x3000b8e9   Thumb Code     8  states.o(.text._stopped)
    _storeODSubIndex                         0x3000b8f1   Thumb Code    18  objacces.o(.text._storeODSubIndex)
    _writeNetworkDict                        0x3000b909   Thumb Code   680  sdo.o(.text._writeNetworkDict)
    accessDictionaryError                    0x3000bbb1   Thumb Code    24  objacces.o(.text.accessDictionaryError)
    buildPDO                                 0x3000bbc9   Thumb Code   330  pdo.o(.text.buildPDO)
    canDispatch                              0x3000bd19   Thumb Code   198  states.o(.text.canDispatch)
    canSend                                  0x3000bde1   Thumb Code   230  flexcan_interrupt_transfer.o(.text.canSend)
    emergencyInit                            0x3000bec9   Thumb Code    42  emcy.o(.text.emergencyInit)
    emergencyStop                            0x3000bef9   Thumb Code     8  emcy.o(.text.emergencyStop)
    failedSDO                                0x3000bf01   Thumb Code   250  sdo.o(.text.failedSDO)
    getElapsedTime                           0x3000c0b1   Thumb Code    10  flexcan_interrupt_transfer.o(.text.getElapsedTime)
    getNodeId                                0x3000c0c1   Thumb Code    14  states.o(.text.getNodeId)
    getReadResultNetworkDict                 0x3000c0d1   Thumb Code   388  sdo.o(.text.getReadResultNetworkDict)
    getSDOfreeLine                           0x3000c259   Thumb Code   114  sdo.o(.text.getSDOfreeLine)
    getSDOlineOnUse                          0x3000c2d1   Thumb Code   180  sdo.o(.text.getSDOlineOnUse)
    getSDOlineRestBytes                      0x3000c389   Thumb Code    66  sdo.o(.text.getSDOlineRestBytes)
    getWriteResultNetworkDict                0x3000c3d1   Thumb Code   186  sdo.o(.text.getWriteResultNetworkDict)
    heartbeatInit                            0x3000c491   Thumb Code   210  lifegrd.o(.text.heartbeatInit)
    heartbeatStop                            0x3000c569   Thumb Code    98  lifegrd.o(.text.heartbeatStop)
    initSDOline                              0x3000c5d1   Thumb Code   416  sdo.o(.text.initSDOline)
    lifeGuardInit                            0x3000c771   Thumb Code    22  lifegrd.o(.text.lifeGuardInit)
    lifeGuardStop                            0x3000c789   Thumb Code    22  lifegrd.o(.text.lifeGuardStop)
    lineToSDO                                0x3000c7a1   Thumb Code   194  sdo.o(.text.lineToSDO)
    main                                     0x3000c869   Thumb Code    84  flexcan_interrupt_transfer.o(.text.main)
    masterSendNMTnodeguard                   0x3000c8c1   Thumb Code    60  nmtmaster.o(.text.masterSendNMTnodeguard)
    masterSendNMTstateChange                 0x3000c901   Thumb Code    64  nmtmaster.o(.text.masterSendNMTstateChange)
    nodeguardInit                            0x3000c941   Thumb Code   214  lifegrd.o(.text.nodeguardInit)
    nodeguardStop                            0x3000ca19   Thumb Code    26  lifegrd.o(.text.nodeguardStop)
    objdictToSDOline                         0x3000ca39   Thumb Code   122  sdo.o(.text.objdictToSDOline)
    proceedEMCY                              0x3000cab9   Thumb Code    94  emcy.o(.text.proceedEMCY)
    proceedNMTstateChange                    0x3000cb19   Thumb Code   320  nmtslave.o(.text.proceedNMTstateChange)
    proceedNODE_GUARD                        0x3000cc59   Thumb Code   450  lifegrd.o(.text.proceedNODE_GUARD)
    proceedPDO                               0x3000ce21   Thumb Code  1102  pdo.o(.text.proceedPDO)
    proceedSDO                               0x3000d271   Thumb Code 11302  sdo.o(.text.proceedSDO)
    proceedSYNC                              0x3000fe99   Thumb Code    70  sync.o(.text.proceedSYNC)
    pvPortMalloc                             0x30010c39   Thumb Code   464  heap_4.o(.text.pvPortMalloc)
    pxPortInitialiseStack                    0x30010e09   Thumb Code    94  port.o(.text.pxPortInitialiseStack)
    readNetworkDict                          0x30010e69   Thumb Code    82  sdo.o(.text.readNetworkDict)
    resetSDO                                 0x30010ec1   Thumb Code    52  sdo.o(.text.resetSDO)
    resetSDOline                             0x30010ef9   Thumb Code   112  sdo.o(.text.resetSDOline)
    sendOnePDOevent                          0x30010f69   Thumb Code   486  pdo.o(.text.sendOnePDOevent)
    sendSDO                                  0x30011191   Thumb Code   292  sdo.o(.text.sendSDO)
    sendSDOabort                             0x300112b9   Thumb Code   120  sdo.o(.text.sendSDOabort)
    sendSYNC                                 0x30011331   Thumb Code    30  sync.o(.text.sendSYNC)
    sendSYNCMessage                          0x30011351   Thumb Code    44  sync.o(.text.sendSYNCMessage)
    setNodeId                                0x30011381   Thumb Code   756  states.o(.text.setNodeId)
    setSDOlineRestBytes                      0x30011679   Thumb Code    58  sdo.o(.text.setSDOlineRestBytes)
    setState                                 0x300116b9   Thumb Code   306  states.o(.text.setState)
    setTimer                                 0x300117f1   Thumb Code    28  flexcan_interrupt_transfer.o(.text.setTimer)
    slaveSendBootUp                          0x30011811   Thumb Code    60  nmtslave.o(.text.slaveSendBootUp)
    startSYNC                                0x30011851   Thumb Code   130  sync.o(.text.startSYNC)
    stopSYNC                                 0x300118d9   Thumb Code    56  sync.o(.text.stopSYNC)
    switchCommunicationState                 0x30011911   Thumb Code   444  states.o(.text.switchCommunicationState)
    uxListRemove                             0x30011ad1   Thumb Code    72  list.o(.text.uxListRemove)
    vListInitialise                          0x30011b19   Thumb Code    46  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x30011b49   Thumb Code    14  list.o(.text.vListInitialiseItem)
    vListInsert                              0x30011b59   Thumb Code   106  list.o(.text.vListInsert)
    vListInsertEnd                           0x30011bc9   Thumb Code    58  list.o(.text.vListInsertEnd)
    vPortEnterCritical                       0x30011c21   Thumb Code    94  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x30011c81   Thumb Code    78  port.o(.text.vPortExitCritical)
    vPortFree                                0x30011cd1   Thumb Code   194  heap_4.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x30011d99   Thumb Code    68  port.o(.text.vPortSetupTimerInterrupt)
    vQueueAddToRegistry                      0x30011de1   Thumb Code   186  queue.o(.text.vQueueAddToRegistry)
    vQueueWaitForMessageRestricted           0x30011ea1   Thumb Code   100  queue.o(.text.vQueueWaitForMessageRestricted)
    vTaskDelete                              0x30011f09   Thumb Code   344  tasks.o(.text.vTaskDelete)
    vTaskInternalSetTimeOutState             0x30012061   Thumb Code    36  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x30012089   Thumb Code    14  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x30012099   Thumb Code    70  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x300120e1   Thumb Code   128  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    vTaskStartScheduler                      0x30012161   Thumb Code   186  tasks.o(.text.vTaskStartScheduler)
    vTaskSuspendAll                          0x30012221   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x30012231   Thumb Code   194  tasks.o(.text.vTaskSwitchContext)
    writeNetworkDict                         0x300122f9   Thumb Code   106  sdo.o(.text.writeNetworkDict)
    xPortStartScheduler                      0x30012369   Thumb Code   254  port.o(.text.xPortStartScheduler)
    xQueueGenericCreate                      0x30012469   Thumb Code   158  queue.o(.text.xQueueGenericCreate)
    xQueueGenericReset                       0x30012509   Thumb Code   272  queue.o(.text.xQueueGenericReset)
    xQueueReceive                            0x30012619   Thumb Code   488  queue.o(.text.xQueueReceive)
    xTaskCheckForTimeOut                     0x30012801   Thumb Code   218  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x300128e1   Thumb Code   162  tasks.o(.text.xTaskCreate)
    xTaskGetSchedulerState                   0x30012989   Thumb Code    56  tasks.o(.text.xTaskGetSchedulerState)
    xTaskGetTickCount                        0x300129c1   Thumb Code    20  tasks.o(.text.xTaskGetTickCount)
    xTaskIncrementTick                       0x300129d9   Thumb Code   570  tasks.o(.text.xTaskIncrementTick)
    xTaskRemoveFromEventList                 0x30012c19   Thumb Code   400  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x30012da9   Thumb Code   550  tasks.o(.text.xTaskResumeAll)
    xTimerCreateTimerTask                    0x30012fd1   Thumb Code   110  timers.o(.text.xTimerCreateTimerTask)
    __scatterload_copy                       0x3001303f   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x3001304d   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x3001304f   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    Master_ObjdictSize                       0x3001305c   Data           2  master.o(.rodata.Master_ObjdictSize)
    Master_firstIndex                        0x3001305e   Data          12  master.o(.rodata.Master_firstIndex)
    Master_iam_a_slave                       0x3001306a   Data           1  master.o(.rodata.Master_iam_a_slave)
    Master_lastIndex                         0x3001306c   Data          12  master.o(.rodata.Master_lastIndex)
    Master_objdict                           0x30013078   Data          40  master.o(.rodata.Master_objdict)
    armPllConfig_BOARD_BootClockRUN          0x300130a0   Data           8  clock_config.o(.rodata.armPllConfig_BOARD_BootClockRUN)
    sysPll2Config_BOARD_BootClockRUN         0x30014a64   Data          12  clock_config.o(.rodata.sysPll2Config_BOARD_BootClockRUN)
    uxTopUsedPriority                        0x30014a70   Data           4  tasks.o(.rodata.uxTopUsedPriority)
    videoPllConfig_BOARD_BootClockRUN        0x30014a74   Data          20  clock_config.o(.rodata.videoPllConfig_BOARD_BootClockRUN)
    Region$$Table$$Base                      0x30014a88   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x30014aa8   Number         0  anon$$obj.o(Region$$Table)



==============================================================================

Memory Map of the image

  Image Entry point : 0x30002415

  Load Region LR_m_text (Base: 0x30000400, Size: 0x00014ca4, Max: 0x00fbfc00, ABSOLUTE, COMPRESSED[0x000147b0])

    Execution Region RW_m_ram_text (Exec base: 0x00000000, Load base: 0x30014bb0, Size: 0x00000000, Max: 0x00040000, ABSOLUTE)

    **** No section assigned to this execution region ****


    Execution Region RW_m_data (Exec base: 0x20000000, Load base: 0x30014aa8, Size: 0x000034f4, Max: 0x0003f800, ABSOLUTE, COMPRESSED[0x00000108])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   COMPRESSED   0x0000048c   Data   RW          126    .data.Master_Data   master.o
    0x2000048c   COMPRESSED   0x00000010   Data   RW           90    .data.Master_Index1000  master.o
    0x2000049c   COMPRESSED   0x00000010   Data   RW           92    .data.Master_Index1001  master.o
    0x200004ac   COMPRESSED   0x00000050   Data   RW          109    .data.Master_Index1018  master.o
    0x200004fc   COMPRESSED   0x00000040   Data   RW          114    .data.Master_Index1280  master.o
    0x2000053c   COMPRESSED   0x00000040   Data   RW          119    .data.Master_Index1281  master.o
    0x2000057c   COMPRESSED   0x00000012   Data   RW          121    .data.Master_PDO_status  master.o
    0x2000058e   COMPRESSED   0x00000001   Data   RW          104    .data.Master_highestSubIndex_obj1018  master.o
    0x2000058f   COMPRESSED   0x00000001   Data   RW          110    .data.Master_highestSubIndex_obj1280  master.o
    0x20000590   COMPRESSED   0x00000001   Data   RW          115    .data.Master_highestSubIndex_obj1281  master.o
    0x20000591   COMPRESSED   0x00000003   PAD
    0x20000594   COMPRESSED   0x00000004   Data   RW          100    .data.Master_obj1014  master.o
    0x20000598   COMPRESSED   0x00000004   Data   RW          111    .data.Master_obj1280_COB_ID_Client_to_Server_Transmit_SDO  master.o
    0x2000059c   COMPRESSED   0x00000004   Data   RW          112    .data.Master_obj1280_COB_ID_Server_to_Client_Receive_SDO  master.o
    0x200005a0   COMPRESSED   0x00000001   Data   RW          113    .data.Master_obj1280_Node_ID_of_the_SDO_Server  master.o
    0x200005a1   COMPRESSED   0x00000003   PAD
    0x200005a4   COMPRESSED   0x00000004   Data   RW          116    .data.Master_obj1281_COB_ID_Client_to_Server_Transmit_SDO  master.o
    0x200005a8   COMPRESSED   0x00000004   Data   RW          117    .data.Master_obj1281_COB_ID_Server_to_Client_Receive_SDO  master.o
    0x200005ac   COMPRESSED   0x00000001   Data   RW          118    .data.Master_obj1281_Node_ID_of_the_SDO_Server  master.o
    0x200005ad   COMPRESSED   0x00000003   PAD
    0x200005b0   COMPRESSED   0x00000004   Data   RW         1037    .data.SystemCoreClock  system_mimxrt1176_cm7.o
    0x200005b4   COMPRESSED   0x00000002   Data   RW         1428    .data.last_timer_raw  timer.o
    0x200005b6   COMPRESSED   0x00000002   PAD
    0x200005b8   COMPRESSED   0x00000004   Data   RW           55    .data.readSize      flexcan_interrupt_transfer.o
    0x200005bc   COMPRESSED   0x00000004   Data   RW          463    .data.s_flexcanIsr  fsl_flexcan.o
    0x200005c0   COMPRESSED   0x00000034   Data   RW          794    .data.s_lpuartIsr   fsl_lpuart.o
    0x200005f4   COMPRESSED   0x00000004   Data   RW         1427    .data.total_sleep_time  timer.o
    0x200005f8   COMPRESSED   0x00000004   Data   RW         1876    .data.uxCriticalNesting  port.o
    0x200005fc        -       0x00000004   Zero   RW           61    .bss.AppTaskCreate_Handle  flexcan_interrupt_transfer.o
    0x20000600        -       0x00000004   Zero   RW           74    .bss.App_Task_Handle  flexcan_interrupt_transfer.o
    0x20000604        -       0x00000001   Zero   RW           87    .bss.Master_bDeviceNodeId  master.o
    0x20000605   COMPRESSED   0x00000001   PAD
    0x20000606        -       0x00000002   Zero   RW          125    .bss.Master_heartBeatTimers  master.o
    0x20000608        -       0x00000001   Zero   RW           93    .bss.Master_highestSubIndex_obj1003  master.o
    0x20000609        -       0x00000001   Zero   RW          101    .bss.Master_highestSubIndex_obj1016  master.o
    0x2000060a   COMPRESSED   0x00000002   PAD
    0x2000060c        -       0x00000004   Zero   RW           89    .bss.Master_obj1000  master.o
    0x20000610        -       0x00000001   Zero   RW           91    .bss.Master_obj1001  master.o
    0x20000611   COMPRESSED   0x00000003   PAD
    0x20000614        -       0x00000004   Zero   RW           94    .bss.Master_obj1003  master.o
    0x20000618        -       0x00000004   Zero   RW           96    .bss.Master_obj1005  master.o
    0x2000061c        -       0x00000004   Zero   RW           97    .bss.Master_obj1006  master.o
    0x20000620        -       0x00000002   Zero   RW           98    .bss.Master_obj100C  master.o
    0x20000622        -       0x00000001   Zero   RW           99    .bss.Master_obj100D  master.o
    0x20000623   COMPRESSED   0x00000001   PAD
    0x20000624        -       0x00000004   Zero   RW          102    .bss.Master_obj1016  master.o
    0x20000628        -       0x00000002   Zero   RW          103    .bss.Master_obj1017  master.o
    0x2000062a   COMPRESSED   0x00000002   PAD
    0x2000062c        -       0x00000004   Zero   RW          106    .bss.Master_obj1018_Product_Code  master.o
    0x20000630        -       0x00000004   Zero   RW          107    .bss.Master_obj1018_Revision_Number  master.o
    0x20000634        -       0x00000004   Zero   RW          108    .bss.Master_obj1018_Serial_Number  master.o
    0x20000638        -       0x00000004   Zero   RW          105    .bss.Master_obj1018_Vendor_ID  master.o
    0x2000063c        -       0x00000004   Zero   RW           68    .bss.abortCode      flexcan_interrupt_transfer.o
    0x20000640        -       0x00000024   Zero   RW           70    .bss.flexcanConfig  flexcan_interrupt_transfer.o
    0x20000664        -       0x00000358   Zero   RW           59    .bss.flexcanHandle  flexcan_interrupt_transfer.o
    0x200009bc        -       0x00000010   Zero   RW           63    .bss.frame          flexcan_interrupt_transfer.o
    0x200009cc        -       0x00000010   Zero   RW           67    .bss.gptConfig      flexcan_interrupt_transfer.o
    0x200009dc        -       0x00000004   Zero   RW           66    .bss.gptFreq        flexcan_interrupt_transfer.o
    0x200009e0        -       0x00000008   Zero   RW           71    .bss.mbConfig       flexcan_interrupt_transfer.o
    0x200009e8        -       0x00000004   Zero   RW         1838    .bss.prvSampleTimeNow.xLastTime  timers.o
    0x200009ec        -       0x00000004   Zero   RW         1747    .bss.pxCurrentTCB   tasks.o
    0x200009f0        -       0x00000004   Zero   RW         1836    .bss.pxCurrentTimerList  timers.o
    0x200009f4        -       0x00000004   Zero   RW         1758    .bss.pxDelayedTaskList  tasks.o
    0x200009f8        -       0x00000004   Zero   RW         1902    .bss.pxEnd          heap_4.o
    0x200009fc        -       0x00000004   Zero   RW         1759    .bss.pxOverflowDelayedTaskList  tasks.o
    0x20000a00        -       0x00000004   Zero   RW         1837    .bss.pxOverflowTimerList  timers.o
    0x20000a04        -       0x00000064   Zero   RW         1749    .bss.pxReadyTasksLists  tasks.o
    0x20000a68        -       0x00000008   Zero   RW           53    .bss.readData01     flexcan_interrupt_transfer.o
    0x20000a70        -       0x00000008   Zero   RW           54    .bss.readData02     flexcan_interrupt_transfer.o
    0x20000a78        -       0x00000001   Zero   RW           50    .bss.rxComplete     flexcan_interrupt_transfer.o
    0x20000a79   COMPRESSED   0x00000003   PAD
    0x20000a7c        -       0x00000004   Zero   RW           65    .bss.rxIdentifier   flexcan_interrupt_transfer.o
    0x20000a80        -       0x0000000c   Zero   RW           69    .bss.rxMessage      flexcan_interrupt_transfer.o
    0x20000a8c        -       0x0000000c   Zero   RW           62    .bss.rxXfer         flexcan_interrupt_transfer.o
    0x20000a98        -       0x00000014   Zero   RW          296    .bss.s_debugConsole  fsl_debug_console.o
    0x20000aac        -       0x00000010   Zero   RW          462    .bss.s_flexcanHandle  fsl_flexcan.o
    0x20000abc        -       0x00000034   Zero   RW          798    .bss.s_lpuartHandle  fsl_lpuart.o
    0x20000af0        -       0x00000004   Zero   RW           52    .bss.sendData       flexcan_interrupt_transfer.o
    0x20000af4        -       0x00000001   Zero   RW           57    .bss.t              flexcan_interrupt_transfer.o
    0x20000af5   COMPRESSED   0x00000003   PAD
    0x20000af8        -       0x000000c0   Zero   RW         1426    .bss.timers         timer.o
    0x20000bb8        -       0x00000001   Zero   RW           56    .bss.tsdovalue      flexcan_interrupt_transfer.o
    0x20000bb9        -       0x00000001   Zero   RW           49    .bss.txComplete     flexcan_interrupt_transfer.o
    0x20000bba   COMPRESSED   0x00000002   PAD
    0x20000bbc        -       0x00000004   Zero   RW           64    .bss.txIdentifier   flexcan_interrupt_transfer.o
    0x20000bc0        -       0x0000000c   Zero   RW           58    .bss.txXfer         flexcan_interrupt_transfer.o
    0x20000bcc        -       0x00002800   Zero   RW         1908    .bss.ucHeap         heap_4.o
    0x200033cc        -       0x00000001   Zero   RW         1874    .bss.ucMaxSysCallPriority  port.o
    0x200033cd   COMPRESSED   0x00000003   PAD
    0x200033d0        -       0x00000004   Zero   RW         1875    .bss.ulMaxPRIGROUPValue  port.o
    0x200033d4        -       0x00000004   Zero   RW         1754    .bss.uxCurrentNumberOfTasks  tasks.o
    0x200033d8        -       0x00000004   Zero   RW         1753    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x200033dc        -       0x00000004   Zero   RW         1756    .bss.uxSchedulerSuspended  tasks.o
    0x200033e0        -       0x00000004   Zero   RW         1751    .bss.uxTaskNumber   tasks.o
    0x200033e4        -       0x00000004   Zero   RW         1750    .bss.uxTopReadyPriority  tasks.o
    0x200033e8        -       0x00000001   Zero   RW           51    .bss.wakenUp        flexcan_interrupt_transfer.o
    0x200033e9   COMPRESSED   0x00000003   PAD
    0x200033ec        -       0x00000014   Zero   RW         1839    .bss.xActiveTimerList1  timers.o
    0x20003400        -       0x00000014   Zero   RW         1840    .bss.xActiveTimerList2  timers.o
    0x20003414        -       0x00000014   Zero   RW         1768    .bss.xDelayedTaskList1  tasks.o
    0x20003428        -       0x00000014   Zero   RW         1769    .bss.xDelayedTaskList2  tasks.o
    0x2000343c        -       0x00000004   Zero   RW         1903    .bss.xFreeBytesRemaining  heap_4.o
    0x20003440        -       0x00000004   Zero   RW         1764    .bss.xIdleTaskHandle  tasks.o
    0x20003444        -       0x00000004   Zero   RW         1905    .bss.xMinimumEverFreeBytesRemaining  heap_4.o
    0x20003448        -       0x00000004   Zero   RW         1765    .bss.xNextTaskUnblockTime  tasks.o
    0x2000344c        -       0x00000004   Zero   RW         1767    .bss.xNumOfOverflows  tasks.o
    0x20003450        -       0x00000004   Zero   RW         1906    .bss.xNumberOfSuccessfulAllocations  heap_4.o
    0x20003454        -       0x00000004   Zero   RW         1907    .bss.xNumberOfSuccessfulFrees  heap_4.o
    0x20003458        -       0x00000004   Zero   RW         1766    .bss.xPendedTicks   tasks.o
    0x2000345c        -       0x00000014   Zero   RW         1762    .bss.xPendingReadyList  tasks.o
    0x20003470        -       0x00000040   Zero   RW         1560    .bss.xQueueRegistry  queue.o
    0x200034b0        -       0x00000004   Zero   RW         1755    .bss.xSchedulerRunning  tasks.o
    0x200034b4        -       0x00000008   Zero   RW         1904    .bss.xStart         heap_4.o
    0x200034bc        -       0x00000014   Zero   RW         1760    .bss.xSuspendedTaskList  tasks.o
    0x200034d0        -       0x00000014   Zero   RW         1752    .bss.xTasksWaitingTermination  tasks.o
    0x200034e4        -       0x00000004   Zero   RW         1757    .bss.xTickCount     tasks.o
    0x200034e8        -       0x00000004   Zero   RW         1833    .bss.xTimerQueue    timers.o
    0x200034ec        -       0x00000004   Zero   RW         1835    .bss.xTimerTaskHandle  timers.o
    0x200034f0        -       0x00000004   Zero   RW         1761    .bss.xYieldPending  tasks.o


    Execution Region ARM_LIB_HEAP (Exec base: 0x200034f4, Load base: 0x30014bb0, Size: 0x00000400, Max: 0x00000400, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x200034f4        -       0x00000400   Zero   RW            2    ARM_LIB_HEAP.bss    anon$$obj.o


    Execution Region ARM_LIB_STACK (Exec base: 0x2003fc00, Load base: 0x30014bb0, Size: 0x00000400, Max: 0x00000400, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x2003fc00        -       0x00000400   Zero   RW            3    ARM_LIB_STACK.bss   anon$$obj.o


    Execution Region RW_m_ncache (Exec base: 0x202c0000, Load base: 0x30014bb0, Size: 0x00000000, Max: 0x00000000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x202c0000        -       0x00000000   Zero   RW            4    RW_m_ncache.bss     anon$$obj.o


    Execution Region RW_m_ncache_unused (Exec base: 0x202c0000, Load base: 0x30014bb0, Size: 0x00080000, Max: 0x00080000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x202c0000        -       0x00080000   Zero   RW            5    RW_m_ncache_unused.bss  anon$$obj.o


    Execution Region RW_m_config_text (Exec base: 0x30000400, Load base: 0x30000400, Size: 0x00000200, Max: 0x00000c00, ABSOLUTE, FIXED)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x30000400   0x30000400   0x00000200   Data   RO         1120    .boot_hdr.conf      evkmimxrt1170_flexspi_nor_config.o


    Execution Region RW_m_ivt_text (Exec base: 0x30001000, Load base: 0x30001000, Size: 0x00000030, Max: 0x00001000, ABSOLUTE, FIXED)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x30001000   0x30001000   0x00000020   Data   RO         1114    .boot_hdr.ivt       fsl_flexspi_nor_boot.o
    0x30001020   0x30001020   0x00000010   Data   RO         1113    .boot_hdr.boot_data  fsl_flexspi_nor_boot.o


    Execution Region VECTOR_ROM (Exec base: 0x30002000, Load base: 0x30002000, Size: 0x00000400, Max: 0x00000400, ABSOLUTE, FIXED)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x30002000   0x30002000   0x00000400   Data   RO         1107    .isr_vector         startup_mimxrt1176_cm7.o


    Execution Region VECTOR_RAM (Exec base: 0x30002000, Load base: 0x30014aa8, Size: 0x00000000, Max: 0x00000000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x30002000        -       0x00000000   Zero   RW            1    VECTOR_RAM.bss      anon$$obj.o


    Execution Region ER_m_text (Exec base: 0x30002400, Load base: 0x30002400, Size: 0x000126a8, Max: 0x00fbdc00, ABSOLUTE, FIXED)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x30002400   0x30002400   0x00000000   Code   RO         1915  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x30002400   0x30002400   0x00000004   Code   RO         1969    .ARM.Collect$$$$00000003  mc_w.l(entry4.o)
    0x30002404   0x30002404   0x00000004   Code   RO         1972    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x30002408   0x30002408   0x00000000   Code   RO         1974    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x30002408   0x30002408   0x00000000   Code   RO         1976    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x30002408   0x30002408   0x00000008   Code   RO         1977    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x30002410   0x30002410   0x00000000   Code   RO         1979    .ARM.Collect$$$$0000000D  mc_w.l(entry10a.o)
    0x30002410   0x30002410   0x00000000   Code   RO         1981    .ARM.Collect$$$$0000000F  mc_w.l(entry11a.o)
    0x30002410   0x30002410   0x00000004   Code   RO         1970    .ARM.Collect$$$$00002714  mc_w.l(entry4.o)
    0x30002414   0x30002414   0x000002d4   Code   RO         1106  * .text               startup_mimxrt1176_cm7.o
    0x300026e8   0x300026e8   0x00000062   Code   RO         1918    .text               mc_w.l(uldiv.o)
    0x3000274a   0x3000274a   0x00000028   Code   RO         1920    .text               mc_w.l(memcpy.o)
    0x30002772   0x30002772   0x00000012   Code   RO         1922    .text               mc_w.l(memset.o)
    0x30002784   0x30002784   0x0000000e   Code   RO         1926    .text               mc_w.l(strlen.o)
    0x30002792   0x30002792   0x0000001a   Code   RO         1928    .text               mc_w.l(memcmp.o)
    0x300027ac   0x300027ac   0x0000001e   Code   RO         1983    .text               mc_w.l(llshl.o)
    0x300027ca   0x300027ca   0x00000020   Code   RO         1985    .text               mc_w.l(llushr.o)
    0x300027ea   0x300027ea   0x00000002   PAD
    0x300027ec   0x300027ec   0x00000030   Code   RO         2023    .text               mc_w.l(init.o)
    0x3000281c   0x3000281c   0x00000056   Code   RO         2035    .text               mc_w.l(__dczerorl2.o)
    0x30002872   0x30002872   0x00000006   PAD
    0x30002878   0x30002878   0x00000620   Code   RO          986    .text.ANATOP_AI_Access  fsl_anatop_ai.o
    0x30002e98   0x30002e98   0x00000024   Code   RO          990    .text.ANATOP_AI_Read  fsl_anatop_ai.o
    0x30002ebc   0x30002ebc   0x00000004   PAD
    0x30002ec0   0x30002ec0   0x00000022   Code   RO          988    .text.ANATOP_AI_Write  fsl_anatop_ai.o
    0x30002ee2   0x30002ee2   0x00000006   PAD
    0x30002ee8   0x30002ee8   0x00000046   Code   RO          992    .text.ANATOP_AI_WriteWithMaskShift  fsl_anatop_ai.o
    0x30002f2e   0x30002f2e   0x00000002   PAD
    0x30002f30   0x30002f30   0x00000038   Code   RO          513    .text.ANATOP_AudioPllGate  fsl_clock.o
    0x30002f68   0x30002f68   0x00000038   Code   RO          511    .text.ANATOP_AudioPllSwEnClk  fsl_clock.o
    0x30002fa0   0x30002fa0   0x0000002a   Code   RO          503    .text.ANATOP_PllBypass  fsl_clock.o
    0x30002fca   0x30002fca   0x00000006   PAD
    0x30002fd0   0x30002fd0   0x000000c8   Code   RO          521    .text.ANATOP_PllConfigure  fsl_clock.o
    0x30003098   0x30003098   0x0000002a   Code   RO          515    .text.ANATOP_PllEnableClk  fsl_clock.o
    0x300030c2   0x300030c2   0x00000006   PAD
    0x300030c8   0x300030c8   0x0000002a   Code   RO          519    .text.ANATOP_PllEnablePllReg  fsl_clock.o
    0x300030f2   0x300030f2   0x00000006   PAD
    0x300030f8   0x300030f8   0x0000002a   Code   RO          527    .text.ANATOP_PllEnableSs  fsl_clock.o
    0x30003122   0x30003122   0x00000006   PAD
    0x30003128   0x30003128   0x0000002a   Code   RO          641    .text.ANATOP_PllHoldRingOff  fsl_clock.o
    0x30003152   0x30003152   0x00000006   PAD
    0x30003158   0x30003158   0x00000034   Code   RO          517    .text.ANATOP_PllSetPower  fsl_clock.o
    0x3000318c   0x3000318c   0x00000004   PAD
    0x30003190   0x30003190   0x00000030   Code   RO          523    .text.ANATOP_PllToggleHoldRingOff  fsl_clock.o
    0x300031c0   0x300031c0   0x00000038   Code   RO          555    .text.ANATOP_SysPll1Div2En  fsl_clock.o
    0x300031f8   0x300031f8   0x00000038   Code   RO          557    .text.ANATOP_SysPll1Div5En  fsl_clock.o
    0x30003230   0x30003230   0x00000038   Code   RO          553    .text.ANATOP_SysPll1Gate  fsl_clock.o
    0x30003268   0x30003268   0x00000038   Code   RO          549    .text.ANATOP_SysPll1SwEnClk  fsl_clock.o
    0x300032a0   0x300032a0   0x00000038   Code   RO          541    .text.ANATOP_VideoPllGate  fsl_clock.o
    0x300032d8   0x300032d8   0x00000038   Code   RO          539    .text.ANATOP_VideoPllSwEnClk  fsl_clock.o
    0x30003310   0x30003310   0x0000002e   Code   RO          161    .text.ARM_MPU_Disable  board.o
    0x3000333e   0x3000333e   0x00000002   PAD
    0x30003340   0x30003340   0x00000034   Code   RO          163    .text.ARM_MPU_Enable  board.o
    0x30003374   0x30003374   0x00000004   PAD
    0x30003378   0x30003378   0x00000064   Code   RO           23    .text.AppTaskCreate  flexcan_interrupt_transfer.o
    0x300033dc   0x300033dc   0x00000004   PAD
    0x300033e0   0x300033e0   0x0000085a   Code   RO           47    .text.App_Task      flexcan_interrupt_transfer.o
    0x30003c3a   0x30003c3a   0x00000006   PAD
    0x30003c40   0x30003c40   0x000008d2   Code   RO          184    .text.BOARD_BootClockRUN  clock_config.o
    0x30004512   0x30004512   0x00000006   PAD
    0x30004518   0x30004518   0x000003ac   Code   RO          159    .text.BOARD_ConfigMPU  board.o
    0x300048c4   0x300048c4   0x00000004   PAD
    0x300048c8   0x300048c8   0x0000000a   Code   RO          153    .text.BOARD_DebugConsoleSrcFreq  board.o
    0x300048d2   0x300048d2   0x00000006   PAD
    0x300048d8   0x300048d8   0x0000001c   Code   RO          157    .text.BOARD_InitDebugConsole  board.o
    0x300048f4   0x300048f4   0x00000004   PAD
    0x300048f8   0x300048f8   0x000001b6   Code   RO          136    .text.BOARD_InitPins  pin_mux.o
    0x30004aae   0x30004aae   0x00000002   PAD
    0x30004ab0   0x30004ab0   0x0000023e   Code   RO           21    .text.BSP_Init      flexcan_interrupt_transfer.o
    0x30004cee   0x30004cee   0x00000002   PAD
    0x30004cf0   0x30004cf0   0x0000004e   Code   RO          447    .text.CAN1_DriverIRQHandler  fsl_flexcan.o
    0x30004d3e   0x30004d3e   0x00000002   PAD
    0x30004d40   0x30004d40   0x0000004e   Code   RO          449    .text.CAN2_DriverIRQHandler  fsl_flexcan.o
    0x30004d8e   0x30004d8e   0x00000002   PAD
    0x30004d90   0x30004d90   0x0000004e   Code   RO          451    .text.CAN3_DriverIRQHandler  fsl_flexcan.o
    0x30004dde   0x30004dde   0x00000002   PAD
    0x30004de0   0x30004de0   0x00000078   Code   RO          144    .text.CLOCK_ControlGate  pin_mux.o
    0x30004e58   0x30004e58   0x00000078   Code   RO          453    .text.CLOCK_ControlGate  fsl_flexcan.o
    0x30004ed0   0x30004ed0   0x00000078   Code   RO          783    .text.CLOCK_ControlGate  fsl_lpuart.o
    0x30004f48   0x30004f48   0x00000078   Code   RO         1019    .text.CLOCK_ControlGate  fsl_gpt.o
    0x30004fc0   0x30004fc0   0x00000038   Code   RO          525    .text.CLOCK_DeinitAudioPll  fsl_clock.o
    0x30004ff8   0x30004ff8   0x00000044   Code   RO          559    .text.CLOCK_DeinitSysPll1  fsl_clock.o
    0x3000503c   0x3000503c   0x00000004   PAD
    0x30005040   0x30005040   0x00000016   Code   RO          138    .text.CLOCK_EnableClock  pin_mux.o
    0x30005056   0x30005056   0x00000002   PAD
    0x30005058   0x30005058   0x00000016   Code   RO          335    .text.CLOCK_EnableClock  fsl_flexcan.o
    0x3000506e   0x3000506e   0x00000002   PAD
    0x30005070   0x30005070   0x00000016   Code   RO          693    .text.CLOCK_EnableClock  fsl_lpuart.o
    0x30005086   0x30005086   0x00000002   PAD
    0x30005088   0x30005088   0x00000016   Code   RO         1003    .text.CLOCK_EnableClock  fsl_gpt.o
    0x3000509e   0x3000509e   0x00000002   PAD
    0x300050a0   0x300050a0   0x00000110   Code   RO          597    .text.CLOCK_GetAvPllFreq  fsl_clock.o
    0x300051b0   0x300051b0   0x0000018e   Code   RO          599    .text.CLOCK_GetFreq  fsl_clock.o
    0x3000533e   0x3000533e   0x00000002   PAD
    0x30005340   0x30005340   0x0000000a   Code   RO          601    .text.CLOCK_GetM7Freq  fsl_clock.o
    0x3000534a   0x3000534a   0x00000006   PAD
    0x30005350   0x30005350   0x00000148   Code   RO          493    .text.CLOCK_GetPfdFreq  fsl_clock.o
    0x30005498   0x30005498   0x000000e6   Code   RO          595    .text.CLOCK_GetPllFreq  fsl_clock.o
    0x3000557e   0x3000557e   0x00000002   PAD
    0x30005580   0x30005580   0x0000001e   Code   RO           45    .text.CLOCK_GetRootClockDiv  flexcan_interrupt_transfer.o
    0x3000559e   0x3000559e   0x00000002   PAD
    0x300055a0   0x300055a0   0x0000001e   Code   RO          171    .text.CLOCK_GetRootClockDiv  board.o
    0x300055be   0x300055be   0x00000002   PAD
    0x300055c0   0x300055c0   0x0000001e   Code   RO          206    .text.CLOCK_GetRootClockDiv  clock_config.o
    0x300055de   0x300055de   0x00000002   PAD
    0x300055e0   0x300055e0   0x0000001e   Code   RO          647    .text.CLOCK_GetRootClockDiv  fsl_clock.o
    0x300055fe   0x300055fe   0x00000002   PAD
    0x30005600   0x30005600   0x00000064   Code   RO           37    .text.CLOCK_GetRootClockFreq  flexcan_interrupt_transfer.o
    0x30005664   0x30005664   0x00000004   PAD
    0x30005668   0x30005668   0x00000064   Code   RO          155    .text.CLOCK_GetRootClockFreq  board.o
    0x300056cc   0x300056cc   0x00000004   PAD
    0x300056d0   0x300056d0   0x00000064   Code   RO          200    .text.CLOCK_GetRootClockFreq  clock_config.o
    0x30005734   0x30005734   0x00000004   PAD
    0x30005738   0x30005738   0x00000064   Code   RO          643    .text.CLOCK_GetRootClockFreq  fsl_clock.o
    0x3000579c   0x3000579c   0x00000004   PAD
    0x300057a0   0x300057a0   0x0000001c   Code   RO           43    .text.CLOCK_GetRootClockMux  flexcan_interrupt_transfer.o
    0x300057bc   0x300057bc   0x00000004   PAD
    0x300057c0   0x300057c0   0x0000001c   Code   RO          169    .text.CLOCK_GetRootClockMux  board.o
    0x300057dc   0x300057dc   0x00000004   PAD
    0x300057e0   0x300057e0   0x0000001c   Code   RO          204    .text.CLOCK_GetRootClockMux  clock_config.o
    0x300057fc   0x300057fc   0x00000004   PAD
    0x30005800   0x30005800   0x0000001c   Code   RO          645    .text.CLOCK_GetRootClockMux  fsl_clock.o
    0x3000581c   0x3000581c   0x00000004   PAD
    0x30005820   0x30005820   0x000001b0   Code   RO          477    .text.CLOCK_InitArmPll  fsl_clock.o
    0x300059d0   0x300059d0   0x0000019a   Code   RO          489    .text.CLOCK_InitPfd  fsl_clock.o
    0x30005b6a   0x30005b6a   0x00000006   PAD
    0x30005b70   0x30005b70   0x000001f2   Code   RO          483    .text.CLOCK_InitSysPll2  fsl_clock.o
    0x30005d62   0x30005d62   0x00000006   PAD
    0x30005d68   0x30005d68   0x00000112   Code   RO          495    .text.CLOCK_InitSysPll3  fsl_clock.o
    0x30005e7a   0x30005e7a   0x00000006   PAD
    0x30005e80   0x30005e80   0x00000110   Code   RO          537    .text.CLOCK_InitVideoPll  fsl_clock.o
    0x30005f90   0x30005f90   0x00000038   Code   RO          190    .text.CLOCK_OSC_EnableOsc48M  clock_config.o
    0x30005fc8   0x30005fc8   0x00000038   Code   RO          192    .text.CLOCK_OSC_EnableOsc48MDiv2  clock_config.o
    0x30006000   0x30006000   0x00000022   Code   RO          607    .text.CLOCK_OSC_EnableOscRc400M  fsl_clock.o
    0x30006022   0x30006022   0x00000006   PAD
    0x30006028   0x30006028   0x00000038   Code   RO          188    .text.CLOCK_OSC_GateOscRc400M  clock_config.o
    0x30006060   0x30006060   0x00000050   Code   RO          583    .text.CLOCK_OSC_Set1MHzOutputBehavior  fsl_clock.o
    0x300060b0   0x300060b0   0x00000126   Code   RO          501    .text.CLOCK_SetPllBypass  fsl_clock.o
    0x300061d6   0x300061d6   0x00000002   PAD
    0x300061d8   0x300061d8   0x00000074   Code   RO           35    .text.CLOCK_SetRootClock  flexcan_interrupt_transfer.o
    0x3000624c   0x3000624c   0x00000004   PAD
    0x30006250   0x30006250   0x00000074   Code   RO          194    .text.CLOCK_SetRootClock  clock_config.o
    0x300062c4   0x300062c4   0x00000004   PAD
    0x300062c8   0x300062c8   0x00000048   Code   RO         1176    .text.ConsumerHeartbeatAlarm  lifegrd.o
    0x30006310   0x30006310   0x00000176   Code   RO         1259    .text.CopyBits      pdo.o
    0x30006486   0x30006486   0x00000002   PAD
    0x30006488   0x30006488   0x0000004e   Code   RO          947    .text.DCDC_BootIntoDCM  fsl_dcdc.o
    0x300064d6   0x300064d6   0x00000002   PAD
    0x300064d8   0x300064d8   0x0000003a   Code   RO          186    .text.DCDC_SetVDD1P0BuckModeTargetVoltage  clock_config.o
    0x30006512   0x30006512   0x00000006   PAD
    0x30006518   0x30006518   0x000000bc   Code   RO          292    .text.DbgConsole_ConvertRadixNumToString  fsl_debug_console.o
    0x300065d4   0x300065d4   0x00000004   PAD
    0x300065d8   0x300065d8   0x0000008e   Code   RO          276    .text.DbgConsole_Init  fsl_debug_console.o
    0x30006666   0x30006666   0x00000002   PAD
    0x30006668   0x30006668   0x0000002c   Code   RO          280    .text.DbgConsole_Printf  fsl_debug_console.o
    0x30006694   0x30006694   0x00000004   PAD
    0x30006698   0x30006698   0x000003d0   Code   RO          284    .text.DbgConsole_PrintfFormattedData  fsl_debug_console.o
    0x30006a68   0x30006a68   0x00000040   Code   RO          294    .text.DbgConsole_PrintfPaddingCharacter  fsl_debug_console.o
    0x30006aa8   0x30006aa8   0x0000003a   Code   RO          286    .text.DbgConsole_Putchar  fsl_debug_console.o
    0x30006ae2   0x30006ae2   0x00000006   PAD
    0x30006ae8   0x30006ae8   0x00000040   Code   RO          282    .text.DbgConsole_Vprintf  fsl_debug_console.o
    0x30006b28   0x30006b28   0x00000056   Code   RO         1422    .text.DelAlarm      timer.o
    0x30006b7e   0x30006b7e   0x00000002   PAD
    0x30006b80   0x30006b80   0x00000012   Code   RO          677    .text.DelayLoop     fsl_common_arm.o
    0x30006b92   0x30006b92   0x00000006   PAD
    0x30006b98   0x30006b98   0x0000002c   Code   RO           31    .text.EnableIRQ     flexcan_interrupt_transfer.o
    0x30006bc4   0x30006bc4   0x00000004   PAD
    0x30006bc8   0x30006bc8   0x0000002c   Code   RO          411    .text.EnableIRQ     fsl_flexcan.o
    0x30006bf4   0x30006bf4   0x00000004   PAD
    0x30006bf8   0x30006bf8   0x0000011e   Code   RO          323    .text.FLEXCAN_CalculateImprovedTimingValues  fsl_flexcan.o
    0x30006d16   0x30006d16   0x00000002   PAD
    0x30006d18   0x30006d18   0x00000078   Code   RO          445    .text.FLEXCAN_CheckUnhandleInterruptEvents  fsl_flexcan.o
    0x30006d90   0x30006d90   0x00000018   Code   RO          393    .text.FLEXCAN_ClearMbStatusFlags  fsl_flexcan.o
    0x30006da8   0x30006da8   0x00000022   Code   RO          319    .text.FLEXCAN_ClearStatusFlags  fsl_flexcan.o
    0x30006dca   0x30006dca   0x00000006   PAD
    0x30006dd0   0x30006dd0   0x00000058   Code   RO          409    .text.FLEXCAN_DisableInterrupts  fsl_flexcan.o
    0x30006e28   0x30006e28   0x00000020   Code   RO          429    .text.FLEXCAN_DisableMbInterrupts  fsl_flexcan.o
    0x30006e48   0x30006e48   0x0000004e   Code   RO          337    .text.FLEXCAN_Enable  fsl_flexcan.o
    0x30006e96   0x30006e96   0x00000002   PAD
    0x30006e98   0x30006e98   0x0000004a   Code   RO          407    .text.FLEXCAN_EnableInterrupts  fsl_flexcan.o
    0x30006ee2   0x30006ee2   0x00000006   PAD
    0x30006ee8   0x30006ee8   0x00000020   Code   RO          415    .text.FLEXCAN_EnableMbInterrupts  fsl_flexcan.o
    0x30006f08   0x30006f08   0x0000002c   Code   RO          315    .text.FLEXCAN_EnterFreezeMode  fsl_flexcan.o
    0x30006f34   0x30006f34   0x00000004   PAD
    0x30006f38   0x30006f38   0x00000038   Code   RO          317    .text.FLEXCAN_ExitFreezeMode  fsl_flexcan.o
    0x30006f70   0x30006f70   0x000000ae   Code   RO          347    .text.FLEXCAN_GetDefaultConfig  fsl_flexcan.o
    0x3000701e   0x3000701e   0x00000002   PAD
    0x30007020   0x30007020   0x000000c4   Code   RO          367    .text.FLEXCAN_GetFDMailboxOffset  fsl_flexcan.o
    0x300070e4   0x300070e4   0x00000004   PAD
    0x300070e8   0x300070e8   0x0000005c   Code   RO          313    .text.FLEXCAN_GetInstance  fsl_flexcan.o
    0x30007144   0x30007144   0x00000004   PAD
    0x30007148   0x30007148   0x0000013e   Code   RO          359    .text.FLEXCAN_GetSegments  fsl_flexcan.o
    0x30007286   0x30007286   0x00000002   PAD
    0x30007288   0x30007288   0x0000002a   Code   RO          441    .text.FLEXCAN_GetStatusFlags  fsl_flexcan.o
    0x300072b2   0x300072b2   0x00000006   PAD
    0x300072b8   0x300072b8   0x000003ac   Code   RO          333    .text.FLEXCAN_Init  fsl_flexcan.o
    0x30007664   0x30007664   0x00000004   PAD
    0x30007668   0x30007668   0x00000058   Code   RO          357    .text.FLEXCAN_IsMbOccupied  fsl_flexcan.o
    0x300076c0   0x300076c0   0x000001ca   Code   RO          385    .text.FLEXCAN_ReadFDRxMb  fsl_flexcan.o
    0x3000788a   0x3000788a   0x00000006   PAD
    0x30007890   0x30007890   0x000000c8   Code   RO          387    .text.FLEXCAN_ReadRxFifo  fsl_flexcan.o
    0x30007958   0x30007958   0x00000152   Code   RO          383    .text.FLEXCAN_ReadRxMb  fsl_flexcan.o
    0x30007aaa   0x30007aaa   0x00000006   PAD
    0x30007ab0   0x30007ab0   0x00000104   Code   RO          339    .text.FLEXCAN_Reset  fsl_flexcan.o
    0x30007bb4   0x30007bb4   0x00000004   PAD
    0x30007bb8   0x30007bb8   0x00000122   Code   RO          365    .text.FLEXCAN_SetFDTxMbConfig  fsl_flexcan.o
    0x30007cda   0x30007cda   0x00000006   PAD
    0x30007ce0   0x30007ce0   0x00000144   Code   RO          369    .text.FLEXCAN_SetRxMbConfig  fsl_flexcan.o
    0x30007e24   0x30007e24   0x00000004   PAD
    0x30007e28   0x30007e28   0x000000b2   Code   RO          325    .text.FLEXCAN_SetTimingConfig  fsl_flexcan.o
    0x30007eda   0x30007eda   0x00000006   PAD
    0x30007ee0   0x30007ee0   0x000000c2   Code   RO          355    .text.FLEXCAN_SetTxMbConfig  fsl_flexcan.o
    0x30007fa2   0x30007fa2   0x00000006   PAD
    0x30007fa8   0x30007fa8   0x00000392   Code   RO          443    .text.FLEXCAN_SubHandlerForDataTransfered  fsl_flexcan.o
    0x3000833a   0x3000833a   0x00000006   PAD
    0x30008340   0x30008340   0x000000dc   Code   RO          435    .text.FLEXCAN_TransferAbortReceive  fsl_flexcan.o
    0x3000841c   0x3000841c   0x00000004   PAD
    0x30008420   0x30008420   0x00000062   Code   RO          437    .text.FLEXCAN_TransferAbortReceiveFifo  fsl_flexcan.o
    0x30008482   0x30008482   0x00000006   PAD
    0x30008488   0x30008488   0x00000102   Code   RO          427    .text.FLEXCAN_TransferAbortSend  fsl_flexcan.o
    0x3000858a   0x3000858a   0x00000006   PAD
    0x30008590   0x30008590   0x0000011a   Code   RO          403    .text.FLEXCAN_TransferCreateHandle  fsl_flexcan.o
    0x300086aa   0x300086aa   0x00000006   PAD
    0x300086b0   0x300086b0   0x000000de   Code   RO          433    .text.FLEXCAN_TransferFDAbortReceive  fsl_flexcan.o
    0x3000878e   0x3000878e   0x00000002   PAD
    0x30008790   0x30008790   0x0000010e   Code   RO          431    .text.FLEXCAN_TransferFDAbortSend  fsl_flexcan.o
    0x3000889e   0x3000889e   0x00000002   PAD
    0x300088a0   0x300088a0   0x000000da   Code   RO          405    .text.FLEXCAN_TransferHandleIRQ  fsl_flexcan.o
    0x3000897a   0x3000897a   0x00000006   PAD
    0x30008980   0x30008980   0x0000011c   Code   RO          417    .text.FLEXCAN_TransferReceiveNonBlocking  fsl_flexcan.o
    0x30008a9c   0x30008a9c   0x00000004   PAD
    0x30008aa0   0x30008aa0   0x00000158   Code   RO          413    .text.FLEXCAN_TransferSendNonBlocking  fsl_flexcan.o
    0x30008bf8   0x30008bf8   0x00000184   Code   RO          379    .text.FLEXCAN_WriteTxMb  fsl_flexcan.o
    0x30008d7c   0x30008d7c   0x00000004   PAD
    0x30008d80   0x30008d80   0x00000018   Code   RO           15    .text.GPT2_IRQHandler  flexcan_interrupt_transfer.o
    0x30008d98   0x30008d98   0x00000014   Code   RO           17    .text.GPT_ClearStatusFlags  flexcan_interrupt_transfer.o
    0x30008dac   0x30008dac   0x00000004   PAD
    0x30008db0   0x30008db0   0x00000014   Code   RO           29    .text.GPT_EnableInterrupts  flexcan_interrupt_transfer.o
    0x30008dc4   0x30008dc4   0x00000004   PAD
    0x30008dc8   0x30008dc8   0x00000058   Code   RO         1017    .text.GPT_GetDefaultConfig  fsl_gpt.o
    0x30008e20   0x30008e20   0x0000005a   Code   RO         1005    .text.GPT_GetInstance  fsl_gpt.o
    0x30008e7a   0x30008e7a   0x00000006   PAD
    0x30008e80   0x30008e80   0x0000009e   Code   RO         1001    .text.GPT_Init      fsl_gpt.o
    0x30008f1e   0x30008f1e   0x00000002   PAD
    0x30008f20   0x30008f20   0x00000040   Code   RO           25    .text.GPT_SetClockDivider  flexcan_interrupt_transfer.o
    0x30008f60   0x30008f60   0x00000040   Code   RO         1011    .text.GPT_SetClockDivider  fsl_gpt.o
    0x30008fa0   0x30008fa0   0x0000004e   Code   RO         1009    .text.GPT_SetClockSource  fsl_gpt.o
    0x30008fee   0x30008fee   0x00000002   PAD
    0x30008ff0   0x30008ff0   0x00000040   Code   RO           27    .text.GPT_SetOutputCompareValue  flexcan_interrupt_transfer.o
    0x30009030   0x30009030   0x00000022   Code   RO         1007    .text.GPT_SoftwareReset  fsl_gpt.o
    0x30009052   0x30009052   0x00000006   PAD
    0x30009058   0x30009058   0x00000012   Code   RO           33    .text.GPT_StartTimer  flexcan_interrupt_transfer.o
    0x3000906a   0x3000906a   0x00000006   PAD
    0x30009070   0x30009070   0x000000c6   Code   RO         1324    .text.GetSDOClientFromNodeId  sdo.o
    0x30009136   0x30009136   0x00000002   PAD
    0x30009138   0x30009138   0x000000c8   Code   RO         1182    .text.GuardTimeAlarm  lifegrd.o
    0x30009200   0x30009200   0x00000024   Code   RO         1053    .text.HAL_UartGetStatus  fsl_adapter_lpuart.o
    0x30009224   0x30009224   0x00000004   PAD
    0x30009228   0x30009228   0x000000c4   Code   RO         1045    .text.HAL_UartInit  fsl_adapter_lpuart.o
    0x300092ec   0x300092ec   0x00000004   PAD
    0x300092f0   0x300092f0   0x000000f4   Code   RO         1047    .text.HAL_UartInitCommon  fsl_adapter_lpuart.o
    0x300093e4   0x300093e4   0x00000004   PAD
    0x300093e8   0x300093e8   0x00000092   Code   RO         1051    .text.HAL_UartReceiveBlocking  fsl_adapter_lpuart.o
    0x3000947a   0x3000947a   0x00000006   PAD
    0x30009480   0x30009480   0x0000008c   Code   RO         1055    .text.HAL_UartSendBlocking  fsl_adapter_lpuart.o
    0x3000950c   0x3000950c   0x00000004   PAD
    0x30009510   0x30009510   0x00000034   Code   RO          198    .text.IOMUXC_MQSConfig  clock_config.o
    0x30009544   0x30009544   0x00000004   PAD
    0x30009548   0x30009548   0x00000024   Code   RO          142    .text.IOMUXC_SetPinConfig  pin_mux.o
    0x3000956c   0x3000956c   0x00000004   PAD
    0x30009570   0x30009570   0x00000038   Code   RO          140    .text.IOMUXC_SetPinMux  pin_mux.o
    0x300095a8   0x300095a8   0x000000ba   Code   RO          196    .text.IOMUXC_SetSaiMClkClockSource  clock_config.o
    0x30009662   0x30009662   0x00000006   PAD
    0x30009668   0x30009668   0x00000024   Code   RO          777    .text.LPUART10_DriverIRQHandler  fsl_lpuart.o
    0x3000968c   0x3000968c   0x00000004   PAD
    0x30009690   0x30009690   0x00000026   Code   RO          779    .text.LPUART11_DriverIRQHandler  fsl_lpuart.o
    0x300096b6   0x300096b6   0x00000002   PAD
    0x300096b8   0x300096b8   0x00000026   Code   RO          781    .text.LPUART12_DriverIRQHandler  fsl_lpuart.o
    0x300096de   0x300096de   0x00000002   PAD
    0x300096e0   0x300096e0   0x00000026   Code   RO          759    .text.LPUART1_DriverIRQHandler  fsl_lpuart.o
    0x30009706   0x30009706   0x00000002   PAD
    0x30009708   0x30009708   0x00000024   Code   RO          761    .text.LPUART2_DriverIRQHandler  fsl_lpuart.o
    0x3000972c   0x3000972c   0x00000004   PAD
    0x30009730   0x30009730   0x00000026   Code   RO          763    .text.LPUART3_DriverIRQHandler  fsl_lpuart.o
    0x30009756   0x30009756   0x00000002   PAD
    0x30009758   0x30009758   0x00000026   Code   RO          765    .text.LPUART4_DriverIRQHandler  fsl_lpuart.o
    0x3000977e   0x3000977e   0x00000002   PAD
    0x30009780   0x30009780   0x00000026   Code   RO          767    .text.LPUART5_DriverIRQHandler  fsl_lpuart.o
    0x300097a6   0x300097a6   0x00000002   PAD
    0x300097a8   0x300097a8   0x00000024   Code   RO          769    .text.LPUART6_DriverIRQHandler  fsl_lpuart.o
    0x300097cc   0x300097cc   0x00000004   PAD
    0x300097d0   0x300097d0   0x00000026   Code   RO          771    .text.LPUART7_DriverIRQHandler  fsl_lpuart.o
    0x300097f6   0x300097f6   0x00000002   PAD
    0x300097f8   0x300097f8   0x00000026   Code   RO          773    .text.LPUART8_DriverIRQHandler  fsl_lpuart.o
    0x3000981e   0x3000981e   0x00000002   PAD
    0x30009820   0x30009820   0x00000026   Code   RO          775    .text.LPUART9_DriverIRQHandler  fsl_lpuart.o
    0x30009846   0x30009846   0x00000002   PAD
    0x30009848   0x30009848   0x00000080   Code   RO          717    .text.LPUART_ClearStatusFlags  fsl_lpuart.o
    0x300098c8   0x300098c8   0x00000078   Code   RO          701    .text.LPUART_GetDefaultConfig  fsl_lpuart.o
    0x30009940   0x30009940   0x0000005a   Code   RO          687    .text.LPUART_GetInstance  fsl_lpuart.o
    0x3000999a   0x3000999a   0x00000006   PAD
    0x300099a0   0x300099a0   0x0000002e   Code   RO          715    .text.LPUART_GetStatusFlags  fsl_lpuart.o
    0x300099ce   0x300099ce   0x00000002   PAD
    0x300099d0   0x300099d0   0x0000036e   Code   RO          691    .text.LPUART_Init   fsl_lpuart.o
    0x30009d3e   0x30009d3e   0x00000002   PAD
    0x30009d40   0x30009d40   0x00000188   Code   RO          721    .text.LPUART_ReadBlocking  fsl_lpuart.o
    0x30009ec8   0x30009ec8   0x0000001c   Code   RO          695    .text.LPUART_SoftwareReset  fsl_lpuart.o
    0x30009ee4   0x30009ee4   0x00000004   PAD
    0x30009ee8   0x30009ee8   0x00000074   Code   RO          719    .text.LPUART_WriteBlocking  fsl_lpuart.o
    0x30009f5c   0x30009f5c   0x00000004   PAD
    0x30009f60   0x30009f60   0x00000094   Code   RO           85    .text.Master_scanIndexOD  master.o
    0x30009ff4   0x30009ff4   0x00000004   PAD
    0x30009ff8   0x30009ff8   0x00000032   Code   RO           83    .text.Master_valueRangeTest  master.o
    0x3000a02a   0x3000a02a   0x00000006   PAD
    0x3000a030   0x3000a030   0x00000018   Code   RO         1399    .text.OnCOB_ID_SyncUpdate  sync.o
    0x3000a048   0x3000a048   0x0000005e   Code   RO         1190    .text.OnHeartbeatProducerUpdate  lifegrd.o
    0x3000a0a6   0x3000a0a6   0x00000002   PAD
    0x3000a0a8   0x3000a0a8   0x0000001e   Code   RO         1184    .text.OnNodeGuardUpdate  lifegrd.o
    0x3000a0c6   0x3000a0c6   0x00000002   PAD
    0x3000a0c8   0x3000a0c8   0x00000056   Code   RO         1151    .text.OnNumberOfErrorsUpdate  emcy.o
    0x3000a11e   0x3000a11e   0x00000002   PAD
    0x3000a120   0x3000a120   0x0000003c   Code   RO         1265    .text.PDOEventTimerAlarm  pdo.o
    0x3000a15c   0x3000a15c   0x00000004   PAD
    0x3000a160   0x3000a160   0x00000040   Code   RO         1273    .text.PDOInhibitTimerAlarm  pdo.o
    0x3000a1a0   0x3000a1a0   0x00000090   Code   RO         1281    .text.PDOInit       pdo.o
    0x3000a230   0x3000a230   0x000000ce   Code   RO         1283    .text.PDOStop       pdo.o
    0x3000a2fe   0x3000a2fe   0x00000002   PAD
    0x3000a300   0x3000a300   0x0000016a   Code   RO          890    .text.PMU_EnableBodyBias  fsl_pmu.o
    0x3000a46a   0x3000a46a   0x00000006   PAD
    0x3000a470   0x3000a470   0x000000be   Code   RO          840    .text.PMU_StaticEnableLpsrAnaLdoBypassMode  fsl_pmu.o
    0x3000a52e   0x3000a52e   0x00000002   PAD
    0x3000a530   0x3000a530   0x000000a8   Code   RO          850    .text.PMU_StaticEnableLpsrDigLdoBypassMode  fsl_pmu.o
    0x3000a5d8   0x3000a5d8   0x0000004a   Code   RO          834    .text.PMU_StaticEnablePllLdo  fsl_pmu.o
    0x3000a622   0x3000a622   0x0000000e   PAD
    0x3000a630   0x3000a630   0x00000064   Code   RO         1868    .text.PendSV_Handler  port.o
    0x3000a694   0x3000a694   0x00000004   PAD
    0x3000a698   0x3000a698   0x00000064   Code   RO         1180    .text.ProducerHeartbeatAlarm  lifegrd.o
    0x3000a6fc   0x3000a6fc   0x00000004   PAD
    0x3000a700   0x3000a700   0x0000004c   Code   RO         1246    .text.RegisterSetODentryCallBack  objacces.o
    0x3000a74c   0x3000a74c   0x00000004   PAD
    0x3000a750   0x3000a750   0x00000098   Code   RO          675    .text.SDK_DelayAtLeastUs  fsl_common_arm.o
    0x3000a7e8   0x3000a7e8   0x00000106   Code   RO         1296    .text.SDOTimeoutAlarm  sdo.o
    0x3000a8ee   0x3000a8ee   0x00000002   PAD
    0x3000a8f0   0x3000a8f0   0x00000084   Code   RO         1304    .text.SDOlineToObjdict  sdo.o
    0x3000a974   0x3000a974   0x00000004   PAD
    0x3000a978   0x3000a978   0x000000a2   Code   RO         1310    .text.SDOtoLine     sdo.o
    0x3000aa1a   0x3000aa1a   0x00000006   PAD
    0x3000aa20   0x3000aa20   0x00000024   Code   RO         1852    .text.SVC_Handler   port.o
    0x3000aa44   0x3000aa44   0x00000004   PAD
    0x3000aa48   0x3000aa48   0x0000014e   Code   RO         1420    .text.SetAlarm      timer.o
    0x3000ab96   0x3000ab96   0x00000002   PAD
    0x3000ab98   0x3000ab98   0x00000012   Code   RO         1395    .text.SyncAlarm     sync.o
    0x3000abaa   0x3000abaa   0x00000006   PAD
    0x3000abb0   0x3000abb0   0x00000040   Code   RO         1870    .text.SysTick_Handler  port.o
    0x3000abf0   0x3000abf0   0x000001ba   Code   RO         1031    .text.SystemInit    system_mimxrt1176_cm7.o
    0x3000adaa   0x3000adaa   0x00000006   PAD
    0x3000adb0   0x3000adb0   0x00000002   Code   RO         1033    .text.SystemInitHook  system_mimxrt1176_cm7.o
    0x3000adb2   0x3000adb2   0x00000006   PAD
    0x3000adb8   0x3000adb8   0x000000d0   Code   RO         1279    .text.TPDO_Communication_Parameter_Callback  pdo.o
    0x3000ae88   0x3000ae88   0x00000152   Code   RO         1424    .text.TimeDispatch  timer.o
    0x3000afda   0x3000afda   0x00000006   PAD
    0x3000afe0   0x3000afe0   0x0000000a   Code   RO         1277    .text._RxPDO_EventTimers_Handler  pdo.o
    0x3000afea   0x3000afea   0x00000006   PAD
    0x3000aff0   0x3000aff0   0x00000030   Code   RO           41    .text.__NVIC_EnableIRQ  flexcan_interrupt_transfer.o
    0x3000b020   0x3000b020   0x00000030   Code   RO          457    .text.__NVIC_EnableIRQ  fsl_flexcan.o
    0x3000b050   0x3000b050   0x00000020   Code   RO          304    .text.__aeabi_assert  fsl_assert.o
    0x3000b070   0x3000b070   0x0000017a   Code   RO         1242    .text._getODentry   objacces.o
    0x3000b1ea   0x3000b1ea   0x00000006   PAD
    0x3000b1f0   0x3000b1f0   0x0000000c   Code   RO         1200    .text._heartbeatError  lifegrd.o
    0x3000b1fc   0x3000b1fc   0x00000004   PAD
    0x3000b200   0x3000b200   0x00000008   Code   RO         1375    .text._initialisation  states.o
    0x3000b208   0x3000b208   0x0000000c   Code   RO         1206    .text._nodeguardError  lifegrd.o
    0x3000b214   0x3000b214   0x00000004   PAD
    0x3000b218   0x3000b218   0x00000008   Code   RO         1379    .text._operational  states.o
    0x3000b220   0x3000b220   0x0000000c   Code   RO         1202    .text._post_SlaveBootup  lifegrd.o
    0x3000b22c   0x3000b22c   0x00000004   PAD
    0x3000b230   0x3000b230   0x00000010   Code   RO         1204    .text._post_SlaveStateChange  lifegrd.o
    0x3000b240   0x3000b240   0x00000008   Code   RO         1411    .text._post_TPDO    sync.o
    0x3000b248   0x3000b248   0x00000018   Code   RO         1165    .text._post_emcy    emcy.o
    0x3000b260   0x3000b260   0x00000008   Code   RO         1409    .text._post_sync    sync.o
    0x3000b268   0x3000b268   0x00000020   Code   RO         1377    .text._preOperational  states.o
    0x3000b288   0x3000b288   0x000001f4   Code   RO         1344    .text._readNetworkDict  sdo.o
    0x3000b47c   0x3000b47c   0x00000004   PAD
    0x3000b480   0x3000b480   0x0000025c   Code   RO         1269    .text._sendPDOevent  pdo.o
    0x3000b6dc   0x3000b6dc   0x00000004   PAD
    0x3000b6e0   0x3000b6e0   0x00000202   Code   RO         1244    .text._setODentry   objacces.o
    0x3000b8e2   0x3000b8e2   0x00000006   PAD
    0x3000b8e8   0x3000b8e8   0x00000008   Code   RO         1381    .text._stopped      states.o
    0x3000b8f0   0x3000b8f0   0x00000012   Code   RO         1248    .text._storeODSubIndex  objacces.o
    0x3000b902   0x3000b902   0x00000006   PAD
    0x3000b908   0x3000b908   0x000002a8   Code   RO         1336    .text._writeNetworkDict  sdo.o
    0x3000bbb0   0x3000bbb0   0x00000018   Code   RO         1240    .text.accessDictionaryError  objacces.o
    0x3000bbc8   0x3000bbc8   0x0000014a   Code   RO         1257    .text.buildPDO      pdo.o
    0x3000bd12   0x3000bd12   0x00000006   PAD
    0x3000bd18   0x3000bd18   0x000000c6   Code   RO         1365    .text.canDispatch   states.o
    0x3000bdde   0x3000bdde   0x00000002   PAD
    0x3000bde0   0x3000bde0   0x000000e6   Code   RO           13    .text.canSend       flexcan_interrupt_transfer.o
    0x3000bec6   0x3000bec6   0x00000002   PAD
    0x3000bec8   0x3000bec8   0x0000002a   Code   RO         1153    .text.emergencyInit  emcy.o
    0x3000bef2   0x3000bef2   0x00000006   PAD
    0x3000bef8   0x3000bef8   0x00000008   Code   RO         1155    .text.emergencyStop  emcy.o
    0x3000bf00   0x3000bf00   0x000000fa   Code   RO         1312    .text.failedSDO     sdo.o
    0x3000bffa   0x3000bffa   0x00000006   PAD
    0x3000c000   0x3000c000   0x00000080   Code   RO           39    .text.flexcan_callback  flexcan_interrupt_transfer.o
    0x3000c080   0x3000c080   0x0000002e   Code   RO          455    .text.flexcan_memset  fsl_flexcan.o
    0x3000c0ae   0x3000c0ae   0x00000002   PAD
    0x3000c0b0   0x3000c0b0   0x0000000a   Code   RO           11    .text.getElapsedTime  flexcan_interrupt_transfer.o
    0x3000c0ba   0x3000c0ba   0x00000006   PAD
    0x3000c0c0   0x3000c0c0   0x0000000e   Code   RO         1371    .text.getNodeId     states.o
    0x3000c0ce   0x3000c0ce   0x00000002   PAD
    0x3000c0d0   0x3000c0d0   0x00000184   Code   RO         1352    .text.getReadResultNetworkDict  sdo.o
    0x3000c254   0x3000c254   0x00000004   PAD
    0x3000c258   0x3000c258   0x00000072   Code   RO         1318    .text.getSDOfreeLine  sdo.o
    0x3000c2ca   0x3000c2ca   0x00000006   PAD
    0x3000c2d0   0x3000c2d0   0x000000b4   Code   RO         1314    .text.getSDOlineOnUse  sdo.o
    0x3000c384   0x3000c384   0x00000004   PAD
    0x3000c388   0x3000c388   0x00000042   Code   RO         1326    .text.getSDOlineRestBytes  sdo.o
    0x3000c3ca   0x3000c3ca   0x00000006   PAD
    0x3000c3d0   0x3000c3d0   0x000000ba   Code   RO         1354    .text.getWriteResultNetworkDict  sdo.o
    0x3000c48a   0x3000c48a   0x00000006   PAD
    0x3000c490   0x3000c490   0x000000d2   Code   RO         1192    .text.heartbeatInit  lifegrd.o
    0x3000c562   0x3000c562   0x00000006   PAD
    0x3000c568   0x3000c568   0x00000062   Code   RO         1194    .text.heartbeatStop  lifegrd.o
    0x3000c5ca   0x3000c5ca   0x00000006   PAD
    0x3000c5d0   0x3000c5d0   0x000001a0   Code   RO         1316    .text.initSDOline   sdo.o
    0x3000c770   0x3000c770   0x00000016   Code   RO         1196    .text.lifeGuardInit  lifegrd.o
    0x3000c786   0x3000c786   0x00000002   PAD
    0x3000c788   0x3000c788   0x00000016   Code   RO         1198    .text.lifeGuardStop  lifegrd.o
    0x3000c79e   0x3000c79e   0x00000002   PAD
    0x3000c7a0   0x3000c7a0   0x000000c2   Code   RO         1308    .text.lineToSDO     sdo.o
    0x3000c862   0x3000c862   0x00000006   PAD
    0x3000c868   0x3000c868   0x00000054   Code   RO           19    .text.main          flexcan_interrupt_transfer.o
    0x3000c8bc   0x3000c8bc   0x00000004   PAD
    0x3000c8c0   0x3000c8c0   0x0000003c   Code   RO         1218    .text.masterSendNMTnodeguard  nmtmaster.o
    0x3000c8fc   0x3000c8fc   0x00000004   PAD
    0x3000c900   0x3000c900   0x00000040   Code   RO         1216    .text.masterSendNMTstateChange  nmtmaster.o
    0x3000c940   0x3000c940   0x000000d6   Code   RO         1188    .text.nodeguardInit  lifegrd.o
    0x3000ca16   0x3000ca16   0x00000002   PAD
    0x3000ca18   0x3000ca18   0x0000001a   Code   RO         1186    .text.nodeguardStop  lifegrd.o
    0x3000ca32   0x3000ca32   0x00000006   PAD
    0x3000ca38   0x3000ca38   0x0000007a   Code   RO         1306    .text.objdictToSDOline  sdo.o
    0x3000cab2   0x3000cab2   0x00000006   PAD
    0x3000cab8   0x3000cab8   0x0000005e   Code   RO         1163    .text.proceedEMCY   emcy.o
    0x3000cb16   0x3000cb16   0x00000002   PAD
    0x3000cb18   0x3000cb18   0x00000140   Code   RO         1229    .text.proceedNMTstateChange  nmtslave.o
    0x3000cc58   0x3000cc58   0x000001c2   Code   RO         1178    .text.proceedNODE_GUARD  lifegrd.o
    0x3000ce1a   0x3000ce1a   0x00000006   PAD
    0x3000ce20   0x3000ce20   0x0000044e   Code   RO         1263    .text.proceedPDO    pdo.o
    0x3000d26e   0x3000d26e   0x00000002   PAD
    0x3000d270   0x3000d270   0x00002c26   Code   RO         1332    .text.proceedSDO    sdo.o
    0x3000fe96   0x3000fe96   0x00000002   PAD
    0x3000fe98   0x3000fe98   0x00000046   Code   RO         1407    .text.proceedSYNC   sync.o
    0x3000fede   0x3000fede   0x00000002   PAD
    0x3000fee0   0x3000fee0   0x0000011a   Code   RO         1639    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x3000fffa   0x3000fffa   0x00000006   PAD
    0x30010000   0x30010000   0x00000154   Code   RO         1627    .text.prvAddNewTaskToReadyList  tasks.o
    0x30010154   0x30010154   0x00000004   PAD
    0x30010158   0x30010158   0x0000008c   Code   RO         1779    .text.prvCheckForValidListAndQueue  timers.o
    0x300101e4   0x300101e4   0x00000004   PAD
    0x300101e8   0x300101e8   0x0000005a   Code   RO         1745    .text.prvCheckTasksWaitingTermination  tasks.o
    0x30010242   0x30010242   0x00000006   PAD
    0x30010248   0x30010248   0x00000042   Code   RO         1522    .text.prvCopyDataFromQueue  queue.o
    0x3001028a   0x3001028a   0x00000006   PAD
    0x30010290   0x30010290   0x00000018   Code   RO         1633    .text.prvDeleteTCB  tasks.o
    0x300102a8   0x300102a8   0x00000040   Code   RO         1817    .text.prvGetNextExpireTime  timers.o
    0x300102e8   0x300102e8   0x000000ae   Code   RO         1886    .text.prvHeapInit   heap_4.o
    0x30010396   0x30010396   0x00000002   PAD
    0x30010398   0x30010398   0x00000038   Code   RO         1665    .text.prvIdleTask   tasks.o
    0x300103d0   0x300103d0   0x00000048   Code   RO         1494    .text.prvInitialiseNewQueue  queue.o
    0x30010418   0x30010418   0x0000012c   Code   RO         1625    .text.prvInitialiseNewTask  tasks.o
    0x30010544   0x30010544   0x00000004   PAD
    0x30010548   0x30010548   0x0000008e   Code   RO         1743    .text.prvInitialiseTaskLists  tasks.o
    0x300105d6   0x300105d6   0x00000002   PAD
    0x300105d8   0x300105d8   0x000000c6   Code   RO         1888    .text.prvInsertBlockIntoFreeList  heap_4.o
    0x3001069e   0x3001069e   0x00000002   PAD
    0x300106a0   0x300106a0   0x00000086   Code   RO         1831    .text.prvInsertTimerInActiveList  timers.o
    0x30010726   0x30010726   0x00000002   PAD
    0x30010728   0x30010728   0x00000028   Code   RO         1524    .text.prvIsQueueEmpty  queue.o
    0x30010750   0x30010750   0x00000028   Code   RO         1860    .text.prvPortStartFirstTask  port.o
    0x30010778   0x30010778   0x00000054   Code   RO         1825    .text.prvProcessExpiredTimer  timers.o
    0x300107cc   0x300107cc   0x00000004   PAD
    0x300107d0   0x300107d0   0x00000188   Code   RO         1821    .text.prvProcessReceivedCommands  timers.o
    0x30010958   0x30010958   0x0000009a   Code   RO         1819    .text.prvProcessTimerOrBlockTask  timers.o
    0x300109f2   0x300109f2   0x00000006   PAD
    0x300109f8   0x300109f8   0x00000034   Code   RO         1829    .text.prvReloadTimer  timers.o
    0x30010a2c   0x30010a2c   0x00000004   PAD
    0x30010a30   0x30010a30   0x0000003c   Code   RO         1631    .text.prvResetNextTaskUnblockTime  tasks.o
    0x30010a6c   0x30010a6c   0x00000004   PAD
    0x30010a70   0x30010a70   0x00000044   Code   RO         1823    .text.prvSampleTimeNow  timers.o
    0x30010ab4   0x30010ab4   0x00000004   PAD
    0x30010ab8   0x30010ab8   0x00000052   Code   RO         1827    .text.prvSwitchTimerLists  timers.o
    0x30010b0a   0x30010b0a   0x00000006   PAD
    0x30010b10   0x30010b10   0x00000054   Code   RO         1850    .text.prvTaskExitError  port.o
    0x30010b64   0x30010b64   0x00000004   PAD
    0x30010b68   0x30010b68   0x0000001e   Code   RO         1781    .text.prvTimerTask  timers.o
    0x30010b86   0x30010b86   0x00000002   PAD
    0x30010b88   0x30010b88   0x000000ae   Code   RO         1514    .text.prvUnlockQueue  queue.o
    0x30010c36   0x30010c36   0x00000002   PAD
    0x30010c38   0x30010c38   0x000001d0   Code   RO         1884    .text.pvPortMalloc  heap_4.o
    0x30010e08   0x30010e08   0x0000005e   Code   RO         1848    .text.pxPortInitialiseStack  port.o
    0x30010e66   0x30010e66   0x00000002   PAD
    0x30010e68   0x30010e68   0x00000052   Code   RO         1346    .text.readNetworkDict  sdo.o
    0x30010eba   0x30010eba   0x00000006   PAD
    0x30010ec0   0x30010ec0   0x00000034   Code   RO         1302    .text.resetSDO      sdo.o
    0x30010ef4   0x30010ef4   0x00000004   PAD
    0x30010ef8   0x30010ef8   0x00000070   Code   RO         1300    .text.resetSDOline  sdo.o
    0x30010f68   0x30010f68   0x000001e6   Code   RO         1271    .text.sendOnePDOevent  pdo.o
    0x3001114e   0x3001114e   0x00000002   PAD
    0x30011150   0x30011150   0x0000003c   Code   RO         1275    .text.sendPdo       pdo.o
    0x3001118c   0x3001118c   0x00000004   PAD
    0x30011190   0x30011190   0x00000124   Code   RO         1330    .text.sendSDO       sdo.o
    0x300112b4   0x300112b4   0x00000004   PAD
    0x300112b8   0x300112b8   0x00000078   Code   RO         1298    .text.sendSDOabort  sdo.o
    0x30011330   0x30011330   0x0000001e   Code   RO         1397    .text.sendSYNC      sync.o
    0x3001134e   0x3001134e   0x00000002   PAD
    0x30011350   0x30011350   0x0000002c   Code   RO         1405    .text.sendSYNCMessage  sync.o
    0x3001137c   0x3001137c   0x00000004   PAD
    0x30011380   0x30011380   0x000002f4   Code   RO         1373    .text.setNodeId     states.o
    0x30011674   0x30011674   0x00000004   PAD
    0x30011678   0x30011678   0x0000003a   Code   RO         1328    .text.setSDOlineRestBytes  sdo.o
    0x300116b2   0x300116b2   0x00000006   PAD
    0x300116b8   0x300116b8   0x00000132   Code   RO         1369    .text.setState      states.o
    0x300117ea   0x300117ea   0x00000006   PAD
    0x300117f0   0x300117f0   0x0000001c   Code   RO            9    .text.setTimer      flexcan_interrupt_transfer.o
    0x3001180c   0x3001180c   0x00000004   PAD
    0x30011810   0x30011810   0x0000003c   Code   RO         1231    .text.slaveSendBootUp  nmtslave.o
    0x3001184c   0x3001184c   0x00000004   PAD
    0x30011850   0x30011850   0x00000082   Code   RO         1401    .text.startSYNC     sync.o
    0x300118d2   0x300118d2   0x00000006   PAD
    0x300118d8   0x300118d8   0x00000038   Code   RO         1403    .text.stopSYNC      sync.o
    0x30011910   0x30011910   0x000001bc   Code   RO         1367    .text.switchCommunicationState  states.o
    0x30011acc   0x30011acc   0x00000004   PAD
    0x30011ad0   0x30011ad0   0x00000048   Code   RO         1481    .text.uxListRemove  list.o
    0x30011b18   0x30011b18   0x0000002e   Code   RO         1473    .text.vListInitialise  list.o
    0x30011b46   0x30011b46   0x00000002   PAD
    0x30011b48   0x30011b48   0x0000000e   Code   RO         1475    .text.vListInitialiseItem  list.o
    0x30011b56   0x30011b56   0x00000002   PAD
    0x30011b58   0x30011b58   0x0000006a   Code   RO         1479    .text.vListInsert   list.o
    0x30011bc2   0x30011bc2   0x00000006   PAD
    0x30011bc8   0x30011bc8   0x0000003a   Code   RO         1477    .text.vListInsertEnd  list.o
    0x30011c02   0x30011c02   0x00000006   PAD
    0x30011c08   0x30011c08   0x00000014   Code   RO         1858    .text.vPortEnableVFP  port.o
    0x30011c1c   0x30011c1c   0x00000004   PAD
    0x30011c20   0x30011c20   0x0000005e   Code   RO         1864    .text.vPortEnterCritical  port.o
    0x30011c7e   0x30011c7e   0x00000002   PAD
    0x30011c80   0x30011c80   0x0000004e   Code   RO         1866    .text.vPortExitCritical  port.o
    0x30011cce   0x30011cce   0x00000002   PAD
    0x30011cd0   0x30011cd0   0x000000c2   Code   RO         1890    .text.vPortFree     heap_4.o
    0x30011d92   0x30011d92   0x00000006   PAD
    0x30011d98   0x30011d98   0x00000044   Code   RO         1856    .text.vPortSetupTimerInterrupt  port.o
    0x30011ddc   0x30011ddc   0x00000004   PAD
    0x30011de0   0x30011de0   0x000000ba   Code   RO         1554    .text.vQueueAddToRegistry  queue.o
    0x30011e9a   0x30011e9a   0x00000006   PAD
    0x30011ea0   0x30011ea0   0x00000064   Code   RO         1558    .text.vQueueWaitForMessageRestricted  queue.o
    0x30011f04   0x30011f04   0x00000004   PAD
    0x30011f08   0x30011f08   0x00000158   Code   RO         1629    .text.vTaskDelete   tasks.o
    0x30012060   0x30012060   0x00000024   Code   RO         1697    .text.vTaskInternalSetTimeOutState  tasks.o
    0x30012084   0x30012084   0x00000004   PAD
    0x30012088   0x30012088   0x0000000e   Code   RO         1701    .text.vTaskMissedYield  tasks.o
    0x30012096   0x30012096   0x00000002   PAD
    0x30012098   0x30012098   0x00000046   Code   RO         1685    .text.vTaskPlaceOnEventList  tasks.o
    0x300120de   0x300120de   0x00000002   PAD
    0x300120e0   0x300120e0   0x00000080   Code   RO         1689    .text.vTaskPlaceOnEventListRestricted  tasks.o
    0x30012160   0x30012160   0x000000ba   Code   RO         1663    .text.vTaskStartScheduler  tasks.o
    0x3001221a   0x3001221a   0x00000006   PAD
    0x30012220   0x30012220   0x00000010   Code   RO         1637    .text.vTaskSuspendAll  tasks.o
    0x30012230   0x30012230   0x000000c2   Code   RO         1655    .text.vTaskSwitchContext  tasks.o
    0x300122f2   0x300122f2   0x00000006   PAD
    0x300122f8   0x300122f8   0x0000006a   Code   RO         1338    .text.writeNetworkDict  sdo.o
    0x30012362   0x30012362   0x00000006   PAD
    0x30012368   0x30012368   0x000000fe   Code   RO         1854    .text.xPortStartScheduler  port.o
    0x30012466   0x30012466   0x00000002   PAD
    0x30012468   0x30012468   0x0000009e   Code   RO         1492    .text.xQueueGenericCreate  queue.o
    0x30012506   0x30012506   0x00000002   PAD
    0x30012508   0x30012508   0x00000110   Code   RO         1490    .text.xQueueGenericReset  queue.o
    0x30012618   0x30012618   0x000001e8   Code   RO         1520    .text.xQueueReceive  queue.o
    0x30012800   0x30012800   0x000000da   Code   RO         1699    .text.xTaskCheckForTimeOut  tasks.o
    0x300128da   0x300128da   0x00000006   PAD
    0x300128e0   0x300128e0   0x000000a2   Code   RO         1623    .text.xTaskCreate   tasks.o
    0x30012982   0x30012982   0x00000006   PAD
    0x30012988   0x30012988   0x00000038   Code   RO         1717    .text.xTaskGetSchedulerState  tasks.o
    0x300129c0   0x300129c0   0x00000014   Code   RO         1671    .text.xTaskGetTickCount  tasks.o
    0x300129d4   0x300129d4   0x00000004   PAD
    0x300129d8   0x300129d8   0x0000023a   Code   RO         1669    .text.xTaskIncrementTick  tasks.o
    0x30012c12   0x30012c12   0x00000006   PAD
    0x30012c18   0x30012c18   0x00000190   Code   RO         1691    .text.xTaskRemoveFromEventList  tasks.o
    0x30012da8   0x30012da8   0x00000226   Code   RO         1641    .text.xTaskResumeAll  tasks.o
    0x30012fce   0x30012fce   0x00000002   PAD
    0x30012fd0   0x30012fd0   0x0000006e   Code   RO         1777    .text.xTimerCreateTimerTask  timers.o
    0x3001303e   0x3001303e   0x0000000e   Code   RO         2029    i.__scatterload_copy  mc_w.l(handlers.o)
    0x3001304c   0x3001304c   0x00000002   Code   RO         2030    i.__scatterload_null  mc_w.l(handlers.o)
    0x3001304e   0x3001304e   0x0000000e   Code   RO         2031    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x3001305c   0x3001305c   0x00000002   Data   RO          124    .rodata.Master_ObjdictSize  master.o
    0x3001305e   0x3001305e   0x0000000c   Data   RO          122    .rodata.Master_firstIndex  master.o
    0x3001306a   0x3001306a   0x00000001   Data   RO           88    .rodata.Master_iam_a_slave  master.o
    0x3001306b   0x3001306b   0x00000001   PAD
    0x3001306c   0x3001306c   0x0000000c   Data   RO          123    .rodata.Master_lastIndex  master.o
    0x30013078   0x30013078   0x00000028   Data   RO          120    .rodata.Master_objdict  master.o
    0x300130a0   0x300130a0   0x00000008   Data   RO          208    .rodata.armPllConfig_BOARD_BootClockRUN  clock_config.o
    0x300130a8   0x300130a8   0x00000034   Data   RO         1062    .rodata.s_LpuartAdapterBase  fsl_adapter_lpuart.o
    0x300130dc   0x300130dc   0x00000278   Data   RO           73    .rodata.s_clockSourceName  flexcan_interrupt_transfer.o
    0x30013354   0x30013354   0x00000278   Data   RO          174    .rodata.s_clockSourceName  board.o
    0x300135cc   0x300135cc   0x00000278   Data   RO          215    .rodata.s_clockSourceName  clock_config.o
    0x30013844   0x30013844   0x00000278   Data   RO          652    .rodata.s_clockSourceName  fsl_clock.o
    0x30013abc   0x30013abc   0x00000010   Data   RO          459    .rodata.s_flexcanBases  fsl_flexcan.o
    0x30013acc   0x30013acc   0x00000008   Data   RO          468    .rodata.s_flexcanBusOffIRQ  fsl_flexcan.o
    0x30013ad4   0x30013ad4   0x00000004   Data   RO          461    .rodata.s_flexcanClock  fsl_flexcan.o
    0x30013ad8   0x30013ad8   0x00000008   Data   RO          467    .rodata.s_flexcanErrorIRQ  fsl_flexcan.o
    0x30013ae0   0x30013ae0   0x00000008   Data   RO          469    .rodata.s_flexcanMbIRQ  fsl_flexcan.o
    0x30013ae8   0x30013ae8   0x00000008   Data   RO          464    .rodata.s_flexcanRxWarningIRQ  fsl_flexcan.o
    0x30013af0   0x30013af0   0x00000008   Data   RO          465    .rodata.s_flexcanTxWarningIRQ  fsl_flexcan.o
    0x30013af8   0x30013af8   0x00000008   Data   RO          466    .rodata.s_flexcanWakeUpIRQ  fsl_flexcan.o
    0x30013b00   0x30013b00   0x0000001c   Data   RO         1023    .rodata.s_gptBases  fsl_gpt.o
    0x30013b1c   0x30013b1c   0x00000007   Data   RO         1022    .rodata.s_gptClocks  fsl_gpt.o
    0x30013b23   0x30013b23   0x00000001   PAD
    0x30013b24   0x30013b24   0x00000034   Data   RO          795    .rodata.s_lpuartBases  fsl_lpuart.o
    0x30013b58   0x30013b58   0x0000000d   Data   RO          797    .rodata.s_lpuartClock  fsl_lpuart.o
    0x30013b65   0x30013b65   0x000003d9   Data   RO           60    .rodata.str1.1      flexcan_interrupt_transfer.o
    0x30013f3e   0x30013f3e   0x00000045   Data   RO          173    .rodata.str1.1      board.o
    0x30013f83   0x30013f83   0x0000002b   Data   RO          306    .rodata.str1.1      fsl_assert.o
    0x30013fae   0x30013fae   0x000004f6   Data   RO          460    .rodata.str1.1      fsl_flexcan.o
    0x300144a4   0x300144a4   0x0000022b   Data   RO          651    .rodata.str1.1      fsl_clock.o
    0x300146cf   0x300146cf   0x00000092   Data   RO          679    .rodata.str1.1      fsl_common_arm.o
    0x30014761   0x30014761   0x000001c4   Data   RO          796    .rodata.str1.1      fsl_lpuart.o
    0x30014925   0x30014925   0x0000006f   Data   RO         1021    .rodata.str1.1      fsl_gpt.o
    0x30014994   0x30014994   0x000000bd   Data   RO         1061    .rodata.str1.1      fsl_adapter_lpuart.o
    0x30014a51   0x30014a51   0x00000005   Data   RO         1763    .rodata.str1.1      tasks.o
    0x30014a56   0x30014a56   0x0000000d   Data   RO         1834    .rodata.str1.1      timers.o
    0x30014a63   0x30014a63   0x00000001   PAD
    0x30014a64   0x30014a64   0x0000000c   Data   RO          209    .rodata.sysPll2Config_BOARD_BootClockRUN  clock_config.o
    0x30014a70   0x30014a70   0x00000004   Data   RO         1748    .rodata.uxTopUsedPriority  tasks.o
    0x30014a74   0x30014a74   0x00000014   Data   RO          210    .rodata.videoPllConfig_BOARD_BootClockRUN  clock_config.o
    0x30014a88   0x30014a88   0x00000020   Data   RO         2028    Region$$Table       anon$$obj.o



  Load Region LR_CORE1_IMAGE (Base: 0x30fc0000, Size: 0x00000000, Max: 0xffffffff, ABSOLUTE)

    Execution Region CORE1_REGION (Exec base: 0x30fc0000, Load base: 0x30fc0000, Size: 0x00000000, Max: 0x00040000, ABSOLUTE)

    **** No section assigned to this execution region ****


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

      1234          0        701          0          0      10917   board.o
      2996          0        672          0          0      47487   clock_config.o
       254          0          0          0          0       7602   emcy.o
         0          0        512          0          0       2652   evkmimxrt1170_flexspi_nor_config.o
      3868          0       1617          4       1017      26631   flexcan_interrupt_transfer.o
       762          0        241          0          0       6151   fsl_adapter_lpuart.o
      1708         14          0          0          0       8867   fsl_anatop_ai.o
        32          0         43          0          0        844   fsl_assert.o
      4772         52       1187          0          0      40601   fsl_clock.o
       170          0        146          0          0       2356   fsl_common_arm.o
        78          0          0          0          0      18911   fsl_dcdc.o
      1536         20          0          0         20       6965   fsl_debug_console.o
      8972          4       1338          4         16      47118   fsl_flexcan.o
         0          0         48          0          0       1034   fsl_flexspi_nor_boot.o
       654          0        146          0          0       9704   fsl_gpt.o
      2390          0        517         52         52      32337   fsl_lpuart.o
       794          0          0          0          0      18381   fsl_pmu.o
      1030          0          0          0      10268       4633   heap_4.o
      1590          0          0          0          0       9279   lifegrd.o
       296          0          0          0          0       2232   list.o
       198          0         67       1447         47       7593   master.o
       124          0          0          0          0       5979   nmtmaster.o
       380          0          0          0          0       5996   nmtslave.o
      1010          0          0          0          0       7400   objacces.o
      3648          0          0          0          0      12234   pdo.o
       672          0          0          0          0       8059   pin_mux.o
       932         16          0          4          5       3756   port.o
      1556          0          0          0         64      15711   queue.o
     15974         14          0          0          0      24052   sdo.o
       724        356       1024          0          0       3605   startup_mimxrt1176_cm7.o
      1774         16          0          0          0       8143   states.o
       388          0          0          0          0       6629   sync.o
       444          0          0          4          0       4721   system_mimxrt1176_cm7.o
      4258          0          9          0        260      24846   tasks.o
       758          0          0          6        192       6907   timer.o
      1310         10         13          0         60       9553   timers.o

    ----------------------------------------------------------------------
     68250        514       8316       1532     538360     459886   Object Totals
         0          0         32          0     526336          0   (incl. Generated)
       964         12          3         11         23          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

        86          0          0          0          0          0   __dczerorl2.o
         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry4.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        48         10          0          0          0         68   init.o
        30          0          0          0          0         68   llshl.o
        32          0          0          0          0         68   llushr.o
        26          0          0          0          0         80   memcmp.o
        40          0          0          0          0         76   memcpy.o
        18          0          0          0          0         76   memset.o
        14          0          0          0          0         68   strlen.o
        98          0          0          0          0         92   uldiv.o

    ----------------------------------------------------------------------
       450         18          0          0          0        596   Library Totals
         8          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       442         18          0          0          0        596   mc_w.l

    ----------------------------------------------------------------------
       450         18          0          0          0        596   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     68700        532       8316       1532     538360     459918   Grand Totals
     68700        532       8316        264     538360     459918   ELF Image Totals (compressed)
     68700        532       8316        264          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                77016 (  75.21kB)
    Total RW  Size (RW Data + ZI Data)            539892 ( 527.24kB)
    Total ROM Size (Code + RO Data + RW Data)      77280 (  75.47kB)

==============================================================================

